<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v20.2"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid"
                    xmlns:dxpgi="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/internal"
                    xmlns:dxpgt="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/PropertyGrid/VS2019Dark/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <Style x:Key="{dxpgt:PropertyGridControlThemeKey ResourceKey=SearchEditStyle}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="Background"
                Value="$Control.Background"
                cs:id="Setter_0000"/>
        <Setter Property="ShowBorder" Value="True"/>
    </Style>

    <Style x:Key="{dxpgt:PropertyGridControlThemeKey ResourceKey=SearchControlStyle}" TargetType="{x:Type dxe:SearchControl}">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="{dxpgt:PropertyGridControlThemeKey ResourceKey=TopPanelStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="Root"
                            Background="$Window.Background"
                            BorderBrush="$Border"
                            BorderThickness="0,0,0,1"
                            Padding="3"
                            cs:id="Border_0001">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinHeight"
                                    TargetName="Root"
                                    Value="50"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- View Button -->

    <Style x:Key="{dxpgt:PropertyGridControlThemeKey ResourceKey=ViewKindButtonStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Root">
                        <Border x:Name="IsDefault"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                cs:id="Border_0000"/>
                        <Grid Margin="5">
                            <Path x:Name="ListView" Style="{StaticResource UIShape.ListView}"/>
                            <Path x:Name="GroupView" Style="{StaticResource UIShape.GroupView}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DataContext" Value="{x:Static dxpg:ApplyingMode.WhenNoGrouping}">
                            <Setter Property="Visibility"
                                    TargetName="GroupView"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="ListView"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="DataContext" Value="{x:Static dxpg:ApplyingMode.WhenGrouping}">
                            <Setter Property="Visibility"
                                    TargetName="GroupView"
                                    Value="Visible"/>
                            <Setter Property="Visibility"
                                    TargetName="ListView"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill"
                                    TargetName="GroupView"
                                    Value="$Focused"
                                    cs:id="Setter_0005"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0000"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$HoverBorder"
                                    cs:id="Setter_0012"/>
                            <Setter Property="Fill"
                                    TargetName="ListView"
                                    Value="$Focused"
                                    cs:id="Setter_0004"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill"
                                    TargetName="GroupView"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0007"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0001"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$SelectionBorder"
                                    cs:id="Setter_0013"/>
                            <Setter Property="Fill"
                                    TargetName="ListView"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0006"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill"
                                    TargetName="GroupView"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0009"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0002"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$SelectionBorder"
                                    cs:id="Setter_0014"/>
                            <Setter Property="Fill"
                                    TargetName="ListView"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0008"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill"
                                    TargetName="GroupView"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0011"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0003"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$SelectionBorder"
                                    cs:id="Setter_0015"/>
                            <Setter Property="Fill"
                                    TargetName="ListView"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0010"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44"/>
                <Setter Property="MinWidth" Value="44"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>