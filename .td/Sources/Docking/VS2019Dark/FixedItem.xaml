<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                    xmlns:dxdop="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform"
                    xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
                    xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Docking/VS2019Dark/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <ControlTemplate x:Key="{dxdot:SplitterControlElementsThemeKey ResourceKey=Template}">
        <Border x:Name="PART_Border"
                Background="Transparent"
                dxdove:DockPane.HitTestType="Bounds"
                Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
                Padding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).Visibility, RelativeSource={RelativeSource TemplatedParent}}"
                cs:id="Border_0000">
            <dxdove:DropBoundsControl x:Name="Drop" Margin="1">
                <dx:Container Background="{TemplateBinding Background}">
                    <dx:Container x:Name="PART_HorizontalRootElement">
                        <Path x:Name="PathHorizontal"
                              Fill="$Foreground"
                              Style="{StaticResource UIShape.SizeGrip.Horizontal}"
                              cs:id="Path_0000"/>
                    </dx:Container>
                    <dx:Container x:Name="PART_VerticalRootElement">
                        <Path x:Name="PathVertical"
                              Fill="$Foreground"
                              Style="{StaticResource UIShape.SizeGrip.Vertical}"
                              cs:id="Path_0001"/>
                    </dx:Container>
                </dx:Container>
            </dxdove:DropBoundsControl>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PART_Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$HoverBackground"
                                            cs:id="ColorAnimation_0000"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PathHorizontal"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$Focused"
                                            cs:id="ColorAnimation_0002"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PathVertical"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$Focused"
                                            cs:id="ColorAnimation_0003"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PART_Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$SelectionBackground"
                                            cs:id="ColorAnimation_0001"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PathHorizontal"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$Backstage.Focused"
                                            cs:id="ColorAnimation_0004"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PathVertical"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$Backstage.Focused"
                                            cs:id="ColorAnimation_0005"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:EmptySpaceControlElementsThemeKey ResourceKey=Template}">
        <Border x:Name="PART_Border"
                Background="Transparent"
                dxdove:DockPane.HitTestType="Bounds"
                Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
                Padding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).Visibility, RelativeSource={RelativeSource TemplatedParent}}"
                cs:id="Border_0000">
            <dxdove:DropBoundsControl>
                <Grid/>
            </dxdove:DropBoundsControl>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="{dxdot:LabelControlElementsThemeKey ResourceKey=Caption}">
        <Border Background="Transparent"
                DataContext="{Binding LayoutItem}"
                dxdove:DockPane.HitTestType="Header"
                cs:id="Border_0000">
            <dxdove:TemplatedCaptionControl LayoutItem="{Binding}"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LabelControlElementsThemeKey ResourceKey=Content}">
        <Border DataContext="{Binding LayoutItem}" dxdove:DockPane.HitTestType="Content">
            <ContentPresenter Content="{Binding Path=Content}"
                              ContentTemplate="{Binding DataContext.LayoutItem.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplateSelector="{Binding DataContext.LayoutItem.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="{dxdot:LabelControlElementsThemeKey ResourceKey=Template}" TargetType="dxdove:psvHeaderedContentControl">
        <Border x:Name="PART_Border"
                Background="Transparent"
                dxdove:DockPane.HitTestType="Bounds"
                Margin="{Binding LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
                Padding="{Binding LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding LayoutItem.Visibility, RelativeSource={RelativeSource TemplatedParent}}"
                cs:id="Border_0000">
            <dxdove:DropBoundsControl>
                <Grid>
                    <dxdove:LabelControlCaptionPresenter x:Name="PART_Caption"
                                                         Content="{TemplateBinding Header}"
                                                         ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                         HorizontalAlignment="{Binding LayoutItem.CaptionHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                         VerticalAlignment="{Binding LayoutItem.CaptionVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Visibility="{Binding LayoutItem.HasContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityInverseConverter}}"/>
                    <dxdove:LabelControlContentPresenter x:Name="PART_Content"
                                                         Content="{TemplateBinding Content}"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                                         HorizontalAlignment="{Binding LayoutItem.ContentHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                                                         VerticalAlignment="{Binding LayoutItem.ContentVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                         Visibility="{Binding LayoutItem.HasContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </dxdove:DropBoundsControl>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:SeparatorControlElementsThemeKey ResourceKey=Template}">
        <Border x:Name="PART_Border"
                Background="Transparent"
                dxdove:DockPane.HitTestType="Bounds"
                Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
                Padding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).Visibility, RelativeSource={RelativeSource TemplatedParent}}"
                cs:id="Border_0000">
            <dxdove:DropBoundsControl>
                <Grid>
                    <Border x:Name="PART_VerticalRootElement"
                            Background="$Delimiter"
                            Margin="4"
                            Width="1"
                            cs:id="Border_0001"/>
                    <Border x:Name="PART_HorizontalRootElement"
                            Background="$Delimiter"
                            Height="1"
                            Margin="4"
                            cs:id="Border_0002"/>
                </Grid>
            </dxdove:DropBoundsControl>
        </Border>
    </ControlTemplate>

</ResourceDictionary>