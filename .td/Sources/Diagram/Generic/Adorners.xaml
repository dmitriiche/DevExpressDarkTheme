<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram"
                    xmlns:dxdiagcore="http://schemas.devexpress.com/winfx/2008/xaml/diagram/internal"
                    xmlns:dxdiagt="http://schemas.devexpress.com/winfx/2008/xaml/diagram/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="BoxStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}"/>
        <Setter Property="Fill" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ResizeBoxBackground}}"/>
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.SelectionAdorner}" TargetType="{x:Type dxdiag:SelectionAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:SelectionAdorner}">
                    <Grid Name="root">
                        <Image x:Name="RotationIcon"
                               Height="21"
                               HorizontalAlignment="Center"
                               Margin="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=RotationAdornerMargin}}"
                               Source="{dxdiag:DiagramSvgImage Size='21,21', Path=Images/Svg/Rotate.svg}"
                               VerticalAlignment="Top"
                               Width="21"/>
                        <Grid Margin="-3">
                            <Rectangle x:Name="rect"
                                       Margin="3"
                                       Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}"/>
                            <Border x:Name="MoveBorder"
                                    BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerMoveBorderBrush}}"
                                    BorderThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerMoveBorderThickness}}"/>
                            <ItemsControl ItemsSource="{TemplateBinding ResizeModes}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle dxdiag:DiagramInput.InputElementFactory="{Binding InputElementFactory}"
                                                   HorizontalAlignment="{Binding HorizontalAlignment}"
                                                   Style="{StaticResource BoxStyle}"
                                                   VerticalAlignment="{Binding VerticalAlignment}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanResize" Value="False">
                            <Setter Property="StrokeThickness"
                                    TargetName="rect"
                                    Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerRectStrokeThickness}}"/>
                        </Trigger>
                        <Trigger Property="IsMultipleSelection" Value="True">
                            <Setter Property="Margin"
                                    TargetName="root"
                                    Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="CanRotate" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="RotationIcon"
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.SelectionPartAdorner}" TargetType="{x:Type dxdiag:SelectionPartAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:SelectionPartAdorner}">
                    <Border Name="border"
                            BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartBorderBrush}}"
                            BorderThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartDefaultBorderThickness}}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPrimarySelection" Value="True">
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartSelectBorderThickness}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ShapeParametersAdorner}" TargetType="{x:Type dxdiag:ShapeParametersAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ShapeParametersAdorner}">
                    <dxdiag:ScaleItemsControl x:Name="PART_ItemsControl"
                                              ItemsSource="{Binding Parameters, RelativeSource={RelativeSource TemplatedParent}}"
                                              Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Point}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Rectangle Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ParameterPointsBackground}}"
                                           Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}"
                                           Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ParameterPointsStroke}}"
                                           StrokeThickness="1"
                                           Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </dxdiag:ScaleItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorSelectionAdorner}" TargetType="{x:Type dxdiag:ConnectorSelectionAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorSelectionAdorner}">
                    <ControlTemplate.Resources>
                        <Style x:Key="BoxContainerStyle" TargetType="Border">
                            <Setter Property="Padding" Value="4"/>
                            <Setter Property="Background"
                                    Value="Transparent"
                                    cs:id="Setter_0000"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <dxdiag:ConnectorPointItemsControl x:Name="Points"
                                                           ItemsSource="{Binding Points, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsControl.ItemContainerStyle>
                                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Position}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type dxdiag:ConnectorPointViewModel}">
                                    <dxdiag:ConnectorPointAdorner Connector="{Binding Connector}" PointIndex="{Binding Index}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </dxdiag:ConnectorPointItemsControl>
                        <dxdiag:ConnectorPointItemsControl x:Name="Segments"
                                                           ItemsSource="{Binding Segments, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsControl.ItemContainerStyle>
                                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Position}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type dxdiag:ConnectorPointViewModel}">
                                    <dxdiag:ConnectorSegmentAdorner Connector="{Binding Connector}" Segment="{Binding Segment}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </dxdiag:ConnectorPointItemsControl>
                        <dxdiag:ScaleCanvas Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid dxdiag:ScaleCanvas.Position="{Binding BeginPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid x:Name="BeginElement">
                                    <Border x:Name="BeginFreeElement" Style="{StaticResource BoxContainerStyle}">
                                        <Rectangle Style="{StaticResource BoxStyle}"/>
                                    </Border>
                                    <Grid x:Name="BeginConnectedElement"
                                          Background="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementBackground}}"
                                          Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementSize}}"
                                          Visibility="Collapsed"
                                          Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementSize}}">
                                        <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerFill}}"
                                                 Margin="3"
                                                 Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerStroke}}"/>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="BeginProtectionMarker"
                                      Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerSize}}"
                                      Visibility="Collapsed"
                                      Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerSize}}">
                                    <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerFill}}"
                                             Margin="3"
                                             Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerStroke}}"
                                             StrokeThickness="1"/>
                                </Grid>
                            </Grid>
                            <Grid dxdiag:ScaleCanvas.Position="{Binding EndPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid x:Name="EndElement">
                                    <Border x:Name="EndFreeElement" Style="{StaticResource BoxContainerStyle}">
                                        <Rectangle Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndFreeElementBackground}}" Style="{StaticResource BoxStyle}"/>
                                    </Border>
                                    <Grid x:Name="EndConnectedElement"
                                          Background="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementBackground}}"
                                          Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementSize}}"
                                          Visibility="Collapsed"
                                          Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementSize}}">
                                        <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerEndFill}}"
                                                 Margin="1"
                                                 Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerStroke}}"/>
                                        <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerFill}}" Margin="4"/>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="EndProtectionMarker"
                                      Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerSize}}"
                                      Visibility="Collapsed"
                                      Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerSize}}">
                                    <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerFill}}"
                                             Margin="3"
                                             Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorProtectionMarkerStroke}}"
                                             StrokeThickness="2"/>
                                </Grid>
                            </Grid>
                        </dxdiag:ScaleCanvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBeginPointConnected" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="BeginFreeElement"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="BeginConnectedElement"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEndPointConnected" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="EndFreeElement"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="EndConnectedElement"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="CanDragBeginPoint" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="BeginElement"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="BeginProtectionMarker"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="CanDragEndPoint" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="EndElement"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="EndProtectionMarker"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="CanChangeRoute" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="Points"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="Segments"
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorSegmentAdorner}" TargetType="{x:Type dxdiag:ConnectorSegmentAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorSegmentAdorner}">
                    <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointFill}}"
                             Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}}"
                             Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointStroke}}"
                             StrokeThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointStrokeThickness}}"
                             Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorPointAdorner}" TargetType="{x:Type dxdiag:ConnectorPointAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorPointAdorner}">
                    <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointFill}}"
                             Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}}"
                             Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointStroke}}"
                             StrokeThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointStrokeThickness}}"
                             Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorSelectionPartAdorner}" TargetType="{x:Type dxdiag:ConnectorSelectionPartAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorSelectionPartAdorner}">
                    <dxdiag:ShapePresenter x:Name="shapePresenter"
                                           Shape="{TemplateBinding Shape}"
                                           Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartBorderBrush}}"
                                           StrokeThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorSelectionPartDefaultThickness}}"
                                           Zoom="{TemplateBinding dxdiag:AdornerLayer.Zoom}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPrimarySelection" Value="True">
                            <Setter Property="StrokeThickness"
                                    TargetName="shapePresenter"
                                    Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorSelectionPartSelectedThickness}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConnectorPreviewAdornerBaseStyle" TargetType="{x:Type dxdiag:ConnectorPreviewAdornerBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorPreviewAdornerBase}">
                    <Grid>
                        <dxdiag:ShapePresenter Background="{TemplateBinding Stroke}"
                                               Shape="{TemplateBinding Shape}"
                                               Stroke="{TemplateBinding Stroke}"
                                               StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                               StrokeThickness="{TemplateBinding StrokeThickness}"
                                               Zoom="{TemplateBinding dxdiag:AdornerLayer.Zoom}"/>
                        <dxdiag:ScaleCanvas>
                            <TextBlock Background="{TemplateBinding ContentBackground}"
                                       dxdiag:ScaleCanvas.Position="{TemplateBinding ContentPosition}"
                                       Text="{TemplateBinding Content}"
                                       TextDecorations="{TemplateBinding TextDecorations}"/>
                        </dxdiag:ScaleCanvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorDragPreviewAdorner}"
           BasedOn="{StaticResource ConnectorPreviewAdornerBaseStyle}"
           TargetType="{x:Type dxdiag:ConnectorDragPreviewAdorner}">
        <Setter Property="Opacity" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=DragPreviewOpacity}}"/>
        <Setter Property="Background" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragColor}}"/>
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragColor}}"/>
        <Setter Property="StrokeThickness" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragThickness}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorMovePointPreviewAdorner}"
           BasedOn="{StaticResource ConnectorPreviewAdornerBaseStyle}"
           TargetType="{x:Type dxdiag:ConnectorMovePointPreviewAdorner}">
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorMovePointColor}}"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.GlueToItemAdorner}" TargetType="{x:Type dxdiag:GlueToItemAdorner}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrush}}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:GlueToItemAdorner}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="-3"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="State" Value="Disabled">
                            <Setter Property="BorderBrush" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrushDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.InsertTargetAdorner}" TargetType="{x:Type dxdiag:InsertTargetAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:InsertTargetAdorner}">
                    <Border BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=InsertTargetHighlightBrush}}"
                            BorderThickness="3"
                            Margin="-3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.GlueToPointAdorner}" TargetType="{x:Type dxdiag:GlueToPointAdorner}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderThickness}}"/>
        <!--<Setter Property="Width" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:GlueToPointAdorner}">
                    <dxdiag:ScaleCanvas>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}}"
                                Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}}"/>
                    </dxdiag:ScaleCanvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="State" Value="Disabled">
                            <Setter Property="BorderBrush" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrushDisabled}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectionPointsAdorner}" TargetType="{x:Type dxdiag:ConnectionPointsAdorner}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectionPointsAdorner}">
                    <dxdiag:ScaleItemsControl ItemsSource="{Binding Path=Points, RelativeSource={RelativeSource TemplatedParent}}" Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Position}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointBrush}}"
                                         Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointSize}}"
                                         Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointSize}}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </dxdiag:ScaleItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="boundsSnapLineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SnapLineBrush}}"/>
        <Setter Property="StrokeDashArray" Value="4,2"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="X1" Value="{Binding From.X, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Y1" Value="{Binding From.Y, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="X2" Value="{Binding To.X, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Y2" Value="{Binding To.Y, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.HorizontalBoundsSnapLineAdorner}" TargetType="{x:Type dxdiagcore:HorizontalBoundsSnapLineAdorner}">
        <Setter Property="Extent" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SnapLineExtent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:HorizontalBoundsSnapLineAdorner}">
                    <Line Name="Line" Style="{StaticResource boundsSnapLineStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.VerticalBoundsSnapLineAdorner}" TargetType="{x:Type dxdiagcore:VerticalBoundsSnapLineAdorner}">
        <Setter Property="Extent" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SnapLineExtent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:VerticalBoundsSnapLineAdorner}">
                    <Line Name="Line" Style="{StaticResource boundsSnapLineStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.HorizontalSizeSnapLineAdorner}" TargetType="{x:Type dxdiagcore:HorizontalSizeSnapLineAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:HorizontalSizeSnapLineAdorner}">
                    <Grid Margin="0,0,0,-25">
                        <ContentPresenter ContentTemplate="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SizeSnapLineTemplate}}"
                                          Height="17"
                                          VerticalAlignment="Bottom"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.VerticalSizeSnapLineAdorner}" TargetType="{x:Type dxdiagcore:VerticalSizeSnapLineAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:VerticalSizeSnapLineAdorner}">
                    <Grid Margin="0,0,-25,0">
                        <ContentPresenter ContentTemplate="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SizeSnapLineTemplate}}"
                                          Height="17"
                                          HorizontalAlignment="Right">
                            <ContentPresenter.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ShapeStylePresenter}" TargetType="{x:Type dxdiag:ShapeStylePresenter}">
        <Setter Property="Text" Value="Abc"/>
        <Setter Property="Width" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapePresenterDefaultSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapePresenterDefaultSize}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ShapeStylePresenter}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Canvas Height="40" Width="40">
                            <Polyline x:Name="PART_Line1"
                                      Points="5,5 5,35 35,35"
                                      Stroke="Black"
                                      cs:id="Polyline_0000"/>
                            <Line x:Name="PART_Line2"
                                  Canvas.Left="33"
                                  Canvas.Top="35"
                                  Stroke="Black"
                                  X1="0"
                                  X2="-6"
                                  Y1="0"
                                  Y2="3"
                                  cs:id="Line_0000"/>
                            <Line x:Name="PART_Line3"
                                  Canvas.Left="33"
                                  Canvas.Top="35"
                                  Stroke="Black"
                                  X1="0"
                                  X2="-6"
                                  Y1="0"
                                  Y2="-3"
                                  cs:id="Line_0001"/>
                        </Canvas>
                        <TextBlock x:Name="PART_Text"
                                   HorizontalAlignment="Center"
                                   Text="{TemplateBinding Text}"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.BindingIndicatorAdorner}" TargetType="{x:Type dxdiagcore:BindingIndicatorAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:BindingIndicatorAdorner}">
                    <Image x:Name="PART_Indicator"
                           HorizontalAlignment="Right"
                           Margin="0, 0, 0, 2"
                           Stretch="None"
                           VerticalAlignment="Bottom"
                           Visibility="Collapsed"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="State" Value="Inactive">
                            <Setter Property="Opacity"
                                    TargetName="PART_Indicator"
                                    Value="0.25"/>
                            <Setter Property="Visibility"
                                    TargetName="PART_Indicator"
                                    Value="Visible"/>
                            <Setter Property="Source"
                                    TargetName="PART_Indicator"
                                    Value="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/BindingIndicatorInactive.svg}"/>
                        </Trigger>
                        <Trigger Property="State" Value="HoverInactive">
                            <Setter Property="Visibility"
                                    TargetName="PART_Indicator"
                                    Value="Visible"/>
                            <Setter Property="Source"
                                    TargetName="PART_Indicator"
                                    Value="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/BindingIndicatorInactive.svg}"/>
                        </Trigger>
                        <Trigger Property="State" Value="Active">
                            <Setter Property="Visibility"
                                    TargetName="PART_Indicator"
                                    Value="Visible"/>
                            <Setter Property="Source"
                                    TargetName="PART_Indicator"
                                    Value="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/BindingIndicatorActive.svg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.CollapseButtonAdorner}" TargetType="{x:Type dxdiagcore:CollapseButtonAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:CollapseButtonAdorner}">
                    <Canvas x:Name="PART_Canvas">
                        <Image x:Name="PART_Button" Stretch="None">
                            <Image.LayoutTransform>
                                <ScaleTransform CenterX="0"
                                                CenterY="0"
                                                ScaleX="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}"
                                                ScaleY="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Image.LayoutTransform>
                            <Canvas.Left>
                                <MultiBinding Converter="{dxdiagcore:CollapseButtonPositionConverter}">
                                    <Binding ElementName="PART_Canvas" Path="ActualWidth"/>
                                    <Binding Path="Item.CollapseButtonPosition.X" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Item.CollapseButtonOffset.X" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Item.CollapseButtonHorizontalAlignment" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="(dxdiag:AdornerLayer.Zoom)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{dxdiagcore:CollapseButtonPositionConverter}">
                                    <Binding ElementName="PART_Canvas" Path="ActualHeight"/>
                                    <Binding Path="Item.CollapseButtonPosition.Y" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Item.CollapseButtonOffset.Y" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Item.CollapseButtonVerticalAlignment" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="(dxdiag:AdornerLayer.Zoom)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </Canvas.Top>
                        </Image>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="State" Value="Collapse">
                            <Setter Property="Source"
                                    TargetName="PART_Button"
                                    Value="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/CollapseSubordinates.svg}"/>
                        </Trigger>
                        <Trigger Property="State" Value="Expand">
                            <Setter Property="Source"
                                    TargetName="PART_Button"
                                    Value="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/ExpandSubordinates.svg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>