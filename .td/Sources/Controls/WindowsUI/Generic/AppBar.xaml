<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
                    xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal"
                    xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ItemsPanelTemplate x:Key="AppBarPanel">
        <dxwuii:AnimatedPanel Alignment="{Binding Alignment, RelativeSource={RelativeSource AncestorType=dxwui:AppBar}}"
                              IsAnimationEnabled="{Binding RelativeSource={RelativeSource AncestorType=dxwui:AppBar}, Path=IsAnimationEnabled}"
                              ItemSpacing="{Binding RelativeSource={RelativeSource AncestorType=dxwui:AppBar}, Path=ItemSpacing}"/>
    </ItemsPanelTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBar}" TargetType="{x:Type dxwui:AppBar}">
        <Setter Property="ItemsPanel" Value="{StaticResource AppBarPanel}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxwui:AppBar}">
                    <Border x:Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <dxwuii:AppBarPanel Alignment="{TemplateBinding Alignment}">
                            <dxwui:AppBarBackButton x:Name="PART_BackButton"
                                                    IsCompact="{TemplateBinding IsCompact}"
                                                    Visibility="Collapsed"/>
                            <Grid>
                                <dxe:FlyoutControl x:Name="PART_Flyout"
                                                   FollowTarget="False"
                                                   Padding="0"/>
                                <Canvas x:Name="PART_EffectsLayer" HorizontalAlignment="Stretch"/>
                                <ItemsPresenter x:Name="PART_ItemsPresenter"/>
                            </Grid>
                            <dxwui:AppBarExitButton x:Name="PART_ExitButton"
                                                    IsCompact="{TemplateBinding IsCompact}"
                                                    Visibility="Collapsed"/>
                        </dxwuii:AppBarPanel>
                        <Border.Resources>
                            <Storyboard x:Key="StoryboardMoveAppbar">
                                <DoubleAnimation Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="4"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </Border.Resources>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Background" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=Background}}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
    </Style>

    <Style x:Key="AppBarButtonStyle" TargetType="{x:Type dxwui:AppBarButton}">
        <Setter Property="Template" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonTemplate}}"/>
        <Setter Property="ContentFontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="Padding" Value="0,14,0,13"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="dxb:ImageColorizer.Color" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonForegroundColor}}"/>
        <Setter Property="Width" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonDefaultWidth}}"/>
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <!--SPECIFICTHEME TouchlineDark <Setter Property="FontSize" Value="12" /> SPECIFICTHEME-->
        <Style.Triggers>
            <Trigger Property="IsCompact" Value="True">
                <Setter Property="Width" Value="60"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBarButton}"
           BasedOn="{StaticResource AppBarButtonStyle}"
           TargetType="{x:Type dxwui:AppBarButton}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBarToggleButton}"
           BasedOn="{StaticResource AppBarButtonStyle}"
           TargetType="{x:Type dxwui:AppBarToggleButton}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBarSeparator}" TargetType="dxwui:AppBarSeparator">
        <Setter Property="Template" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarSeparatorTemplate}}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBarBackButton}"
           BasedOn="{StaticResource AppBarButtonStyle}"
           TargetType="dxwui:AppBarBackButton">
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxwuit:CommandButtonElementsThemeKey ResourceKey=BackGlyph}}"/>
        <Setter Property="Label" Value="Back"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBarExitButton}"
           BasedOn="{StaticResource AppBarButtonStyle}"
           TargetType="dxwui:AppBarExitButton">
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxwuit:CommandButtonElementsThemeKey ResourceKey=ExitGlyph}}"/>
        <Setter Property="Label" Value="Exit"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.AppBarTileButton}" TargetType="dxwui:AppBarTileButton">
        <Setter Property="Margin" Value="20"/>
        <Setter Property="Width" Value="166"/>
        <Setter Property="Height" Value="98"/>
        <Setter Property="Background" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileButtonBackground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileButtonTemplate}}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.AppBarTileButtonBorder}" TargetType="dxwuii:AppBarTileButtonBorder">
        <Setter Property="Template" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileBorderButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.AppBarTileButtonArrowBorder}" TargetType="dxwuii:AppBarTileButtonArrowBorder">
        <Setter Property="Template" Value="{DynamicResource {dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileDropDownButtonTemplate}}"/>
    </Style>

</ResourceDictionary>