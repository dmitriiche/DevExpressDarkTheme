<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbc="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=ContentExpanderStyle}" TargetType="{x:Type dx:DXExpander}">
        <Setter Property="HorizontalExpand" Value="FromLeftToRight"/>
        <Setter Property="VerticalExpand" Value="None"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=DragWidgetStyle}" TargetType="{x:Type dxb:DragWidget}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DragWidgetTemplate}}"/>
        <Setter Property="Cursor" Value="SizeAll"/>
    </Style>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonStyle}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonTemplate}}"/>
    </Style>

    <ItemsPanelTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ItemsPanelTemplate}">
        <dxb:BarClientPanel Background="Transparent"
                            HorizontalIndent="{Binding TemplatedParent.Bar.BarItemHorzIndent, RelativeSource={RelativeSource TemplatedParent}}"
                            IsItemsHost="True"
                            Margin="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ClientPanelPadding}}"
                            MinHeight="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ClientPanelMinHeight}}"
                            QuickCustomizationButtonShowMode="{Binding TemplatedParent.ActualQuickCustomizationButtonShowMode, RelativeSource={RelativeSource TemplatedParent}}"
                            cs:id="BarClientPanel_0000">
            <dxb:BarClientPanel.QuickCustomizationButton>
                <dxb:BarQuickCustomizationButton x:Name="PART_Button"
                                                 Focusable="False"
                                                 Orientation="{Binding TemplatedParent.ContainerOrientation, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Style="{Binding QuickCustomizationButtonStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
            </dxb:BarClientPanel.QuickCustomizationButton>
        </dxb:BarClientPanel>
    </ItemsPanelTemplate>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonInMainMenuStyle}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonInMainMenuTemplate}}"/>
    </Style>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=ThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ThumbTemplate}}"/>
    </Style>

    <dx:BoolToVisibilityConverter x:Key="MyConverter"/>

    <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxb:BarControl}">
        <dx:LayoutTransformPanel x:Name="PART_TransformPanel"
                                 Clockwise="True"
                                 Orientation="Vertical">
            <ContentControl x:Name="PART_Bar"
                            Focusable="False"
                            IsTabStop="False"
                            Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarStyle}}"
                            Template="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarTemplate}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <dxb:DragWidget x:Name="PART_DragWidget"
                                    Grid.Column="0"
                                    Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DragWidgetStyle}}"/>
                    <ContentControl x:Name="PART_Content"
                                    Focusable="False"
                                    Grid.Column="1"
                                    IsTabStop="False"
                                    Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarContentStyle}}">
                        <dx:CompatibilityAdornerContainer x:Name="PART_Adorner">
                            <dxb:BarControlItemsPresenter x:Name="PART_ItemsPresenter"
                                                          QuickCustomizationButtonStyle="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonStyle}}"
                                                          ShowBackground="{TemplateBinding ShowBackground}"/>
                        </dx:CompatibilityAdornerContainer>
                    </ContentControl>
                    <Thumb x:Name="PART_Thumb"
                           Grid.Column="2"
                           Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ThumbStyle}}"/>
                </Grid>
            </ContentControl>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Bar.IsStatusBar, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template"
                        TargetName="PART_Bar"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=StatusBarTemplate}}"/>
                <Setter Property="Style"
                        TargetName="PART_Bar"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=StatusBarStyle}}"/>
                <Setter Property="Style"
                        TargetName="PART_Content"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=StatusBarContentStyle}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Bar.IsMainMenu, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template"
                        TargetName="PART_Bar"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=MainMenuTemplate}}"/>
                <Setter Property="Style"
                        TargetName="PART_Bar"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=MainMenuStyle}}"/>
                <Setter Property="Style"
                        TargetName="PART_Content"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=MainMenuContentStyle}}"/>
                <Setter Property="QuickCustomizationButtonStyle"
                        TargetName="PART_ItemsPresenter"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonInMainMenuStyle}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Bar.DockInfo.Container.IsFloating, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Style"
                        TargetName="PART_Bar"
                        Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=FloatingBarStyle}}"/>
            </DataTrigger>
            <Trigger Property="ShowBackground" Value="False">
                <Setter Property="Template" TargetName="PART_Bar">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ContainerOrientation" Value="Vertical">
                <Setter Property="Orientation"
                        TargetName="PART_TransformPanel"
                        Value="Horizontal"/>
            </Trigger>
            <Trigger Property="ActualShowContent" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Adorner"
                        Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=DropIndicatorStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DropIndicatorTemplate}}"/>
    </Style>

    <ControlTemplate x:Key="{dxbt:ToolBarThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:ToolBarControlBase}">
        <ContentControl x:Name="PART_Border"
                        Focusable="False"
                        Template="{TemplateBinding BorderTemplate}">
            <dxb:BarControl x:Name="PART_BarControl" ShowBackground="{TemplateBinding ShowBackground}"/>
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="BorderTemplate" Value="{x:Null}">
                <Setter Property="Template" TargetName="PART_Border">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <ContentPresenter/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>