<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbc="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Bars/Themes/VS2019Dark/RenderTemplates/_Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <dxcn:RenderTriggersCollection x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=ForegroundColorStatesInRibbonStatusBar}">
        <dxcn:RenderStateGroup Name="ArrowForegroundColors">
            <dxcn:RenderStateTrigger Name="ArrowNormal">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0000"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowHover">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0001"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowPressed">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0002"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowChecked">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0014"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowContentHighlight">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0004"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowDisabled">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0005"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowCustomization">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Focused"
                                   cs:id="RenderSetter_0003"/>
            </dxcn:RenderStateTrigger>
        </dxcn:RenderStateGroup>
        <dxcn:RenderStateGroup Name="ContentForegroundColors">
            <dxcn:RenderStateTrigger Name="ContentNormal">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0006"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentHover">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0007"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentPressed">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0008"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentChecked">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0009"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentIndeterminate">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0010"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentContentHighlight">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0012"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentDisabled">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0013"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentCustomization">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Focused"
                                   cs:id="RenderSetter_0011"/>
            </dxcn:RenderStateTrigger>
        </dxcn:RenderStateGroup>
    </dxcn:RenderTriggersCollection>

    <!--Edit -->

    <dxcn:RenderTriggersCollection x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=EditForegroundColorStatesInRibbonStatusBar}">
        <dxcn:RenderStateGroup Name="ArrowForegroundColors">
            <dxcn:RenderStateTrigger Name="ArrowNormal">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0000"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowHover">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0001"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowPressed">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0002"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowContentHighlight">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0004"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowDisabled">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0005"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ArrowCustomization">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_ArrowContainer"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Focused"
                                   cs:id="RenderSetter_0003"/>
            </dxcn:RenderStateTrigger>
        </dxcn:RenderStateGroup>
        <dxcn:RenderStateGroup Name="ContentForegroundColors">
            <dxcn:RenderStateTrigger Name="ContentNormal">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0006"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentHover">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0007"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentPressed">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0008"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentChecked">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0009"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentIndeterminate">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0010"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentContentHighlight">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0012"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentDisabled">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Foreground"
                                   cs:id="RenderSetter_0013"/>
            </dxcn:RenderStateTrigger>
            <dxcn:RenderStateTrigger Name="ContentCustomization">
                <dxcn:RenderSetter Property="Foreground"
                                   TargetName="PART_Container"
                                   ThrowIfInvalidTargetName="False"
                                   Value="$Backstage.Focused"
                                   cs:id="RenderSetter_0011"/>
            </dxcn:RenderStateTrigger>
        </dxcn:RenderStateGroup>
    </dxcn:RenderTriggersCollection>

    <!-- Background -->

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=NormalBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1"/>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=HoverBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border"
                                 Background="$Backstage.HoverBackground"
                                 BorderBrush="$Backstage.HoverBackground"
                                 cs:id="RenderBorder_0001"/>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=PressedBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border"
                                 Background="$Backstage.SelectionBackground"
                                 BorderBrush="$Backstage.SelectionBackground"
                                 cs:id="RenderBorder_0001"/>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=CheckedBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border"
                                 Background="$Backstage.SelectionBackground"
                                 BorderBrush="$Backstage.SelectionBackground"
                                 cs:id="RenderBorder_0001"/>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=IndeterminateBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border"
                                 Background="$Backstage.HoverBackground"
                                 BorderBrush="$Backstage.HoverBackground"
                                 cs:id="RenderBorder_0001"/>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=ContentHighlightTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border"
                                 Background="$Backstage.HoverBackground"
                                 BorderBrush="$Backstage.HoverBackground"
                                 Opacity="0.62"
                                 cs:id="RenderBorder_0001"/>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=CustomizationBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border"
                                 BorderBrush="$Backstage.Foreground"
                                 cs:id="RenderBorder_0000"/>
    </dxcn:RenderTemplate>

    <!-- Thickness -->

    <dxcn:RenderStylesCollection x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonStatusBarStyles}">
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderBorder#PART_Root'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_Container'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3,3,0,3"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Glyph'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Content'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStylesCollection.Triggers>
            <dxcn:ConditionalRenderBinding DependencyProperty="{x:Static dxcn:AppearanceOptions.MarginProperty}"
                                           TargetName="PART_Root"
                                           TargetProperty="Margin">
                <dxcn:RenderCondition DependencyProperty="{x:Static dxcn:AppearanceOptions.HasMarginProperty}" Value="True"/>
            </dxcn:ConditionalRenderBinding>
        </dxcn:RenderStylesCollection.Triggers>
    </dxcn:RenderStylesCollection>

    <dxcn:RenderStylesCollection x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=SplitTemplateInRibbonStatusBarStyles}" BasedOn="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonStatusBarStyles}}">
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderBorder#PART_Root'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_Container'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Glyph'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Content'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_ContentContainer'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_PathArrowContainer'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3,4,3,3"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_ArrowContainer'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
    </dxcn:RenderStylesCollection>

    <dxcn:RenderStylesCollection x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=EditTemplateInRibbonStatusBarStyles}" BasedOn="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonStatusBarStyles}}">
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderBorder#PART_Root'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_Container'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3,0,3,0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Glyph'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Content'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderPanel#PART_ContentContainer'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="0"/>
            <dxcn:RenderStyleSetter TargetProperty="MinHeight" Value="22"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Editor'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0"/>
        </dxcn:RenderStyle>
        <dxcn:RenderStyle Target="{dxcn:RenderStyleTarget Value='dxcn:RenderContentControl#PART_Content2'}">
            <dxcn:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0"/>
        </dxcn:RenderStyle>
    </dxcn:RenderStylesCollection>

    <dxcn:RenderStylesCollection x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=StaticTemplateInRibbonStatusBarStyles}" BasedOn="{StaticResource {dxbt:BarItemRenderThemeKey ResourceKey=TemplateInRibbonStatusBarStyles}}"/>

</ResourceDictionary>