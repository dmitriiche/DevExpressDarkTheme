<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DropMarker}" TargetType="dx:DropMarker">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dx:DropMarker">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Border x:Name="background"
                                    Background="#FF2DB2FF"
                                    Opacity="0.2"
                                    Visibility="Collapsed"
                                    cs:id="Border_0000"/>
                            <Grid Margin="0,-2,0,-2">
                                <Border x:Name="marker"
                                        Background="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBackground}}"
                                        BorderBrush="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBorderBrush}}"
                                        BorderThickness="1"
                                        Height="4"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Position" Value="Before">
                                <Trigger.Setters>
                                    <Setter Property="VerticalAlignment"
                                            TargetName="marker"
                                            Value="Top"/>
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="Position" Value="After">
                                <Trigger.Setters>
                                    <Setter Property="VerticalAlignment"
                                            TargetName="marker"
                                            Value="Bottom"/>
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="Position" Value="Inside">
                                <Trigger.Setters>
                                    <Setter Property="Visibility"
                                            TargetName="marker"
                                            Value="Collapsed"/>
                                    <Setter Property="Visibility"
                                            TargetName="background"
                                            Value="Visible"/>
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="Position" Value="Append">
                                <Trigger.Setters>
                                    <Setter Property="Visibility"
                                            TargetName="marker"
                                            Value="Collapsed"/>
                                    <Setter Property="Background"
                                            TargetName="background"
                                            Value="#FF89C841"
                                            cs:id="Setter_0000"/>
                                    <Setter Property="Visibility"
                                            TargetName="background"
                                            Value="Visible"/>
                                </Trigger.Setters>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsHitTestVisible" Value="False"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Trigger.Setters>
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="-90"/>
                        </Setter.Value>
                    </Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DropMarker}">
        <dx:DropMarker Orientation="{Binding Orientation}"
                       Padding="{Binding Padding}"
                       Position="{Binding Position}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}">
        <TextBlock Text="{Binding}" TextTrimming="WordEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragHintTargetInfo}">
        <ContentPresenter Content="{Binding}">
            <ContentPresenter.Style>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                    <Style.Setters>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}"
                                                   FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}"
                                                   Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}"
                                                   Text="{Binding Path=DropPosition, Converter={dx:DropPositionConverter}}"/>
                                        <ContentPresenter Content="{Binding TargetRecord}"
                                                          ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}}"
                                                          Margin="0,3,0,0">
                                            <ContentPresenter.Style>
                                                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                                                    <Style.Setters>
                                                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintDescriptionForeground}}"/>
                                                    </Style.Setters>
                                                    <Style.Triggers>
                                                        <Trigger Property="Content" Value="{x:Null}">
                                                            <Trigger.Setters>
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </Trigger.Setters>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentPresenter.Style>
                                        </ContentPresenter>
                                    </StackPanel>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Effects}" Value="None">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}"
                                                   FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}"
                                                   Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}">
                                            <TextBlock.Text>
                                                <Binding ConverterParameter="DragDropCannotDrop" RelativeSource="{RelativeSource Self}">
                                                    <Binding.Converter>
                                                        <dx:EditorStringIdConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Style>
        </ContentPresenter>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragDropHint}">
        <Border Background="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintBackground}}"
                BorderBrush="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintBorderBrush}}"
                BorderThickness="1"
                MaxWidth="300"
                MinWidth="200"
                Padding="12,8,24,10">
            <StackPanel>
                <TextBlock x:Name="dragHeader"
                           FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}"
                           FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}"
                           Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}"
                           Text="{Binding Path=Records, Converter={dx:DragHeaderConverter}}"/>
                <ContentPresenter x:Name="dragDetail"
                                  Content="{Binding Path=Records, Converter={dx:DragDetailConverter}}"
                                  ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}}"
                                  Margin="0,3,0,0">
                    <ContentPresenter.Style>
                        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                            <Style.Setters>
                                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintDescriptionForeground}}"/>
                            </Style.Setters>
                            <Style.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Trigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContentPresenter.Style>
                </ContentPresenter>
                <ContentPresenter Content="{Binding}"
                                  ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintTargetInfo}}"
                                  Margin="0,8,0,0">
                    <ContentPresenter.Visibility>
                        <Binding Path="ShowTargetInfoInDragDropHint">
                            <Binding.Converter>
                                <dx:BooleanToVisibilityConverter/>
                            </Binding.Converter>
                        </Binding>
                    </ContentPresenter.Visibility>
                </ContentPresenter>
            </StackPanel>
        </Border>
    </DataTemplate>

</ResourceDictionary>