<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="{dx:DynamicThemeResource SplashScreen.xaml, ResourcePath=Themes, ResourcePathInTheme='Core/Core/Themes', TypeInTargetAssembly={x:Type dxn:RenderTemplate}}"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="SplashScreenWindowStyleBase" TargetType="dx:SplashScreenWindow">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dx:SplashScreenWindow">
                    <dxn:SplashScreenBorder Background="{TemplateBinding ActualBackground}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentSource="Content"/>
                    </dxn:SplashScreenBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=WindowStyle}"
           BasedOn="{StaticResource SplashScreenWindowStyleBase}"
           TargetType="dx:SplashScreenWindow"/>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=TitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="60,2"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=SubTitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="60,2"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=StatusTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,3,3,6"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=CopyrightTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="20,3,3,20"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=LogoImageStyle}" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="20"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{StaticResource ThemedSplashScreen.LogoPalette}"/>
    </Style>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=WindowStyle}"
           BasedOn="{StaticResource SplashScreenWindowStyleBase}"
           TargetType="dx:SplashScreenWindow">
        <Setter Property="BorderBrush"
                Value="#20000000"
                cs:id="Setter_0000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AllowAcrylic" Value="True"/>
        <Setter Property="Background"
                Value="#FF525252"
                cs:id="Setter_0001"/>
        <Setter Property="AcrylicColor"
                Value="#40525252"
                cs:id="Setter_0002"/>
    </Style>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=TitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="#FFFFFFFF"
                cs:id="Setter_0000"/>
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="60,0"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="-100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=SubTitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="#FFFFFFFF"
                cs:id="Setter_0000"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="60,0"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.375" Value="-100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.875" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.375" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.875" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=StatusTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="#FFFFFFFF"
                cs:id="Setter_0000"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="30,3,3,25"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="-100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=CopyrightTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="#FFFFFFFF"
                cs:id="Setter_0000"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="3,3,30,25"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="100"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.625" Value="100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1.125" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.625" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:1.125" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=LogoImageStyle}" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="30,30,0,0"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="dx:WpfSvgPalette.Palette">
            <Setter.Value>
                <dx:WpfSvgPalette>
                    <SolidColorBrush x:Key="#FFFFFF"
                                     Color="#FFFFFFFF"
                                     cs:id="SolidColorBrush_0000"/>
                    <SolidColorBrush x:Key="BlackColor"
                                     Color="#FFFFFFFF"
                                     cs:id="SolidColorBrush_0001"/>
                </dx:WpfSvgPalette>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.125" Value="-100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.625" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.125" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.625" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="FluentProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid HorizontalAlignment="Stretch">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation Duration="0:0:3.917"
                                             Storyboard.TargetName="PART_IndeterminateRoot"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"/>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.167"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.333"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.5"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.667"/>
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E1" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.3" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E2" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.667" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.467" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.967" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E3" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1.833" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.633" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.133" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E4" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.8" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E5" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="1"/>
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.967" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3.467" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_IndeterminateRoot"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center">
                <Grid.RenderTransform>
                    <TranslateTransform/>
                </Grid.RenderTransform>
                <dxn:SplashScreenBorder x:Name="B5" RenderTransformOrigin="0.5,0.5">
                    <dxn:SplashScreenBorder.RenderTransform>
                        <TranslateTransform/>
                    </dxn:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E5"
                             Fill="{TemplateBinding Foreground}"
                             RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxn:SplashScreenBorder>
                <dxn:SplashScreenBorder x:Name="B4" RenderTransformOrigin="0.5,0.5">
                    <dxn:SplashScreenBorder.RenderTransform>
                        <TranslateTransform/>
                    </dxn:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E4"
                             Fill="{TemplateBinding Foreground}"
                             RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxn:SplashScreenBorder>
                <dxn:SplashScreenBorder x:Name="B3" RenderTransformOrigin="0.5,0.5">
                    <dxn:SplashScreenBorder.RenderTransform>
                        <TranslateTransform/>
                    </dxn:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E3"
                             Fill="{TemplateBinding Foreground}"
                             RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxn:SplashScreenBorder>
                <dxn:SplashScreenBorder x:Name="B2" RenderTransformOrigin="0.5,0.5">
                    <dxn:SplashScreenBorder.RenderTransform>
                        <TranslateTransform/>
                    </dxn:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E2"
                             Fill="{TemplateBinding Foreground}"
                             RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxn:SplashScreenBorder>
                <dxn:SplashScreenBorder x:Name="B1"
                                        Grid.Column="8"
                                        RenderTransformOrigin="0.5,0.5">
                    <dxn:SplashScreenBorder.RenderTransform>
                        <TranslateTransform/>
                    </dxn:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E1"
                             Fill="{TemplateBinding Foreground}"
                             RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxn:SplashScreenBorder>
            </Grid>
            <dxn:SplashScreenBorder x:Name="PART_DeterminateRoot"
                                    HorizontalAlignment="Stretch"
                                    Visibility="Collapsed">
                <Grid x:Name="PART_Track" Margin="1">
                    <Grid x:Name="PART_Indicator"
                          ClipToBounds="True"
                          HorizontalAlignment="Left">
                        <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                        <Rectangle x:Name="Animation"
                                   Fill="{TemplateBinding Foreground}"
                                   RenderTransformOrigin="-0.5,0.5"
                                   Visibility="Collapsed">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.25"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                </Grid>
            </dxn:SplashScreenBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_IndeterminateRoot"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_DeterminateRoot"
                        Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxt:FluentSplashScreenThemeKey ResourceKey=ProgressBarStyle}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
                Value="#FFFFFFFF"
                cs:id="Setter_0000"/>
        <Setter Property="Background"
                Value="#FFF3F3F3"
                cs:id="Setter_0001"/>
        <Setter Property="BorderBrush"
                Value="#FFF3F3F3"
                cs:id="Setter_0002"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Width" Value="NaN"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="15,10,15,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template" Value="{StaticResource FluentProgressBarTemplate}"/>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxn:FluentProgressBarBehavior AnimationStartDelay="625"/>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsIndeterminate" Value="False">
                <Setter Property="Width" Value="350"/>
                <Setter Property="Margin" Value="0,20,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>