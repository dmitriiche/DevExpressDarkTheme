<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Themes/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="$Editor.Background"
                cs:id="Setter_0000"/>
        <Setter Property="BorderBrush"
                Value="$Border"
                cs:id="Setter_0001"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          Margin="{TemplateBinding Padding}"
                          cs:id="Grid_0000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="Field"
                              Grid.Column="0"
                              Grid.ColumnSpan="1"
                              Height="14"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="0,1,0,1"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Width="14">
                            <Border x:Name="IsDefault"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Border x:Name="IsFocused"
                                    BorderBrush="$Focused"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="0"
                                    cs:id="Border_0000"/>
                            <Path x:Name="Indeterminate"
                                  Style="{StaticResource UIShape.Indeterminate}"
                                  Visibility="Collapsed"/>
                            <Path x:Name="Checked"
                                  Style="{StaticResource UIShape.Checked}"
                                  Visibility="Collapsed"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="4,0,0,0"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="IsFocused"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Checked"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0002"/>
                            <Setter Property="Fill"
                                    TargetName="Indeterminate"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0003"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0004"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$Border"
                                    cs:id="Setter_0005"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Checked"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0006"/>
                            <Setter Property="Fill"
                                    TargetName="Indeterminate"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0007"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0008"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$Border"
                                    cs:id="Setter_0009"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="IsFocused"
                                    Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="IsFocused"
                                    Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="IsFocused"
                                    Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.38"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Height"
                                    TargetName="Checked"
                                    Value="16"/>
                            <Setter Property="Width"
                                    TargetName="Checked"
                                    Value="16"/>
                            <Setter Property="Height"
                                    TargetName="Field"
                                    Value="28"/>
                            <Setter Property="Width"
                                    TargetName="Field"
                                    Value="28"/>
                            <Setter Property="Height"
                                    TargetName="Indeterminate"
                                    Value="16"/>
                            <Setter Property="Width"
                                    TargetName="Indeterminate"
                                    Value="16"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility"
                                    TargetName="Checked"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility"
                                    TargetName="Indeterminate"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="LayoutTransform" TargetName="Field">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0.5"
                                                    CenterY="0.5"
                                                    ScaleX="-1"
                                                    ScaleY="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>