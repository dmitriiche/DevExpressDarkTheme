<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Themes/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          cs:id="Grid_0000">
                        <Path x:Name="Collapsed"
                              Fill="$Foreground"
                              Style="{StaticResource UIShape.Right}"
                              cs:id="Path_0000"/>
                        <Path x:Name="Expanded"
                              Fill="$Foreground"
                              Opacity="0"
                              Style="{StaticResource UIShape.RightDown}"
                              cs:id="Path_0001"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Collapsed"
                                    Value="$Focused"
                                    cs:id="Setter_0000"/>
                            <Setter Property="Fill"
                                    TargetName="Expanded"
                                    Value="$Focused"
                                    cs:id="Setter_0001"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="Collapsed"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="Expanded"
                                    Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="18"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44"/>
                <Setter Property="MinWidth" Value="44"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item -->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="dx:SvgImageHelper.State" Value="Normal"/>
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Foreground"
                Value="$Foreground"
                cs:id="Setter_0001"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3,3,3,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ButtonColumn"
                                              MinWidth="16"
                                              Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="IsDefault"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                cs:id="Border_0000"/>
                        <Border x:Name="Content"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="1"
                                Grid.ColumnSpan="2">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="Expander"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0006"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0002"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0010"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0007"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0003"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0011"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           SourceName="Content"
                                           Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0008"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0004"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0012"/>
                            <Setter Property="dx:SvgImageHelper.State" Value="Hover"/>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground"
                                    Value="$Backstage.Focused"
                                    cs:id="Setter_0009"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0005"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0013"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Content"
                                    Value="0.38"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinWidth"
                                    TargetName="ButtonColumn"
                                    Value="44"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,13,14,13"/>
            </Trigger>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>