<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Themes/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="Background"
                Value="$Editor.Background"
                cs:id="Setter_0000"/>
        <Setter Property="BorderBrush"
                Value="$Border"
                cs:id="Setter_0001"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          cs:id="Grid_0000">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="Field"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="1"
                                  Height="14"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0,1,0,1"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Width="14">
                                <Border x:Name="IsDefault"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="14"/>
                                <Border x:Name="IsFocused"
                                        BorderBrush="$Focused"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="14"
                                        Opacity="0"
                                        cs:id="Border_0001"/>
                                <Border x:Name="Checked"
                                        Background="$Foreground"
                                        CornerRadius="8"
                                        Margin="3"
                                        Visibility="Collapsed"
                                        cs:id="Border_0000"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="4,0,0,0"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="InternalFocusStates">
                                <VisualState x:Name="InternalFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="IsFocused"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InternalUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    TargetName="Checked"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0002"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0003"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$SelectionBorder"
                                    cs:id="Setter_0004"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    TargetName="Checked"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0005"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0006"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$SelectionBorder"
                                    cs:id="Setter_0007"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background"
                                    TargetName="Checked"
                                    Value="$Foreground"
                                    cs:id="Setter_0008"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$Editor.Background"
                                    cs:id="Setter_0009"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$Focused"
                                    cs:id="Setter_0010"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Checked"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0011"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0012"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$Focused"
                                    cs:id="Setter_0013"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Checked"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0014"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$SelectionBackground"
                                    cs:id="Setter_0015"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$Focused"
                                    cs:id="Setter_0016"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="Checked"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.38"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Height"
                                    TargetName="Checked"
                                    Value="16"/>
                            <Setter Property="Width"
                                    TargetName="Checked"
                                    Value="16"/>
                            <Setter Property="Height"
                                    TargetName="Field"
                                    Value="28"/>
                            <Setter Property="Width"
                                    TargetName="Field"
                                    Value="28"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="dxei:ControlHelper.ShowFocusedState" Value="{Binding IsFocused, RelativeSource={RelativeSource Self}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="0,13,0,13"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>