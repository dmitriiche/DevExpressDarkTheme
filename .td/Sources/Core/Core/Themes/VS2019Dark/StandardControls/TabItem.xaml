<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Themes/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="BorderBrush"
                Value="Transparent"
                cs:id="Setter_0001"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="$Foreground"
                cs:id="Setter_0002"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="12,3,12,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="IsDefault"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="IsFocused"
                                Background="$Focused"
                                Visibility="Collapsed"
                                cs:id="Border_0000"/>
                        <ContentPresenter x:Name="Content"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0007"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0003"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$SelectionForeground"
                                    cs:id="Setter_0008"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$Control.Background"
                                    cs:id="Setter_0004"/>
                            <Setter Property="BorderBrush"
                                    TargetName="IsDefault"
                                    Value="$Border"
                                    cs:id="Setter_0005"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="1,1,1,0"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="0,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="1,0,1,1"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="0,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="1,1,0,1"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="1,0,1,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="0,1,1,1"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="1,0,1,0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0009"/>
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="1,1,1,0"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="0,0,0,-1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0010"/>
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="1,0,1,1"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="0,-1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0011"/>
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="1,1,0,1"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="0,0,-1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0012"/>
                            <Setter Property="BorderThickness"
                                    TargetName="IsDefault"
                                    Value="0,1,1,1"/>
                            <Setter Property="Margin"
                                    TargetName="IsDefault"
                                    Value="-1,0,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$HoverForeground"
                                    cs:id="Setter_0013"/>
                            <Setter Property="Background"
                                    TargetName="IsDefault"
                                    Value="$HoverBackground"
                                    cs:id="Setter_0006"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0014"/>
                            <Setter Property="Height"
                                    TargetName="IsFocused"
                                    Value="2"/>
                            <Setter Property="Visibility"
                                    TargetName="IsFocused"
                                    Value="Visible"/>
                            <Setter Property="VerticalAlignment"
                                    TargetName="IsFocused"
                                    Value="Top"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0015"/>
                            <Setter Property="Height"
                                    TargetName="IsFocused"
                                    Value="2"/>
                            <Setter Property="Visibility"
                                    TargetName="IsFocused"
                                    Value="Visible"/>
                            <Setter Property="VerticalAlignment"
                                    TargetName="IsFocused"
                                    Value="Bottom"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0016"/>
                            <Setter Property="HorizontalAlignment"
                                    TargetName="IsFocused"
                                    Value="Left"/>
                            <Setter Property="Visibility"
                                    TargetName="IsFocused"
                                    Value="Visible"/>
                            <Setter Property="Width"
                                    TargetName="IsFocused"
                                    Value="2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Content"
                                    Value="$Focused"
                                    cs:id="Setter_0017"/>
                            <Setter Property="HorizontalAlignment"
                                    TargetName="IsFocused"
                                    Value="Right"/>
                            <Setter Property="Visibility"
                                    TargetName="IsFocused"
                                    Value="Visible"/>
                            <Setter Property="Width"
                                    TargetName="IsFocused"
                                    Value="2"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.38"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>