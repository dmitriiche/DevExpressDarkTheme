<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--PROCESS SETTERS WITH BINDING-->

    <!--BEGIN TOSLONLY REPLACE ' BasedOn="ListBox"''-->

    <Style x:Key="BaseListBoxStyle"
           BasedOn="{StaticResource {x:Type ListBox}}"
           TargetType="{x:Type dxep:EditorListBox}">
        <Setter Property="DisplayMemberPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).DisplayMemberPath, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplate" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemsPanel" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemsPanel, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="SelectionMode" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectionMode, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="AllowItemHighlighting" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=Template}}"/>
        <Setter Property="TextSearch.TextPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(TextSearch.TextPath), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplateSelector" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplateSelector, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.CanContentScroll), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ScrollUnit2" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ScrollUnit, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(VirtualizingPanel.IsVirtualizingWhenGrouping), RelativeSource={RelativeSource Self}}"/>
    </Style>

    <!--END TOSLONLY REPLACE ' BasedOn="ListBox"''-->

    <Style x:Key="{dxet:ListBoxEditThemeKey ResourceKey=ListBoxInplaceStyle}"
           BasedOn="{StaticResource BaseListBoxStyle}"
           TargetType="{x:Type dxep:EditorListBox}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
        <!--BEGIN WPF-->
        <Setter Property="IsHitTestVisible" Value="False"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxet:ListBoxEditThemeKey ResourceKey=ListBoxStyle}"
           BasedOn="{StaticResource BaseListBoxStyle}"
           TargetType="{x:Type dxep:EditorListBox}"/>

    <ControlTemplate x:Key="{dxet:ListBoxEditThemeKey ResourceKey=DisplayTemplate}">
        <!--ONLY SL
        <Grid>
        ONLY SL-->
        <dxep:EditorListBox x:Name="PART_Editor" Style="{DynamicResource {dxet:ListBoxEditThemeKey ResourceKey=ListBoxInplaceStyle}}"/>
        <!--ONLY SL
            <Border Background="Transparent"/>
        </Grid>
        ONLY SL-->
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ListBoxEditThemeKey ResourceKey=EditTemplate}">
        <dxep:EditorListBox x:Name="PART_Editor" Style="{DynamicResource {dxet:ListBoxEditThemeKey ResourceKey=ListBoxStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ListBoxEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ListBoxEdit}">
        <ContentControl x:Name="PART_Root"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        dx:FocusHelper2.Focusable="False"
                        dxei:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}"
                        dxep:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                        dxn:AppearanceOptions.BorderThickness="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                        dxn:AppearanceOptions.CornerRadius="{Binding Path=(dxn:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        dxn:AppearanceOptions.HasBorderThickness="{Binding Path=(dxn:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                        dxn:AppearanceOptions.HasCornerRadius="{Binding Path=(dxn:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        HorizontalContentAlignment="Stretch"
                        Template="{TemplateBinding ActualBorderTemplate}"
                        VerticalContentAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <dxep:ErrorControl x:Name="PART_ErrorPresenter"/>
                <dxep:EditorControl x:Name="PART_Content"
                                    Grid.Column="1"
                                    Template="{TemplateBinding ActualEditorControlTemplate}"/>
            </Grid>
        </ContentControl>
    </ControlTemplate>

</ResourceDictionary>