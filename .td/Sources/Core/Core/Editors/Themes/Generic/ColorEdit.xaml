<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Editors/Themes/Generic/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <SolidColorBrush x:Key="{dxet:ColorEditThemeKey ResourceKey=ChipBorderBrush}" Color="#FFC5C5C5"/>

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter"/>

    <dxe:ColorToStringConverter x:Key="ColorToStringConverter"/>

    <dx:NegationConverterExtension x:Key="IsReadOnlyToHitTestVisibleConverter"/>

    <ControlTemplate x:Key="{dxet:ColorEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ColorEdit}">
        <Grid x:Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                           Duration="0"
                                                           Storyboard.TargetName="PART_Content"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.35"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ReadOnlyStates">
                    <VisualState x:Name="Editable"/>
                    <VisualState x:Name="ReadOnly"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentControl x:Name="Border"
                            Background="{TemplateBinding Background}"
                            dxn:AppearanceOptions.BorderThickness="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                            dxn:AppearanceOptions.CornerRadius="{Binding Path=(dxn:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            dxn:AppearanceOptions.HasBorderThickness="{Binding Path=(dxn:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                            dxn:AppearanceOptions.HasCornerRadius="{Binding Path=(dxn:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            HorizontalContentAlignment="Stretch"
                            IsTabStop="False"
                            Template="{TemplateBinding ActualBorderTemplate}"
                            VerticalContentAlignment="Stretch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <dxe:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0"/>
                    <dxe:EditorControl x:Name="PART_Content"
                                       Foreground="{TemplateBinding Foreground}"
                                       Grid.Column="1"
                                       IsHitTestVisible="{Binding  Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly, Converter={StaticResource IsReadOnlyToHitTestVisibleConverter}}"
                                       Padding="{TemplateBinding Padding}"
                                       Template="{TemplateBinding ActualEditorControlTemplate}"/>
                </Grid>
            </ContentControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxet:PopupColorEditThemeKey ResourceKey=PART_EditorStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsNullTextVisible}" Value="true">
                <Setter Property="Opacity" Value="0.35"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.35"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxet:PopupColorEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid SnapsToDevicePixels="True">
            <dxe:ColorEdit x:Name="PART_PopupContent"
                           Focusable="False"
                           Foreground="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                           HorizontalAlignment="Stretch"
                           ShowBorder="False"
                           VerticalAlignment="Stretch"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:PopupColorEditThemeKey ResourceKey=DisplayTemplate}">
        <Grid Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}">
            <Grid x:Name="grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="PART_Color"
                        BorderBrush="{Binding Path=(dxe:BaseEdit.OwnerEdit).ChipBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1"
                        HorizontalAlignment="Center"
                        Margin="3"
                        VerticalAlignment="Center">
                    <Grid>
                        <dxei:TransparentBrushRectangle BlockHeight="4"
                                                        BlockWidth="4"
                                                        dx:FocusHelper2.Focusable="False"/>
                        <Rectangle Fill="{Binding Path=(dxe:BaseEdit.OwnerEdit).Color, Converter={StaticResource ColorToBrushConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                   Height="12"
                                   SnapsToDevicePixels="true"
                                   Stretch="Fill"
                                   Width="12"/>
                    </Grid>
                </Border>
                <TextBlock x:Name="PART_Editor"
                           Grid.Column="1"
                           Style="{DynamicResource {dxet:PopupColorEditThemeKey ResourceKey=PART_EditorStyle}}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).DisplayMode, RelativeSource={RelativeSource Self}}" Value="Text">
                <Setter Property="Visibility"
                        TargetName="PART_Color"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).DisplayMode, RelativeSource={RelativeSource Self}}" Value="Color">
                <Setter Property="Visibility"
                        TargetName="PART_Editor"
                        Value="Collapsed"/>
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin"
                        TargetName="grid"
                        Value="14,13"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ColorEditThemeKey ResourceKey=EditTemplate}">
        <dxb:BarManager x:Name="PART_Editor"
                        CreateStandardLayout="False"
                        Margin="{TemplateBinding Padding}">
            <dxb:BarManager.Items>
                <dxb:BarButtonItem x:Name="PART_ResetButton"
                                   Content="{Binding Path=DataContext.DefaultColorButtonContent,RelativeSource={RelativeSource TemplatedParent}, Converter={dxe:ColorEditLocalizerConverter Id=ColorEdit_AutomaticButtonCaption}}"
                                   IsVisible="{Binding Path=DataContext.ShowDefaultColorButton, RelativeSource={RelativeSource TemplatedParent}}"/>
                <dxei:GalleryBarItem x:Name="galleryItem">
                    <dxei:GalleryBarItem.Gallery>
                        <dxb:Gallery x:Name="PART_Gallery"
                                     AllowFilter="False"
                                     ColCount="{Binding Path=DataContext.ColumnCount, RelativeSource={RelativeSource TemplatedParent}}"
                                     GroupItemsMargin="0,3,0,3"
                                     IsGroupCaptionVisible="True"
                                     IsItemCaptionVisible="True"
                                     IsItemDescriptionVisible="False"
                                     IsItemGlyphVisible="False"
                                     ItemCheckMode="Single"
                                     ItemMargin="{Binding Path=DataContext.ChipMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                     MinColCount="{Binding Path=DataContext.ColumnCount, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </dxei:GalleryBarItem.Gallery>
                </dxei:GalleryBarItem>
                <dxb:BarButtonItem x:Name="PART_NoColorButton"
                                   Content="{Binding Path=DataContext.NoColorButtonContent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxe:ColorEditLocalizerConverter Id=ColorEdit_NoColorButtonCaption}}"
                                   IsVisible="{Binding Path=DataContext.ShowNoColorButton, RelativeSource={RelativeSource TemplatedParent}}"/>
                <dxb:BarButtonItem x:Name="PART_MoreColorsButton"
                                   CloseSubMenuOnClick="False"
                                   Content="{Binding Path=DataContext.MoreColorsButtonContent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxe:ColorEditLocalizerConverter Id=ColorEdit_MoreColorsButtonCaption}}"
                                   Glyph="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/ColorEdit/MoreColors.svg"
                                   IsVisible="{Binding Path=DataContext.ShowMoreColorsButton,RelativeSource={RelativeSource TemplatedParent}}"/>
            </dxb:BarManager.Items>
            <dxb:MenuBarControl Background="{DynamicResource ResourceKey={dxet:ColorEditThemeKey ResourceKey=Background}}">
                <dxb:MenuBarControl.Menu>
                    <dxb:PopupMenu x:Name="PART_Menu">
                        <dxb:BarButtonItemLink BarItemName="PART_ResetButton"/>
                        <dxei:GalleryBarItemLink BarItemName="galleryItem"/>
                        <dxb:BarButtonItemLink BarItemName="PART_NoColorButton"/>
                        <dxb:BarButtonItemLink BarItemName="PART_MoreColorsButton"/>
                    </dxb:PopupMenu>
                </dxb:MenuBarControl.Menu>
            </dxb:MenuBarControl>
        </dxb:BarManager>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ColorEditThemeKey ResourceKey=EditInplaceTemplate}">
        <dxb:BarManager x:Name="PART_Editor" CreateStandardLayout="False">
            <dxb:BarManager.Items>
                <dxb:BarButtonItem x:Name="PART_ResetButton"
                                   Content="{Binding ResetButtonContent, RelativeSource={RelativeSource TemplatedParent}}"
                                   IsVisible="{Binding ShowResetColorButton}"/>
                <dxei:GalleryBarItem x:Name="galleryItem">
                    <dxei:GalleryBarItem.Gallery>
                        <dxb:Gallery x:Name="PART_Gallery"
                                     AllowFilter="False"
                                     ColCount="{Binding Path=DataContext.ColumnCount, RelativeSource={RelativeSource TemplatedParent}}"
                                     GroupItemsMargin="0,3,0,3"
                                     IsGroupCaptionVisible="True"
                                     IsItemCaptionVisible="True"
                                     IsItemDescriptionVisible="False"
                                     IsItemGlyphVisible="False"
                                     ItemCheckMode="Single"
                                     ItemMargin="{Binding Path=DataContext.ChipMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                     MinColCount="{Binding Path=DataContext.ColumnCount, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </dxei:GalleryBarItem.Gallery>
                </dxei:GalleryBarItem>
                <dxb:BarButtonItem x:Name="PART_NoColorButton"
                                   Content="{Binding NoColorButtonContent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxe:ColorEditLocalizerConverter Id=ColorEdit_NoColorButtonCaption}}"
                                   IsVisible="{Binding ShowNoColorButton}"/>
                <dxb:BarButtonItem x:Name="PART_MoreColorsButton"
                                   Content="{Binding MoreColorsButtonContent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxe:ColorEditLocalizerConverter Id=ColorEdit_NoColorButtonCaption}}"
                                   Glyph="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/ColorEdit/MoreColors.svg"
                                   IsVisible="{Binding ShowMoreColorsButton}"/>
            </dxb:BarManager.Items>
            <dxb:MenuBarControl>
                <dxb:MenuBarControl.Menu>
                    <dxb:PopupMenu x:Name="PART_Menu">
                        <dxb:BarButtonItemLink BarItemName="PART_ResetButton"/>
                        <dxei:GalleryBarItemLink BarItemName="galleryItem"/>
                        <dxb:BarButtonItemLink BarItemName="PART_NoColorButton"/>
                        <dxb:BarButtonItemLink BarItemName="PART_MoreColorsButton"/>
                    </dxb:PopupMenu>
                </dxb:MenuBarControl.Menu>
            </dxb:MenuBarControl>
        </dxb:BarManager>
    </ControlTemplate>

</ResourceDictionary>