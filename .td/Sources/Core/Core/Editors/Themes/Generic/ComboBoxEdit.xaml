<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxec="clr-namespace:DevExpress.Xpf.Editors.Controls;assembly=DevExpress.Xpf.Core.v20.2"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxepc="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DataTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=LoadingButtonTemplate}">
        <Button Command="{Binding Command}"
                CommandParameter="{Binding CommandParameter}"
                Opacity="{Binding Tag}"
                Style="{DynamicResource {dxet:ComboBoxEditThemeKey ResourceKey=LoadingButtonStyle}}"/>
    </DataTemplate>

    <sys:Double x:Key="MinTextHeight">12</sys:Double>

    <Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=Style}"
           BasedOn="{StaticResource {x:Type ListBox}}"
           TargetType="{x:Type dxep:EditorListBox}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=Template}}"/>
        <Setter Property="Background" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=EditorPopupListBoxBackground}}"/>
        <Setter Property="TextSearch.TextPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(TextSearch.TextPath), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.CanContentScroll), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(VirtualizingPanel.IsVirtualizingWhenGrouping), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ScrollUnit2" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ScrollUnit, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=PopupStyle}"
           BasedOn="{StaticResource {dxet:EditorListBoxThemeKey ResourceKey=Style}}"
           TargetType="{x:Type dxep:EditorListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Contained"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditMode, RelativeSource={RelativeSource Self}}" Value="InplaceActive">
                <Setter Property="Foreground" Value="{DynamicResource {dxtEx:ThemeColorsThemeKey ResourceKey=BlackForegroundColor}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone">
                <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground, RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Height="Auto"
              SnapsToDevicePixels="True"
              Width="Auto">
            <Grid.Resources>
                <dxei:PopupListBoxDisplayMemberPathConverter x:Key="DisplayMemberPathConverter"/>
            </Grid.Resources>
            <dxepc:PopupListBox x:Name="PART_Content"
                                AllowItemHighlighting="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource TemplatedParent} }"
                                BorderBrush="{x:Null}"
                                BorderThickness="0,0,0,0"
                                DisplayMemberPath="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DisplayMemberPathConverter}}"
                                dx:FocusHelper2.Focusable="False"
                                FocusVisualStyle="{x:Null}"
                                HorizontalContentAlignment="{Binding Path=Tag.HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                ItemsPanel="{Binding Path=Tag.ItemsPanel, RelativeSource={RelativeSource TemplatedParent}}"
                                ItemTemplate="{Binding Path=Tag.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=PopupStyle}}"
                                VerticalContentAlignment="{Binding Path=Tag.VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                <dxepc:PopupListBox.ItemTemplateSelector>
                    <Binding Path="Tag.ItemTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}"/>
                </dxepc:PopupListBox.ItemTemplateSelector>
            </dxepc:PopupListBox>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemImageTemplate}">
        <DockPanel HorizontalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource Self}}"
                   LastChildFill="True"
                   Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
                   MinHeight="{StaticResource MinTextHeight}"
                   VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource Self}}">
            <dxei:ImagePresenter DataContext="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectedItem, RelativeSource={RelativeSource Self}}"
                                 DockPanel.Dock="Left"
                                 Padding="{DynamicResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemImagePadding}}"/>
            <dxei:EditItemContentPresenter x:Name="PART_Editor"
                                           Content="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectedItemValue, RelativeSource={RelativeSource Self}}"
                                           ContentTemplate="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplate, RelativeSource={RelativeSource Self}}"
                                           Margin="{DynamicResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemContentPadding}}"
                                           VerticalContentAlignment="Center">
                <dxei:EditItemContentPresenter.ContentTemplateSelector>
                    <Binding Path="(dxe:BaseEdit.OwnerEdit).ItemTemplateSelector" RelativeSource="{RelativeSource Self}"/>
                </dxei:EditItemContentPresenter.ContentTemplateSelector>
            </dxei:EditItemContentPresenter>
        </DockPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemTemplate}">
        <Grid Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}">
            <dxei:EditItemContentPresenter x:Name="PART_Editor"
                                           Content="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectedItemValue, RelativeSource={RelativeSource Self}}"
                                           ContentTemplate="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplate, RelativeSource={RelativeSource Self}}"
                                           HorizontalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource Self}}"
                                           Margin="{DynamicResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemContentPadding}}"
                                           VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource Self}}">
                <ContentPresenter.ContentTemplateSelector>
                    <Binding Path="(dxe:BaseEdit.OwnerEdit).ItemTemplateSelector" RelativeSource="{RelativeSource Self}"/>
                </ContentPresenter.ContentTemplateSelector>
            </dxei:EditItemContentPresenter>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=AutoCompleteBoxTemplate}">
        <dxei:TokenEditor x:Name="PART_Editor"
                          CharacterCasing="{Binding Path=(dxe:BaseEdit.OwnerEdit).CharacterCasing, RelativeSource={RelativeSource Self}}"
                          IsReadOnly="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly, RelativeSource={RelativeSource Self}}"
                          IsTextEditable="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}"
                          Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
                          MaxTextLength="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength, RelativeSource={RelativeSource Self}}"
                          NullTextForeground="{Binding Path=(dxe:BaseEdit.OwnerEdit).NullTextForeground, RelativeSource={RelativeSource Self}}"
                          UseLayoutRounding="True"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=AutoCompleteBoxDisplayTemplate}">
        <dxei:TokenEditor x:Name="PART_Editor"
                          CharacterCasing="{Binding Path=(dxe:BaseEdit.OwnerEdit).CharacterCasing, RelativeSource={RelativeSource Self}}"
                          IsReadOnly="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly, RelativeSource={RelativeSource Self}}"
                          IsTextEditable="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}"
                          Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
                          MaxTextLength="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength, RelativeSource={RelativeSource Self}}"
                          NullTextForeground="{Binding Path=(dxe:BaseEdit.OwnerEdit).NullTextForeground, RelativeSource={RelativeSource Self}}"
                          UseLayoutRounding="True"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=AutoCompleteBoxNonEditableTemplate}">
        <dxei:TokenEditor x:Name="PART_Editor"
                          CharacterCasing="{Binding Path=(dxe:BaseEdit.OwnerEdit).CharacterCasing, RelativeSource={RelativeSource Self}}"
                          IsReadOnly="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly, RelativeSource={RelativeSource Self}}"
                          IsTextEditable="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}"
                          Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
                          MaxTextLength="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength, RelativeSource={RelativeSource Self}}"
                          NullTextForeground="{Binding Path=(dxe:BaseEdit.OwnerEdit).NullTextForeground, RelativeSource={RelativeSource Self}}"
                          UseLayoutRounding="True"/>
    </ControlTemplate>

    <DataTemplate x:Key="SearchPanelButtonTemplate">
        <Border Margin="{Binding Path=ActualMargin}" UseLayoutRounding="True">
            <Button x:Name="PART_Item"
                    AutomationProperties.AutomationId="{Binding Path=(AutomationProperties.AutomationId)}"
                    AutomationProperties.Name="{Binding Path=(AutomationProperties.Name)}"
                    Style="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=ButtonStyle}}"/>
        </Border>
    </DataTemplate>

    <dx:ListOfObjectToIEnumerableOfStringConverter x:Key="listConverter"/>

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <dx:BoolInverseConverter x:Key="boolInverseConverter"/>

    <dx:VisibilityToBoolInverseConverter x:Key="visibilityToBoolInverseConverter"/>

    <dx:StringToVisibilityConverter x:Key="stringToVisibilityConverter"/>

    <dx:SearchInfoConverter x:Key="searchInfoConverter"/>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,0,6,0"/>
        <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
        <Setter Property="AutomationProperties.Name" Value="Find"/>
        <Setter Property="AutomationProperties.AutomationId" Value="SearchFindButton"/>
        <Setter Property="Content" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpFind, Converter={StaticResource EditorStringIdConverter}}"/>
    </Style>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
        <Setter Property="AutomationProperties.Name" Value="Close"/>
        <Setter Property="AutomationProperties.AutomationId" Value="SearchCloseButton"/>
        <Setter Property="ToolTip" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpClose, Converter={StaticResource EditorStringIdConverter}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2,4,2,4"/>
        <Setter Property="Margin" Value="4,0,4,0"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=ButtonGlyphTemplate}}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=ShowButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
        <Setter Property="AutomationProperties.Name" Value="ShowSearchPanel"/>
        <Setter Property="AutomationProperties.AutomationId" Value="SearchPanelShowButton"/>
        <Setter Property="ToolTip" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpShow, Converter={StaticResource EditorStringIdConverter}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2,4,2,4"/>
        <Setter Property="Margin" Value="4,0,4,0"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=ButtonGlyphTemplate}}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=NextButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
        <Setter Property="AutomationProperties.Name" Value="Next"/>
        <Setter Property="AutomationProperties.AutomationId" Value="SearchNextButton"/>
        <Setter Property="ToolTip" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpNext, Converter={StaticResource EditorStringIdConverter}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2,4,2,4"/>
        <Setter Property="Margin" Value="4,0,0,0"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=ButtonGlyphTemplate}}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=PrevButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False"/>
        <Setter Property="AutomationProperties.Name" Value="Previous"/>
        <Setter Property="AutomationProperties.AutomationId" Value="SearchPreviousButton"/>
        <Setter Property="ToolTip" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpPrevious, Converter={StaticResource EditorStringIdConverter}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2,4,2,4"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=ButtonGlyphTemplate}}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Height" Value="44"/>
                <Setter Property="Width" Value="44"/>
                <Setter Property="Padding" Value="4,6,4,6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <dx:BoolToObjectConverter x:Key="NullValueButtonPlacementConverter">
        <dx:BoolToObjectConverter.TrueValue>EditBox</dx:BoolToObjectConverter.TrueValue>
        <dx:BoolToObjectConverter.FalseValue>None</dx:BoolToObjectConverter.FalseValue>
    </dx:BoolToObjectConverter>

    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <ControlTemplate x:Key="{dxet:SearchControlThemeKey ResourceKey=Template}" TargetType="dxe:SearchControl">
        <ContentControl Background="{TemplateBinding Background}"
                        dx:FocusHelper2.Focusable="False"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch">
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <dxei:ChildMinWidthPanel ChildMinWidth="{Binding Path=SearchTextBoxMinWidth, RelativeSource={RelativeSource TemplatedParent}}">
                    <dxepc:ComboBoxEdit x:Name="editor"
                                        AllowDefaultButton="False"
                                        AutomationProperties.AutomationId="SearchComboBox"
                                        AutomationProperties.Name="SearchComboBox"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}"
                                        dxei:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        dxepc:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                        EditValue="{Binding Path=SearchControlPropertyProvider.SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        EditValuePostDelay="{Binding Path=SearchTextPostDelay, RelativeSource={RelativeSource TemplatedParent}}"
                                        EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}"
                                        ImmediatePopup="{Binding Path= SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}"
                                        IncrementalFiltering="False"
                                        IsCaseSensitiveSearch="True"
                                        IsTabStop="{Binding IsEditorTabStop, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        ItemsSource="{Binding Path=MRU, RelativeSource={RelativeSource TemplatedParent}}"
                                        Margin="0"
                                        MinHeight="22"
                                        NullTextForeground="{Binding Path=NullTextForeground, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverseConverter}}"
                                        ValidateOnEnterKeyPressed="True">
                        <dxepc:ComboBoxEdit.NullText>
                            <MultiBinding>
                                <Binding Path="NullText" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Converter="{StaticResource EditorStringIdConverter}"
                                         ConverterParameter="LookUpSearch"
                                         Path="IsTabStop"
                                         RelativeSource="{RelativeSource Self}"/>
                                <MultiBinding.Converter>
                                    <dx:SearchControlNullTextConverter/>
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </dxepc:ComboBoxEdit.NullText>
                        <!--<dxe:ComboBoxEdit.StyleSettings>
                            <dxe:SearchControlStyleSettings/>
                        </dxe:ComboBoxEdit.StyleSettings>-->
                        <dxepc:ComboBoxEdit.Buttons>
                            <dxepc:ButtonInfo x:Name="resultInfo"
                                              Command="{x:Null}"
                                              Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowResultInfo, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <dxepc:ButtonInfo.Content>
                                    <MultiBinding Converter="{StaticResource searchInfoConverter}">
                                        <Binding Path="ResultIndex" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ResultCount" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </dxepc:ButtonInfo.Content>
                                <dxepc:ButtonInfo.Template>
                                    <DataTemplate>
                                        <TextBlock x:Name="textBlockResultInfo"
                                                   Foreground="{DynamicResource {dxet:TextEditThemeKey ResourceKey=NullTextForeground}}"
                                                   Margin="2,0,2,0"
                                                   Text="{Binding Content}"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding Visibility}"/>
                                    </DataTemplate>
                                </dxepc:ButtonInfo.Template>
                            </dxepc:ButtonInfo>
                            <dxepc:ButtonInfo x:Name="buttonClear"
                                              Command="{Binding Path=SearchControlPropertyProvider.ClearSearchTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                              GlyphKind="Custom"
                                              Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <dxepc:ButtonInfo.Template>
                                    <DataTemplate>
                                        <dxepc:ButtonClose Command="{Binding Command}"
                                                           HorizontalAlignment="Center"
                                                           Margin="2,0"
                                                           VerticalAlignment="Center"
                                                           Visibility="{Binding Visibility}"/>
                                    </DataTemplate>
                                </dxepc:ButtonInfo.Template>
                            </dxepc:ButtonInfo>
                            <dxepc:ButtonInfo x:Name="SearchFindButton"
                                              AutomationProperties.AutomationId="SearchFindButton"
                                              AutomationProperties.Name="Find"
                                              Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                              CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}"
                                              dx:FocusHelper2.Focusable="False"
                                              GlyphKind="Search"
                                              Template="{StaticResource SearchPanelButtonTemplate}"
                                              ToolTip="{Binding RelativeSource={RelativeSource Self}, ConverterParameter=LookUpFind, Converter={StaticResource EditorStringIdConverter}}"
                                              Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>
                            <dxepc:ButtonInfo Command="{Binding Path=OpenPopupCommand, ElementName=editor}"
                                              GlyphKind="DropDown"
                                              Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}"/>
                        </dxepc:ComboBoxEdit.Buttons>
                    </dxepc:ComboBoxEdit>
                </dxei:ChildMinWidthPanel>
                <Button x:Name="buttonPrev"
                        Command="{Binding PrevCommand, RelativeSource={RelativeSource AncestorType=dxe:SearchControl}, UpdateSourceTrigger=PropertyChanged}"
                        Grid.Column="1"
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=PrevButtonStyle}}"
                        Visibility="{Binding Path=ShowSearchPanelNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Content>
                        <Path Data="F1 M 1.41188,4.23969L 0,5.65157L 1.41421,7.06578L 5.65685,2.82314L 9.89949,7.06579L 11.3137,5.65157L 9.90244,4.2403L 9.9001,4.24264L 5.65746,-3.12924e-007"
                              Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                              Height="7.06579"
                              HorizontalAlignment="Center"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              Width="11.3137"/>
                    </Button.Content>
                </Button>
                <Button x:Name="buttonNext"
                        Command="{Binding NextCommand, RelativeSource={RelativeSource AncestorType=dxe:SearchControl}, UpdateSourceTrigger=PropertyChanged}"
                        Grid.Column="2"
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=NextButtonStyle}}"
                        Visibility="{Binding Path=ShowSearchPanelNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Content>
                        <Path Data="F1 M 1.41188,2.82609L 0,1.41422L 1.41421,3.50177e-006L 5.65685,4.24264L 9.89949,6.4075e-007L 11.3137,1.41421L 9.90244,2.82548L 9.9001,2.82315L 5.65746,7.06579"
                              Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                              Height="7.06579"
                              HorizontalAlignment="Center"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              Width="11.3137"/>
                    </Button.Content>
                </Button>
                <Button x:Name="SearchCloseButton"
                        Command="{Binding Path=SearchControlPropertyProvider.CloseCommandInternal, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        Grid.Column="3"
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}}"
                        Visibility="{Binding Path=ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Content>
                        <Path Data="F1 M 9.89949,0L 11.3137,1.41421L 7.07106,5.65685L 11.3137,9.89949L 9.89949,11.3137L 5.65685,7.07107L 1.41421,11.3137L 0,9.89949L 4.24264,5.65685L -1.49012e-007,1.41422L 1.41421,2.86102e-006L 5.65685,4.24264L 9.89949,0 Z "
                              Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                              Height="11.3137"
                              HorizontalAlignment="Center"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              Width="11.3137"/>
                    </Button.Content>
                </Button>
            </Grid>
        </ContentControl>
    </ControlTemplate>

</ResourceDictionary>