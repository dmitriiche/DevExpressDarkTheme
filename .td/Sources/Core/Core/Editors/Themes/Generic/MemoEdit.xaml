<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxepc="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:help="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--PROCESS SETTERS WITH BINDING-->

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Editors/Themes/Generic/TextEdit.xaml"/>
        <dxtEx:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Editors/Themes/Generic/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <Style x:Key="{dxet:MemoEditThemeKey ResourceKey=MemoStyle}" TargetType="dxe:TextEdit">
        <Setter Property="MaxLength" Value="{Binding Path=Tag.MaxLength, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="IsReadOnly" Value="{Binding Path=Tag.IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="ShowBorder" Value="False"/>
        <Setter Property="Foreground" Value="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="TextWrapping" Value="{Binding Path=Tag.MemoTextWrapping, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="AcceptsReturn" Value="{Binding Path=Tag.MemoAcceptsReturn, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="SelectAllOnGotFocus" Value="False"/>
        <!--BEGIN WPF-->
        <Setter Property="AcceptsTab" Value="{Binding Path=Tag.MemoAcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"/>
        <!--END WPF-->
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding Path=Tag.MemoVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding Path=Tag.MemoHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="ContentControl">
        <Grid Style="{DynamicResource {dxet:MemoEditThemeKey ResourceKey=MemoBackgroundStyle}}">
            <dxepc:TextEdit x:Name="PART_PopupContent" Style="{DynamicResource {dxet:MemoEditThemeKey ResourceKey=MemoStyle}}"/>
        </Grid>
    </ControlTemplate>

    <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter"/>

    <dxepc:MemoEditIconIndexConverter x:Key="MemoEditIconIndexConverter"/>

    <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=DisplayIconTemplate}">
        <Grid x:Name="PART_Editor"
              Background="Transparent"
              Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
              cs:id="Grid_0000">
            <TextBlock x:Name="HeightHolder" Text=" "/>
            <Border Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}"/>
            <dxcn:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
                <!--BEGIN WPF-->
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage dx:WpfSvgPalette.Palette="{DynamicResource {dxtEx:BrushesThemeKey ResourceKey=GrayScaleSvgPalette}}"
                                Height="16"
                                Source="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                                Stretch="Fill"
                                Width="16"/>
                </dx:PixelSnapper>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage dx:WpfSvgPalette.Palette="{DynamicResource {dxet:BaseEditThemeKey ResourceKey=DefaultIconSvgPalette}}"
                                Height="16"
                                Source="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                                Stretch="Fill"
                                Width="16"/>
                </dx:PixelSnapper>
            </dxcn:MultiContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding"
                        TargetName="HeightHolder"
                        Value="14,13"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=EditNonEditableIconInplaceTemplate}">
        <Grid x:Name="PART_Editor"
              Background="Transparent"
              Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
              cs:id="Grid_0000">
            <TextBlock x:Name="HeightHolder" Text=" "/>
            <Border Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"/>
            <dxcn:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
                <!--BEGIN WPF-->
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage dx:WpfSvgPalette.Palette="{DynamicResource {dxtEx:BrushesThemeKey ResourceKey=GrayScaleSvgPalette}}"
                                Height="16"
                                Source="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                                Stretch="Fill"
                                Width="16"/>
                </dx:PixelSnapper>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage dx:WpfSvgPalette.Palette="{DynamicResource {dxet:BaseEditThemeKey ResourceKey=DefaultIconSvgPalette}}"
                                Height="16"
                                Source="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                                Stretch="Fill"
                                Width="16"/>
                </dx:PixelSnapper>
            </dxcn:MultiContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding"
                        TargetName="HeightHolder"
                        Value="14,13"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=EditNonEditableIconTemplate}">
        <Grid x:Name="PART_Editor"
              Background="Transparent"
              Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
              cs:id="Grid_0000">
            <TextBlock x:Name="HeightHolder"
                       Margin="2,3"
                       Text=" "/>
            <Border Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"/>
            <dxcn:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
                <!--BEGIN WPF-->
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage dx:WpfSvgPalette.Palette="{DynamicResource {dxtEx:BrushesThemeKey ResourceKey=GrayScaleSvgPalette}}"
                                Height="16"
                                Source="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                                Stretch="Fill"
                                Width="16"/>
                </dx:PixelSnapper>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage dx:WpfSvgPalette.Palette="{DynamicResource {dxet:BaseEditThemeKey ResourceKey=DefaultIconSvgPalette}}"
                                Height="16"
                                Source="/DevExpress.Xpf.Core.v20.2;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                                Stretch="Fill"
                                Width="16"/>
                </dx:PixelSnapper>
            </dxcn:MultiContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding"
                        TargetName="HeightHolder"
                        Value="12,11"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>