<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Editors/Themes/Generic/PopupListBox.xaml"/>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Editors/Themes/VS2019Dark/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid x:Name="Root">
            <Rectangle x:Name="IsFocus"
                       Opacity="0"
                       Stroke="$Focused"
                       StrokeDashArray="1 2"
                       StrokeThickness="1"
                       cs:id="Rectangle_0000"/>
            <Border x:Name="IsDefault"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    cs:id="Border_0000"/>
            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       LastChildFill="True"
                       Margin="{TemplateBinding BorderThickness}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <dxei:ImagePresenter DockPanel.Dock="Left" Padding="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemImagePadding}}"/>
                <dx:ContentContainer x:Name="Content"
                                     Margin="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemContentPadding}}"
                                     cs:id="ContentContainer_0000">
                    <ContentPresenter/>
                </dx:ContentContainer>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Foreground"
                        TargetName="Content"
                        Value="$Backstage.Focused"
                        cs:id="Setter_0003"/>
                <Setter Property="Opacity"
                        TargetName="IsFocus"
                        Value="1"/>
            </Trigger>
            <Trigger Property="dxi:AppearanceOptions.HasPadding" Value="True">
                <Setter Property="Margin"
                        TargetName="Content"
                        Value="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="dxi:AppearanceOptions.HasBorderThickness" Value="True">
                <Setter Property="StrokeThickness"
                        TargetName="IsFocus"
                        Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                    <Condition Property="dxe:EditorAppearanceProperties.HasFocusedBorderBrush" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Stroke"
                        TargetName="IsFocus"
                        Value="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}">
                </Setter>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        Value="Transparent"
                        cs:id="Setter_0000"/>
                <Setter Property="BorderBrush"
                        Value="Transparent"
                        cs:id="Setter_0006"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"
                        Value="$SelectionBackground"
                        cs:id="Setter_0004"/>
                <Setter Property="Foreground"
                        Value="$SelectionForeground"
                        cs:id="Setter_0010"/>
                <Setter Property="BorderBrush"
                        Value="$SelectionBorder"
                        cs:id="Setter_0011"/>
                <Setter Property="Opacity"
                        TargetName="IsFocus"
                        Value="0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsFocused" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="$HoverForeground"
                        cs:id="Setter_0005"/>
                <Setter Property="Background"
                        Value="$SelectionBackground"
                        cs:id="Setter_0001"/>
                <Setter Property="BorderBrush"
                        Value="$SelectionBorder"
                        cs:id="Setter_0007"/>
                <Setter Property="Opacity"
                        TargetName="IsDefault"
                        Value="0.62"/>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        TargetName="Content"
                        Value="$HoverForeground"
                        cs:id="Setter_0009"/>
                <Setter Property="Background"
                        Value="$HoverBackground"
                        cs:id="Setter_0002"/>
                <Setter Property="BorderBrush"
                        Value="$HoverBorder"
                        cs:id="Setter_0008"/>
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="Root"
                        Value="0.38"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin"
                        TargetName="Content"
                        Value="14"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>