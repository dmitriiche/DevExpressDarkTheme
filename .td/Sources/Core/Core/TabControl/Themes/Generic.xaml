<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxmvvmi="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Duration x:Key="ScrollAnimationDuration">0:0:0.25</Duration>

    <Duration x:Key="MouseOverAnimationDuration">0:0:0.15</Duration>

    <sys:Int32 x:Key="ScrollButtonInterval">100</sys:Int32>

    <dxcn:DXTabControlHeaderMenuTemplateSelector x:Key="headerMenuSelector"/>

    <dxmvvmi:ObjectToObjectConverter x:Key="HideButtonShowModeToVisibilityConverter" DefaultTarget="Collapsed">
        <dxmvvmi:MapItem Source="InHeaderArea" Target="Visible"/>
        <dxmvvmi:MapItem Source="InAllTabsAndHeaderArea" Target="Visible"/>
        <dxmvvmi:MapItem Source="InActiveTabAndHeaderArea" Target="Visible"/>
    </dxmvvmi:ObjectToObjectConverter>

    <dxmvvmi:ObjectToObjectConverter x:Key="HeaderLocationIsRightOrBottom" DefaultTarget="False">
        <dxmvvmi:MapItem Source="Right" Target="True"/>
        <dxmvvmi:MapItem Source="Bottom" Target="True"/>
    </dxmvvmi:ObjectToObjectConverter>

    <dxcn:TabPanelSelector x:Key="TabPanelSelector">
        <dxcn:TabPanelSelector.MultiLineView>
            <ItemsPanelTemplate>
                <dxcn:TabPanelMultiLineView HeaderLocation="{Binding Tag.HeaderLocation, RelativeSource={RelativeSource Self}}"
                                            IsHoldMode="{Binding Tag.FixedHeaders, RelativeSource={RelativeSource Self}}"
                                            IsStretchedHorizontally="{Binding Tag.HeaderAutoFill, RelativeSource={RelativeSource Self}}"
                                            SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=dx:DXTabControl}}"
                                            Tag="{Binding Path=Tag.MultiLineView, RelativeSource={RelativeSource TemplatedParent}}"/>
            </ItemsPanelTemplate>
        </dxcn:TabPanelSelector.MultiLineView>
        <dxcn:TabPanelSelector.ScrollView>
            <ItemsPanelTemplate>
                <dxcn:TabPanelScrollView AllowAnimation="{Binding Tag.AllowAnimation, RelativeSource={RelativeSource Self}}"
                                         HeaderLocation="{Binding Tag.HeaderLocation, RelativeSource={RelativeSource Self}}"
                                         IsStretchedHorizontally="{Binding Tag.HeaderAutoFill, RelativeSource={RelativeSource Self}}"
                                         SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=dx:DXTabControl}}"
                                         Tag="{Binding Path=Tag.ScrollView, RelativeSource={RelativeSource TemplatedParent}}">
                    <dxcn:TabPanelScrollView.ScrollAnimation>
                        <DoubleAnimation Duration="{StaticResource ScrollAnimationDuration}"/>
                    </dxcn:TabPanelScrollView.ScrollAnimation>
                </dxcn:TabPanelScrollView>
            </ItemsPanelTemplate>
        </dxcn:TabPanelSelector.ScrollView>
        <dxcn:TabPanelSelector.StretchView>
            <ItemsPanelTemplate>
                <dxcn:TabPanelStretchView ActiveChildMinSize="{Binding Tag.SelectedTabMinSize, RelativeSource={RelativeSource Self}}"
                                          DragDropMode="{Binding Tag.DragDropMode, RelativeSource={RelativeSource Self}}"
                                          HeaderLocation="{Binding Tag.HeaderLocation, RelativeSource={RelativeSource Self}}"
                                          NormalChildMinSize="{Binding Tag.TabMinSize, RelativeSource={RelativeSource Self}}"
                                          NormalChildSize="{Binding Tag.TabNormalSize, RelativeSource={RelativeSource Self}}"
                                          Owner="{Binding Tag, RelativeSource={RelativeSource Self}}"
                                          PinChildLeftSize="{Binding Tag.PinnedTabSize, RelativeSource={RelativeSource Self}}"
                                          PinChildRightSize="{Binding Tag.PinnedTabSize, RelativeSource={RelativeSource Self}}"
                                          SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=dx:DXTabControl}}"
                                          Tag="{Binding Path=Tag.StretchView, RelativeSource={RelativeSource TemplatedParent}}"/>
            </ItemsPanelTemplate>
        </dxcn:TabPanelSelector.StretchView>
    </dxcn:TabPanelSelector>

    <Style x:Key="PanelContainerDefaultStyle" TargetType="{x:Type dxcn:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="4,0,3,-1"/>
        <Setter Property="NormalPadding" Value="0,2,0,1"/>
        <Setter Property="HoldMargin" Value="0,0,-1,0"/>
        <Setter Property="HoldPadding" Value="0,0,0,0"/>
    </Style>

    <Style x:Key="TabControlGlyphDefaultStyle" TargetType="{x:Type dxcn:GlyphControl}">
        <Setter Property="GlyphLeftTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 4,0L 5,0L 5,9L 4,9L 4,8L 3,8L 3,7L 2,7L 2,6L 1,6L 1,5L 0,5L 0,4L 1,4L 1,3L 2,3L 2,2L 3,2L 3,1L 4,1L 4,0 Z "
                          Fill="{TemplateBinding Background}"
                          Height="9"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphRightTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 0,0L 1,0L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,4L 5,4L 5,5L 4,5L 4,6L 3,6L 3,7L 2,7L 2,8L 1,8L 1,9L 0,9L 0,0 Z "
                          Fill="{TemplateBinding Background}"
                          Height="9"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphUpTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 1.52588e-005,7.00006L 11,7.00006L 5.99998,0L 4.99998,0L 1.52588e-005,7.00006 Z "
                          Fill="{TemplateBinding Background}"
                          Height="5"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="9"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphDownTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 0,0L 11,0L 5.99995,7L 4.99995,7L 0,0 Z "
                          Fill="{TemplateBinding Background}"
                          Height="5"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="9"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphPlusTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 1,4L 4,4L 4,1L 5,1L 5,4L 8,4L 8,5L 5,5L 5,8L 4,8L 4,5L 1,5L 1,4 Z "
                          Fill="{TemplateBinding Background}"
                          Height="9"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="9"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphCloseTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 385,283L 386,283L 388,285L 390,283L 391,283L 391,284L 389,286L 391,288L 391,289L 390,289L 388,287L 386,289L 385,289L 385,288L 387,286L 385,284L 385,283 Z "
                          Fill="{TemplateBinding Background}"
                          Height="7"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="7"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDefaultStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxcn:GlyphControl Background="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                                       GlyphViewInfo="{Binding}"
                                       Style="{StaticResource TabControlGlyphDefaultStyle}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="{StaticResource MouseOverAnimationDuration}"
                                                         Storyboard.TargetName="hover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="hover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.0"
                                                         Storyboard.TargetName="pressed"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.0"
                                                         Storyboard.TargetName="pressed"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.0"
                                                         Storyboard.TargetName="content"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.35"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="normal"
                                          ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=ButtonNormalBackground}}"
                                          Margin="{TemplateBinding Padding}"/>
                        <ContentPresenter x:Name="hover"
                                          ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}}"
                                          Margin="{TemplateBinding Padding}"
                                          Opacity="0"/>
                        <ContentPresenter x:Name="pressed"
                                          ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}}"
                                          Margin="{TemplateBinding Padding}"
                                          Opacity="0"/>
                        <ContentPresenter x:Name="content"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TabControlDefaultTemplate" TargetType="{x:Type dx:DXTabControl}">
        <dxcn:TabLayoutPanel KeyboardNavigation.TabNavigation="Local"
                             UseLayoutRounding="True"
                             ViewInfo="{TemplateBinding ViewInfo}">
            <dxcn:TabLayoutPanel.LayoutDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </dxcn:TabLayoutPanel.LayoutDefinitions>
            <dxcn:TabOrientablePanel x:Name="PART_HeaderContainer"
                                     dxcn:TabLayoutPanel.LayoutPosition="0"
                                     Indent="{TemplateBinding PanelIndent}"
                                     Panel.ZIndex="1"
                                     ViewInfo="{TemplateBinding ViewInfo}">
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvmi:EventToCommand Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            CommandParameter="False"
                                            EventName="SizeChanged"/>
                </dxmvvmi:Interaction.Behaviors>
                <dxcn:TabOrientablePanel.HorizontalLayout>
                    <dxcn:OrientableLayout>
                        <dxcn:OrientableLayout.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </dxcn:OrientableLayout.ColumnDefinitions>
                    </dxcn:OrientableLayout>
                </dxcn:TabOrientablePanel.HorizontalLayout>
                <dxcn:TabOrientablePanel.VerticalLayout>
                    <dxcn:OrientableLayout>
                        <dxcn:OrientableLayout.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </dxcn:OrientableLayout.RowDefinitions>
                    </dxcn:OrientableLayout>
                </dxcn:TabOrientablePanel.VerticalLayout>
                <ContentPresenter x:Name="PART_ControlBoxLeft"
                                  Content="{TemplateBinding ControlBoxLeft}"
                                  dxcn:TabOrientablePanel.HColumn="0"
                                  dxcn:TabOrientablePanel.VRow="7"/>
                <dxcn:TabPanelContainer x:Name="PART_TabPanelContainer"
                                        ClipToBounds="True"
                                        dxcn:TabOrientablePanel.HColumn="1"
                                        dxcn:TabOrientablePanel.VRow="6"
                                        Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}}"
                                        ViewInfo="{TemplateBinding ViewInfo}">
                    <dxmvvmi:Interaction.Behaviors>
                        <!--<dxmvvm:EventToCommand EventName="SizeChanged" Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="False"/>-->
                        <dxmvvmi:EventToCommand Command="{Binding View.ScrollView.UpdateScrollButtonsCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="LayoutUpdated"/>
                        <dxmvvmi:EventToCommand Command="{Binding View.ScrollView.ScrollOnMouseWheelCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                EventName="MouseWheel"
                                                PassEventArgsToCommand="True"/>
                    </dxmvvmi:Interaction.Behaviors>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabIndex="1"
                                    KeyboardNavigation.TabNavigation="Once"
                                    Tag="{TemplateBinding View}"/>
                    <dxcn:TabPanelContainer.ControlBox>
                        <StackPanel Orientation="{Binding Path=ViewInfo.Orientation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Button x:Name="PART_PanelNewButton"
                                    Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    dxcn:GlyphControl.GlyphControlMode="Plus"
                                    Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}}"
                                    Visibility="{Binding View.PanelNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="PART_ControlBoxPanel" Content="{TemplateBinding ControlBoxPanel}"/>
                        </StackPanel>
                    </dxcn:TabPanelContainer.ControlBox>
                </dxcn:TabPanelContainer>
                <ContentPresenter x:Name="PART_ControlBoxRight"
                                  Content="{TemplateBinding ControlBoxRight}"
                                  dxcn:TabOrientablePanel.HColumn="2"
                                  dxcn:TabOrientablePanel.VRow="5"/>
                <RepeatButton x:Name="PART_PrevButton"
                              Command="{Binding View.ScrollView.ScrollPrevCommand, RelativeSource={RelativeSource TemplatedParent}}"
                              dxcn:GlyphControl.GlyphControlMode="Left"
                              dxcn:TabOrientablePanel.HColumn="3"
                              dxcn:TabOrientablePanel.VRow="3"
                              Interval="{StaticResource ScrollButtonInterval}"
                              Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}}"
                              Visibility="{Binding View.ScrollView.IsScrollPrevButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <RepeatButton x:Name="PART_NextButton"
                              Command="{Binding View.ScrollView.ScrollNextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                              dxcn:GlyphControl.GlyphControlMode="Right"
                              dxcn:TabOrientablePanel.HColumn="4"
                              dxcn:TabOrientablePanel.VRow="4"
                              Interval="{StaticResource ScrollButtonInterval}"
                              Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}}"
                              Visibility="{Binding View.ScrollView.IsScrollNextButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <Grid dxcn:TabOrientablePanel.HColumn="5"
                      dxcn:TabOrientablePanel.VRow="2"
                      Visibility="{Binding View.ShowHeaderMenu, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <ToggleButton x:Name="PART_HeaderMenu"
                                  dxcn:GlyphControl.GlyphControlMode="Down"
                                  IsChecked="{Binding MenuInfo.IsMenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  IsHitTestVisible="{Binding IsOpen, ElementName=PART_HeaderMenuPopup, Converter={dxmvvm:BooleanNegationConverter}}"
                                  Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}}"/>
                    <dxb:PopupMenu x:Name="PART_HeaderMenuPopup"
                                   IsOpen="{Binding Path=IsChecked, ElementName=PART_HeaderMenu}"
                                   Placement="Right"
                                   PlacementTarget="{Binding ElementName=PART_HeaderMenu}">
                        <dxb:BarLinkContainerItem x:Name="PART_HeaderMenuPopupItemsContainer"
                                                  IsPrivate="True"
                                                  ItemLinksSource="{Binding MenuInfo.Items, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ItemTemplateSelector="{StaticResource headerMenuSelector}"/>
                    </dxb:PopupMenu>
                </Grid>
                <Button x:Name="PART_CloseButton"
                        Command="{Binding View.CloseTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        dxcn:GlyphControl.GlyphControlMode="Close"
                        dxcn:TabOrientablePanel.HColumn="6"
                        dxcn:TabOrientablePanel.VRow="1"
                        Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}}"
                        Visibility="{Binding View.HideButtonShowMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HideButtonShowModeToVisibilityConverter}}"/>
                <Button x:Name="PART_MainNewButton"
                        Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        dxcn:GlyphControl.GlyphControlMode="Plus"
                        dxcn:TabOrientablePanel.HColumn="7"
                        dxcn:TabOrientablePanel.VRow="0"
                        Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}}"
                        Visibility="{Binding View.MainNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
            </dxcn:TabOrientablePanel>
            <Grid Name="PART_ContentContainer" dxcn:TabLayoutPanel.LayoutPosition="1">
                <ContentPresenter Content="{TemplateBinding ViewInfo}" ContentTemplate="{TemplateBinding BackgroundTemplate}"/>
                <Border Padding="1">
                    <Grid Name="PART_ContentHost"
                          Grid.Row="1"
                          Margin="{TemplateBinding Padding}"
                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="PART_ContentHeader"
                                          Content="{TemplateBinding ContentHeader}"
                                          Grid.Row="0"/>
                        <ContentPresenter x:Name="PART_ContentFooter"
                                          Content="{TemplateBinding ContentFooter}"
                                          Grid.Row="2"/>
                        <Grid Name="PART_ContentHostPresenter" Grid.Row="1">
                            <dxcn:TabControlContentPresenter x:Name="PART_SelectedContentHost"
                                                             ActualHorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                             ActualVerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                             Content="{TemplateBinding SelectedItemContent}"
                                                             ContentStringFormat="{TemplateBinding SelectedItemContentStringFormat}"
                                                             ContentTemplate="{TemplateBinding SelectedItemContentTemplate}"
                                                             ContentTemplateSelector="{TemplateBinding SelectedItemContentTemplateSelector}"
                                                             dxb:BarNameScope.IsScopeOwner="True"
                                                             KeyboardNavigation.DirectionalNavigation="Contained"
                                                             KeyboardNavigation.TabIndex="2"
                                                             KeyboardNavigation.TabNavigation="Local"
                                                             TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            <dxcn:FastRenderPanel x:Name="PART_FastRenderPanel"
                                                  ContentCacheMode="{TemplateBinding TabContentCacheMode}"
                                                  dxb:BarNameScope.IsScopeOwner="True"
                                                  KeyboardNavigation.DirectionalNavigation="Contained"
                                                  KeyboardNavigation.TabIndex="2"
                                                  KeyboardNavigation.TabNavigation="Local"
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </dxcn:TabLayoutPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.HeaderLocation, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter Property="Height"
                        TargetName="PART_HeaderContainer"
                        Value="0"/>
                <Setter Property="Width"
                        TargetName="PART_HeaderContainer"
                        Value="0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ViewInfo.Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                <Setter Property="dxcn:GlyphControl.GlyphControlMode"
                        TargetName="PART_PrevButton"
                        Value="Up"/>
                <Setter Property="dxcn:GlyphControl.GlyphControlMode"
                        TargetName="PART_NextButton"
                        Value="Down"/>
                <Setter Property="dxcn:GlyphControl.GlyphControlMode"
                        TargetName="PART_HeaderMenu"
                        Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MenuInfo.HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_HeaderMenu"
                        Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TabControlDefaultTemplate.ContentHost" TargetType="{x:Type dx:DXTabControl}">
        <dxcn:TabLayoutPanel KeyboardNavigation.TabNavigation="Local"
                             UseLayoutRounding="True"
                             ViewInfo="{TemplateBinding ViewInfo}">
            <dxcn:TabLayoutPanel.LayoutDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </dxcn:TabLayoutPanel.LayoutDefinitions>
            <dxcn:TabOrientablePanel x:Name="PART_HeaderContainer"
                                     dxcn:TabLayoutPanel.LayoutPosition="0"
                                     Indent="{TemplateBinding PanelIndent}"
                                     Panel.ZIndex="1"
                                     ViewInfo="{TemplateBinding ViewInfo}">
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvmi:EventToCommand Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            CommandParameter="False"
                                            EventName="SizeChanged"/>
                </dxmvvmi:Interaction.Behaviors>
                <dxcn:TabOrientablePanel.HorizontalLayout>
                    <dxcn:OrientableLayout>
                        <dxcn:OrientableLayout.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </dxcn:OrientableLayout.ColumnDefinitions>
                    </dxcn:OrientableLayout>
                </dxcn:TabOrientablePanel.HorizontalLayout>
                <dxcn:TabOrientablePanel.VerticalLayout>
                    <dxcn:OrientableLayout>
                        <dxcn:OrientableLayout.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </dxcn:OrientableLayout.RowDefinitions>
                    </dxcn:OrientableLayout>
                </dxcn:TabOrientablePanel.VerticalLayout>
                <ContentPresenter x:Name="PART_ControlBoxLeft"
                                  Content="{TemplateBinding ControlBoxLeft}"
                                  dxcn:TabOrientablePanel.HColumn="0"
                                  dxcn:TabOrientablePanel.VRow="7"/>
                <dxcn:TabPanelContainer x:Name="PART_TabPanelContainer"
                                        ClipToBounds="True"
                                        dxcn:TabOrientablePanel.HColumn="1"
                                        dxcn:TabOrientablePanel.VRow="6"
                                        Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}}"
                                        ViewInfo="{TemplateBinding ViewInfo}">
                    <dxmvvmi:Interaction.Behaviors>
                        <!--<dxmvvm:EventToCommand EventName="SizeChanged" Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="False"/>-->
                        <dxmvvmi:EventToCommand Command="{Binding View.ScrollView.UpdateScrollButtonsCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="LayoutUpdated"/>
                        <dxmvvmi:EventToCommand Command="{Binding View.ScrollView.ScrollOnMouseWheelCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                EventName="MouseWheel"
                                                PassEventArgsToCommand="True"/>
                    </dxmvvmi:Interaction.Behaviors>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabIndex="1"
                                    KeyboardNavigation.TabNavigation="Once"
                                    Tag="{TemplateBinding View}"/>
                    <dxcn:TabPanelContainer.ControlBox>
                        <StackPanel Orientation="{Binding Path=ViewInfo.Orientation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Button x:Name="PART_PanelNewButton"
                                    Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    dxcn:GlyphControl.GlyphControlMode="Plus"
                                    Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}}"
                                    Visibility="{Binding View.PanelNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="PART_ControlBoxPanel" Content="{TemplateBinding ControlBoxPanel}"/>
                        </StackPanel>
                    </dxcn:TabPanelContainer.ControlBox>
                </dxcn:TabPanelContainer>
                <ContentPresenter x:Name="PART_ControlBoxRight"
                                  Content="{TemplateBinding ControlBoxRight}"
                                  dxcn:TabOrientablePanel.HColumn="2"
                                  dxcn:TabOrientablePanel.VRow="5"/>
                <RepeatButton x:Name="PART_PrevButton"
                              Command="{Binding View.ScrollView.ScrollPrevCommand, RelativeSource={RelativeSource TemplatedParent}}"
                              dxcn:GlyphControl.GlyphControlMode="Left"
                              dxcn:TabOrientablePanel.HColumn="3"
                              dxcn:TabOrientablePanel.VRow="3"
                              Interval="{StaticResource ScrollButtonInterval}"
                              Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}}"
                              Visibility="{Binding View.ScrollView.IsScrollPrevButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <RepeatButton x:Name="PART_NextButton"
                              Command="{Binding View.ScrollView.ScrollNextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                              dxcn:GlyphControl.GlyphControlMode="Right"
                              dxcn:TabOrientablePanel.HColumn="4"
                              dxcn:TabOrientablePanel.VRow="4"
                              Interval="{StaticResource ScrollButtonInterval}"
                              Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}}"
                              Visibility="{Binding View.ScrollView.IsScrollNextButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <Grid dxcn:TabOrientablePanel.HColumn="5"
                      dxcn:TabOrientablePanel.VRow="2"
                      Visibility="{Binding View.ShowHeaderMenu, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <ToggleButton x:Name="PART_HeaderMenu"
                                  dxcn:GlyphControl.GlyphControlMode="Down"
                                  IsChecked="{Binding MenuInfo.IsMenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  IsHitTestVisible="{Binding IsOpen, ElementName=PART_HeaderMenuPopup, Converter={dxmvvm:BooleanNegationConverter}}"
                                  Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}}"/>
                    <dxb:PopupMenu x:Name="PART_HeaderMenuPopup"
                                   IsOpen="{Binding Path=IsChecked, ElementName=PART_HeaderMenu}"
                                   Placement="Right"
                                   PlacementTarget="{Binding ElementName=PART_HeaderMenu}">
                        <dxb:BarLinkContainerItem x:Name="PART_HeaderMenuPopupItemsContainer"
                                                  IsPrivate="True"
                                                  ItemLinksSource="{Binding MenuInfo.Items, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ItemTemplateSelector="{StaticResource headerMenuSelector}"/>
                    </dxb:PopupMenu>
                </Grid>
                <Button x:Name="PART_CloseButton"
                        Command="{Binding View.CloseTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        dxcn:GlyphControl.GlyphControlMode="Close"
                        dxcn:TabOrientablePanel.HColumn="6"
                        dxcn:TabOrientablePanel.VRow="1"
                        Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}}"
                        Visibility="{Binding View.HideButtonShowMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HideButtonShowModeToVisibilityConverter}}"/>
                <Button x:Name="PART_MainNewButton"
                        Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        dxcn:GlyphControl.GlyphControlMode="Plus"
                        dxcn:TabOrientablePanel.HColumn="7"
                        dxcn:TabOrientablePanel.VRow="0"
                        Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}}"
                        Visibility="{Binding View.MainNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
            </dxcn:TabOrientablePanel>
            <Grid Name="PART_ContentContainer" dxcn:TabLayoutPanel.LayoutPosition="1">
                <ContentPresenter Content="{TemplateBinding ViewInfo}" ContentTemplate="{TemplateBinding BackgroundTemplate}"/>
                <Border Padding="1">
                    <Grid Name="PART_ContentHost"
                          Grid.Row="1"
                          Margin="{TemplateBinding Padding}"
                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="PART_ContentHeader"
                                          Content="{TemplateBinding ContentHeader}"
                                          Grid.Row="0"/>
                        <ContentPresenter x:Name="PART_ContentFooter"
                                          Content="{TemplateBinding ContentFooter}"
                                          Grid.Row="2"/>
                        <dxcn:ContentHostPresenter x:Name="PART_ContentHostPresenter"
                                                   Content="{TemplateBinding ContentHost}"
                                                   ContentCacheMode="{TemplateBinding TabContentCacheMode}"
                                                   Grid.Row="1">
                            <dxcn:ContentHostPresenter.RegularContentPresenter>
                                <dxcn:TabControlContentPresenter x:Name="PART_SelectedContentHost"
                                                                 ActualHorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                 ActualVerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                 Content="{TemplateBinding SelectedItemContent}"
                                                                 ContentStringFormat="{TemplateBinding SelectedItemContentStringFormat}"
                                                                 ContentTemplate="{TemplateBinding SelectedItemContentTemplate}"
                                                                 ContentTemplateSelector="{TemplateBinding SelectedItemContentTemplateSelector}"
                                                                 dxb:BarNameScope.IsScopeOwner="True"
                                                                 KeyboardNavigation.DirectionalNavigation="Contained"
                                                                 KeyboardNavigation.TabIndex="2"
                                                                 KeyboardNavigation.TabNavigation="Local"
                                                                 TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </dxcn:ContentHostPresenter.RegularContentPresenter>
                            <dxcn:ContentHostPresenter.FastContentPresenter>
                                <dxcn:FastRenderPanel x:Name="PART_FastRenderPanel"
                                                      ContentCacheMode="{TemplateBinding TabContentCacheMode}"
                                                      dxb:BarNameScope.IsScopeOwner="True"
                                                      KeyboardNavigation.DirectionalNavigation="Contained"
                                                      KeyboardNavigation.TabIndex="2"
                                                      KeyboardNavigation.TabNavigation="Local"
                                                      TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </dxcn:ContentHostPresenter.FastContentPresenter>
                        </dxcn:ContentHostPresenter>
                    </Grid>
                </Border>
            </Grid>
        </dxcn:TabLayoutPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.HeaderLocation, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter Property="Height"
                        TargetName="PART_HeaderContainer"
                        Value="0"/>
                <Setter Property="Width"
                        TargetName="PART_HeaderContainer"
                        Value="0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ViewInfo.Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                <Setter Property="dxcn:GlyphControl.GlyphControlMode"
                        TargetName="PART_PrevButton"
                        Value="Up"/>
                <Setter Property="dxcn:GlyphControl.GlyphControlMode"
                        TargetName="PART_NextButton"
                        Value="Down"/>
                <Setter Property="dxcn:GlyphControl.GlyphControlMode"
                        TargetName="PART_HeaderMenu"
                        Value="Right"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MenuInfo.HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_HeaderMenu"
                        Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TabItemDefaultTemplate" TargetType="{x:Type dx:DXTabItem}">
        <Grid ToolTip="{TemplateBinding ToolTip}" UseLayoutRounding="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.0"
                                             Storyboard.TargetName="focused"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="{StaticResource MouseOverAnimationDuration}"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="{StaticResource MouseOverAnimationDuration}"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.0"
                                             Storyboard.TargetName="container"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0"
                                             Storyboard.TargetName="selected"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="normal"
                              Content="{TemplateBinding ViewInfo}"
                              ContentTemplate="{TemplateBinding NormalBackgroundTemplate}"/>
            <ContentPresenter x:Name="hover"
                              Content="{TemplateBinding ViewInfo}"
                              ContentTemplate="{TemplateBinding HoverBackgroundTemplate}"
                              Opacity="0"/>
            <ContentPresenter x:Name="selected"
                              Content="{TemplateBinding ViewInfo}"
                              ContentTemplate="{TemplateBinding SelectedBackgroundTemplate}"
                              Opacity="0"/>
            <ContentPresenter x:Name="focused"
                              Content="{TemplateBinding ViewInfo}"
                              ContentTemplate="{TemplateBinding FocusedBackgroundTemplate}"
                              Opacity="0"/>
            <dxcn:HeaderContainerPresenter x:Name="container"
                                           ChildMinHeight="{Binding Path=(dxcn:TabPanelBase.ChildMinHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                           ViewInfo="{TemplateBinding ViewInfo}">
                <Grid UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <dxcn:TabHeaderSmartPresenter x:Name="content"
                                                  IsSelected="{TemplateBinding IsSelected}"
                                                  Margin="{TemplateBinding Padding}">
                        <dxcn:TabHeaderSmartPresenter.IconBox>
                            <Grid>
                                <ContentPresenter x:Name="oldIcon"
                                                  Content="{TemplateBinding Icon}"
                                                  Focusable="False"
                                                  Height="{TemplateBinding IconHeight}"
                                                  Margin="0,0,4,0"
                                                  VerticalAlignment="Center"
                                                  Width="{TemplateBinding IconWidth}"/>
                                <ContentPresenter x:Name="icon"
                                                  Content="{TemplateBinding Glyph}"
                                                  ContentTemplate="{TemplateBinding GlyphTemplate}"
                                                  Focusable="False"
                                                  VerticalAlignment="Center"/>
                            </Grid>
                        </dxcn:TabHeaderSmartPresenter.IconBox>
                        <dxcn:TabHeaderSmartPresenter.ContentBox>
                            <dxcn:TrimContentPresenter ContentSource="Header"
                                                       DisableToolTipWhenFullyVisible="{Binding ShowToolTipForNonTrimmedHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}}"
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       RecognizesAccessKey="True"
                                                       ToolTipOwner="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                       VerticalAlignment="Center"/>
                        </dxcn:TabHeaderSmartPresenter.ContentBox>
                        <dxcn:TabHeaderSmartPresenter.ControlBox>
                            <Button x:Name="PART_CloseButton"
                                    Command="{TemplateBinding ActualCloseCommand}"
                                    Style="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}}"
                                    VerticalAlignment="Center"
                                    Visibility="{TemplateBinding ActualHideButtonVisibility}"/>
                        </dxcn:TabHeaderSmartPresenter.ControlBox>
                    </dxcn:TabHeaderSmartPresenter>
                    <ContentPresenter ContentSource="{x:Null}"
                                      Grid.Column="1"
                                      Style="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=SeparatorStyle}}"/>
                </Grid>
            </dxcn:HeaderContainerPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="oldIcon"
                        Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="TabItemDefaultGlyphTemplate">
        <Image x:Name="icon"
               Margin="0,0,4,0"
               Source="{Binding}"
               Stretch="None"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="icon"
                        Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="TabControlDefaultStyle" TargetType="{x:Type dx:DXTabControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template" Value="{StaticResource TabControlDefaultTemplate}"/>
        <Setter Property="BackgroundTemplate" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=Background}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="dxcn:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="ItemsPanel" Value="{Binding View, RelativeSource={RelativeSource Self}, Converter={StaticResource TabPanelSelector}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ContentHostTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="Template" Value="{StaticResource TabControlDefaultTemplate.ContentHost}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemDefaultStyle" TargetType="{x:Type dx:DXTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource TabItemDefaultTemplate}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="GlyphTemplate" Value="{StaticResource TabItemDefaultGlyphTemplate}"/>
        <Setter Property="NormalBackgroundTemplate" Value="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=NormalBackground}}"/>
        <Setter Property="HoverBackgroundTemplate" Value="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=HoverBackground}}"/>
        <Setter Property="SelectedBackgroundTemplate" Value="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=SelectedBackground}}"/>
        <Setter Property="FocusedBackgroundTemplate" Value="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=FocusedBackground}}"/>
    </Style>

</ResourceDictionary>