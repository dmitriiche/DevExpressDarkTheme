<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler"
                    xmlns:dxschd="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal"
                    xmlns:dxschdui="http://schemas.devexpress.com/winfx/2008/xaml/scheduler"
                    xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="SchedulerViewBase" TargetType="{x:Type dxsch:SchedulerViewBase}">
        <!--<Setter Property="Template" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=ViewTemplate}}"/>-->
        <Setter Property="NavigationButtonPrevStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonPrevStyle}}"/>
        <Setter Property="NavigationButtonNextStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonNextStyle}}"/>
        <Setter Property="HorizontalResourceHeaderStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=HorizontalResourceHeaderStyle}}"/>
        <Setter Property="VerticalResourceHeaderStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=VerticalResourceHeaderStyle}}"/>
        <Setter Property="SelectionTemplate" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=SelectionTemplate}}"/>
        <Setter Property="AppointmentToolTipContentTemplate" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=AppointmentToolTipContentTemplate}}"/>
        <Setter Property="DragDropHoverTimeCellsStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=DragDropHoverTimeCellsStyle}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.DayView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:DayView}">
        <!--<Setter Property="Template" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=ViewTemplate}}"/>-->
        <Setter Property="VerticalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=VerticalAppointmentStyle}}"/>
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonUpStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonUpStyle}}"/>
        <Setter Property="MoreButtonDownStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="CurrentTimeIndicatorStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=CurrentTimeIndicatorStyle}}"/>
        <Setter Property="CellStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=CellStyle}}"/>
        <Setter Property="AllDayAreaCellStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=AllDayAreaCellStyle}}"/>
        <Setter Property="DateHeaderStyle" Value="{DynamicResource  {dxscht:DayViewThemeKey ResourceKey=DateHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=ContentStyleSelector}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.WorkWeekView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:WorkWeekView}">
        <Setter Property="VerticalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=VerticalAppointmentStyle}}"/>
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonUpStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonUpStyle}}"/>
        <Setter Property="MoreButtonDownStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="CurrentTimeIndicatorStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=CurrentTimeIndicatorStyle}}"/>
        <Setter Property="CellStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=CellStyle}}"/>
        <Setter Property="AllDayAreaCellStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=AllDayAreaCellStyle}}"/>
        <Setter Property="DateHeaderStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=DateHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:WorkWeekViewThemeKey ResourceKey=ContentStyleSelector}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.FullWeekView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:FullWeekView}">
        <Setter Property="VerticalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=VerticalAppointmentStyle}}"/>
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonUpStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonUpStyle}}"/>
        <Setter Property="MoreButtonDownStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="CurrentTimeIndicatorStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=CurrentTimeIndicatorStyle}}"/>
        <Setter Property="CellStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=CellStyle}}"/>
        <Setter Property="AllDayAreaCellStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=AllDayAreaCellStyle}}"/>
        <Setter Property="DateHeaderStyle" Value="{DynamicResource {dxscht:DayViewThemeKey ResourceKey=DateHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:FullWeekViewThemeKey ResourceKey=ContentStyleSelector}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.WeekView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:WeekView}">
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="HorizontalWeekCellStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=HorizontalWeekCellStyle}}"/>
        <Setter Property="VerticalWeekCellStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=VerticalWeekCellStyle}}"/>
        <Setter Property="HorizontalWeekDateHeaderStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=HorizontalWeekDateHeaderStyle}}"/>
        <Setter Property="VerticalWeekDateHeaderStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=VerticalWeekDateHeaderStyle}}"/>
        <Setter Property="DayOfWeekHeaderStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=DayOfWeekHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=ContentStyleSelector}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.MonthView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:MonthView}">
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="HorizontalWeekCellStyle" Value="{DynamicResource {dxscht:MonthViewThemeKey ResourceKey=HorizontalWeekCellStyle}}"/>
        <Setter Property="HorizontalWeekDateHeaderStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=HorizontalWeekDateHeaderStyle}}"/>
        <Setter Property="DayOfWeekHeaderStyle" Value="{DynamicResource {dxscht:WeekViewThemeKey ResourceKey=DayOfWeekHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:MonthViewThemeKey ResourceKey=ContentStyleSelector}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.TimelineView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:TimelineView}">
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="CellStyle" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=CellStyle}}"/>
        <Setter Property="SelectionBarCellStyle" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=TimelineViewSelectionBarCellStyle}}"/>
        <Setter Property="DateHeaderStyle" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=DateHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=ContentStyleSelector}}"/>
        <!--<Setter Property="SelectionBar">
            <Setter.Value>
                <dxsch:SchedulerSelectionBarOptions Visible="true"/>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.GanttView}"
           BasedOn="{StaticResource SchedulerViewBase}"
           TargetType="{x:Type dxsch:GanttView}">
        <Setter Property="HorizontalAppointmentStyleSelector" Value="{DynamicResource ResourceKey={dxscht:StyleSelectorThemeKey ResourceKey=HorizontalAppointmentStyle}}"/>
        <Setter Property="MoreButtonStyle" Value="{DynamicResource {dxscht:SchedulerViewThemeKey ResourceKey=MoreButtonDownStyle}}"/>
        <Setter Property="CellStyle" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=CellStyle}}"/>
        <Setter Property="SelectionBarCellStyle" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=TimelineViewSelectionBarCellStyle}}"/>
        <Setter Property="DateHeaderStyle" Value="{DynamicResource {dxscht:TimelineViewThemeKey ResourceKey=DateHeaderStyle}}"/>
        <Setter Property="ContentStyleSelector" Value="{DynamicResource {dxscht:GanttViewThemeKey ResourceKey=ContentStyleSelector}}"/>
    </Style>

    <Style x:Key="{dxscht:SchedulerControlThemeKey ResourceKey=DialogWindowStyle}" TargetType="dx:DXWindow">
        <!--BEGIN WPF-->
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="ShowIcon" Value="False"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentFormStyle}" TargetType="dx:DXWindow">
        <Setter Property="Width" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentFormWidth}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentFormHeight}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentFormWidth}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentFormHeight}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="true">
                <Setter Property="Width" Value="800"/>
                <Setter Property="Height" Value="600"/>
                <Setter Property="MinWidth" Value="800"/>
                <Setter Property="MinHeight" Value="600"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentRecurrenceFormStyle}" TargetType="dx:DXWindow">
        <!--<Setter Property="SizeToContent" Value="WidthAndHeight"/>-->
        <Setter Property="Width" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultRecurrentAppointmentFormWidth}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultRecurrentAppointmentFormHeight}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultRecurrentAppointmentFormWidth}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultRecurrentAppointmentFormHeight}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="true">
                <Setter Property="Width" Value="687"/>
                <Setter Property="Height" Value="596"/>
                <Setter Property="MinWidth" Value="687"/>
                <Setter Property="MinHeight" Value="596"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--BEGIN WPF-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.SchedulerControl}"
           x:Shared="True"
           TargetType="{x:Type dxsch:SchedulerControl}">
        <!--END WPF-->
        <!--ONLY SL        
    <Style TargetType="{x:Type dxsch:SchedulerControl}">        
 ONLY SL-->
        <Setter Property="Template" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=Template}}"/>
        <Setter Property="ResourceNavigatorHorizontalStyle" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=ResourceNavigatorHorizontalStyle}}"/>
        <Setter Property="ResourceNavigatorVerticalStyle" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=ResourceNavigatorVerticalStyle}}"/>
        <Setter Property="AppointmentFormServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:WindowedDocumentUIService WindowStartupLocation="CenterOwner"
                                                      WindowStyle="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentFormStyle}}"
                                                      WindowType="{x:Type dxr:DXRibbonWindow}">
                            <dx:WindowedDocumentUIService.ViewTemplate>
                                <DataTemplate>
                                    <dxschdui:AppointmentRibbonForm/>
                                </DataTemplate>
                            </dx:WindowedDocumentUIService.ViewTemplate>
                        </dx:WindowedDocumentUIService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AppointmentRecurrenceDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{DynamicResource {dxscht:SchedulerFormThemeKey ResourceKey=DefaultAppointmentRecurrenceFormStyle}}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxschdui:EditRecurrenceControl/>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ManageRecurrentAppointmentDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=DialogWindowStyle}}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxschdui:ManageRecurrentAppointmentControl/>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GotoDateDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=DialogWindowStyle}}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxschdui:GotoDateControl/>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RemindersFormServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:WindowedDocumentUIService WindowStartupLocation="CenterOwner" WindowStyle="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=DialogWindowStyle}}">
                            <dx:WindowedDocumentUIService.ViewTemplate>
                                <DataTemplate>
                                    <dxschdui:RemindersControl/>
                                </DataTemplate>
                            </dx:WindowedDocumentUIService.ViewTemplate>
                        </dx:WindowedDocumentUIService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TimeRulerDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=DialogWindowStyle}}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxschdui:EditTimeRulerControl/>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="InplaceEditTemplate" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=InplaceEditTemplate}}"/>
        <!--BEGIN WPF-->
        <Setter Property="Padding" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=Padding}}"/>
        <!--END WPF-->
        <Setter Property="DefaultResourceColorSchemas" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=ResourceColorSchemaTemplate}}"/>
        <Setter Property="AllowDrop" Value="True"/>
    </Style>

    <!--BEGIN WPF-->

    <!--END WPF-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.MultiColorBorder}" TargetType="{x:Type dxschd:MultiColorBorder}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:MultiColorBorder}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding LeftBorderBrush}"
                                BorderThickness="{TemplateBinding LeftBorderThickness}"/>
                        <Border BorderBrush="{TemplateBinding TopBorderBrush}" BorderThickness="{TemplateBinding TopBorderThickness}"/>
                        <Border BorderBrush="{TemplateBinding RightBorderBrush}" BorderThickness="{TemplateBinding RightBorderThickness}"/>
                        <Border BorderBrush="{TemplateBinding BottomBorderBrush}" BorderThickness="{TemplateBinding BottomBorderThickness}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.SchedulerBorder}" TargetType="{x:Type dxschd:SchedulerBorder}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:SchedulerBorder}">
                    <Border x:Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.RoundedBorderControl}" TargetType="{x:Type dxschd:RoundedBorderControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:RoundedBorderControl}">
                    <Grid HorizontalAlignment="Stretch"
                          SnapsToDevicePixels="True"
                          UseLayoutRounding="True"
                          VerticalAlignment="Stretch">
                        <dxschd:RoundedBorder x:Name="Border"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding RoundBorderThickness}"
                                              CornerRadius="{TemplateBinding CornerRadius}"
                                              HorizontalAlignment="Stretch"
                                              Panel.ZIndex="2"
                                              SnapsToDevicePixels="True"
                                              UseLayoutRounding="True"
                                              VerticalAlignment="Stretch"/>
                        <ContentPresenter Clip="{Binding BackgroundGeometryCache, ElementName=Border}"
                                          Panel.ZIndex="1"
                                          SnapsToDevicePixels="True"
                                          UseLayoutRounding="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.StatusBrushVisualizer}"
           BasedOn="{StaticResource {x:Type ItemsControl}}"
           TargetType="dxschd:StatusBrushVisualizer">
        <Setter Property="ItemsSource" Value="{Binding AppointmentStorage.Statuses}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{Binding Brush}" Height="5"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>