<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys"
                    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/charts"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <local:BrushOverlayConverter x:Key="brushOverlayConverter"/>

    <local:PointCollectionToGeometryConverter x:Key="pointsToGeometryConverter"/>

    <local:BrushOverlayMultiConverter x:Key="specialBrushOverlayConverter"/>

    <SolidColorBrush x:Key="{dxt:ChartBrushesThemeKey ResourceKey=SeriesLabelForeground}" Color="#FFFFFFFF"/>

    <Style x:Key="seriesLabelConnectorPathStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="{Binding Path=ConnectorItem.Points, Converter={StaticResource pointsToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Opacity" Value="{Binding Path=LabelItem.Opacity, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="StrokeThickness" Value="{Binding Path=Label.ConnectorThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SeriesLabelConnectorPresentation}" TargetType="{x:Type local:SeriesLabelConnectorPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SeriesLabelConnectorPresentation}">
                    <Path Stroke="{Binding Path=LabelItem.Color, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource seriesLabelConnectorPathStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="baseSeriesLabelStyle" TargetType="{x:Type local:SeriesLabelPresentationBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SeriesLabelPresentationBase}">
                    <Grid LayoutTransform="{Binding Path=Label.LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
                          MaxHeight="{Binding Path=Label.MaxHeight, RelativeSource={RelativeSource TemplatedParent}}"
                          MaxWidth="{Binding Path=Label.MaxWidth, RelativeSource={RelativeSource TemplatedParent}}"
                          MinHeight="{Binding Path=Label.MinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                          MinWidth="{Binding Path=Label.MinWidth, RelativeSource={RelativeSource TemplatedParent}}">
                        <Border Background="{Binding Path=Label.Background, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding Path=Label.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                                Opacity="{Binding Path=LabelItem.Opacity, RelativeSource={RelativeSource TemplatedParent}}"
                                Padding="{Binding Path=Label.Padding, RelativeSource={RelativeSource TemplatedParent}}">
                            <local:ChartContentPresenter Content="{Binding Path=LabelItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                         ContentTemplate="{Binding Path=Label.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                         TextElement.FontFamily="{Binding Path=Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                                         TextElement.FontSize="{Binding Path=Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                                         TextElement.FontStretch="{Binding Path=Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                                                         TextElement.FontStyle="{Binding Path=Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                         TextElement.FontWeight="{Binding Path=Label.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                         TextElement.Foreground="{Binding Path=Label.Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SeriesLabelPresentation}"
           BasedOn="{StaticResource baseSeriesLabelStyle}"
           TargetType="{x:Type local:SeriesLabelPresentation}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StackedBarTotalLabelConnectorPresentation}" TargetType="{x:Type local:StackedBarTotalLabelConnectorPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StackedBarTotalLabelConnectorPresentation}">
                    <Path Stroke="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource seriesLabelConnectorPathStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StackedBarTotalLabelPresentation}"
           BasedOn="{StaticResource baseSeriesLabelStyle}"
           TargetType="{x:Type local:StackedBarTotalLabelPresentation}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SeriesLabel}" TargetType="{x:Type local:SeriesLabel}">
        <Setter Property="ElementTemplate" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=SeriesLabelTemplate}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=SeriesLabelForeground}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StackedBarTotalLabel}" TargetType="{x:Type local:StackedBarTotalLabel}">
        <Setter Property="Background" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendBackgroundBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendForeground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendBorderThickness}}"/>
        <Setter Property="ElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemMargin}}"
                               Text="{Binding Text}"
                               TextAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SeriesLabelForChartModel}" TargetType="{x:Type local:SeriesLabelForChartModel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1">
                        <Border.Background>
                            <MultiBinding Converter="{StaticResource specialBrushOverlayConverter}">
                                <Binding Path="Label.Background"/>
                                <Binding Path="Color"/>
                            </MultiBinding>
                        </Border.Background>
                        <TextBlock Text="{Binding Text}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>