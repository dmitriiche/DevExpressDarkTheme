<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:core="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys"
                    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/charts"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <core:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <local:IsEnabledToOpacityConverter x:Key="isEnabledToOpacityConverter"/>

    <local:HeightToVisibilityConverter x:Key="heightToVisibilityConverter"/>

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=IndentFromDiagramValue}">16</Thickness>

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendPaddingValue}">8</Thickness>

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendItemMargin}">6,2</Thickness>

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendItemTextMargin}">4,0,0,0</Thickness>

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendItemCrosshairTextMargin}">4,0,0,0</Thickness>

    <sys:Double x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendMarkerWidth}">12</sys:Double>

    <sys:Double x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendMarkerHeight}">12</sys:Double>

    <ControlTemplate x:Key="{dxt:ChartControlThemeKey ResourceKey=LegendCheckBoxTemplate}" TargetType="{x:Type CheckBox}">
        <Grid x:Name="CheckBox"
              Background="Transparent"
              Height="14"
              Width="14"
              cs:id="Grid_0000">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{Binding CheckBoxBrush}" BorderThickness="1"/>
            <Path x:Name="CheckBoxMarker"
                  Data="F1 M 135,156L 135,159L 139,163L 145,156L 145,153L 139,160L 135,156 Z"
                  Fill="{Binding CheckBoxBrush}"
                  FlowDirection="LeftToRight"
                  Margin="2"
                  Stretch="Fill"
                  UseLayoutRounding="False"
                  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource ResourceKey=boolToVisibilityConverter}}"/>
        </Grid>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type local:LegendItem}">
        <local:LegendItemContainer ClipToBounds="True" Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemMargin}}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                <local:LegendCheckBox AutomationProperties.Name="{DXBinding 'CheckBoxVisible ? Text + `LegendCheckbox` : ``'}"
                                      Focusable="False"
                                      IsChecked="{Binding RepresentedElement.CheckedInLegend, Mode=TwoWay}"
                                      IsEnabled="{Binding IsEnabled}"
                                      Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendCheckBoxTemplate}}"
                                      Visibility="{Binding CheckBoxVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                <Rectangle x:Name="markersIndentRectangle"
                           Fill="Transparent"
                           Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemTextMargin}}"
                           Visibility="{Binding ShowMarkersIndent, Converter={StaticResource boolToVisibilityConverter}}"
                           Width="0"
                           cs:id="Rectangle_0000"/>
                <Grid x:Name="markerGrid"
                      Height="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendMarkerHeight}}"
                      Opacity="{Binding Path=IsEnabled, Converter={StaticResource isEnabledToOpacityConverter}}"
                      Visibility="{Binding MarkerVisible, Converter={StaticResource boolToVisibilityConverter}}"
                      Width="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendMarkerWidth}}">
                    <Rectangle Fill="Transparent"
                               Stretch="Uniform"
                               cs:id="Rectangle_0001"/>
                    <local:ChartContentPresenter x:Name="markerPresenter"
                                                 Content="{Binding}"
                                                 ContentTemplate="{Binding Path=MarkerTemplate}"/>
                </Grid>
                <local:LegendCheckBox AutomationProperties.Name="{DXBinding 'ShowMarkerAfterCheckBox ? Text + `LegendCheckbox` : ``'}"
                                      Focusable="False"
                                      IsChecked="{Binding RepresentedElement.CheckedInLegend, Mode=TwoWay}"
                                      IsEnabled="{Binding IsEnabled}"
                                      Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemTextMargin}}"
                                      Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendCheckBoxTemplate}}"
                                      Visibility="{Binding ShowMarkerAfterCheckBox, Converter={StaticResource boolToVisibilityConverter}}"/>
                <Rectangle x:Name="textIndentRectangle"
                           Fill="Transparent"
                           Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemTextMargin}}"
                           Visibility="{Binding ShowTextIndent, Converter={StaticResource boolToVisibilityConverter}}"
                           Width="0"
                           cs:id="Rectangle_0002"/>
                <TextBlock x:Name="tbLegendItemText"
                           FontFamily="{Binding Path=FontFamily}"
                           FontSize="{Binding Path=FontSize}"
                           FontStretch="{Binding Path=FontStretch}"
                           FontStyle="{Binding Path=FontStyle}"
                           FontWeight="{Binding Path=FontWeight}"
                           Foreground="{Binding Path=Foreground}"
                           Opacity="{Binding Path=IsEnabled, Converter={StaticResource isEnabledToOpacityConverter}}"
                           Text="{Binding Path=Text, Mode=OneWay}"
                           VerticalAlignment="Center"/>
            </StackPanel>
            <TextBlock x:Name="tbLegendItemCrosshairText"
                       FontFamily="{Binding Path=CrosshairFontFamily}"
                       FontSize="{Binding Path=CrosshairFontSize}"
                       FontStretch="{Binding Path=CrosshairFontStretch}"
                       FontStyle="{Binding Path=CrosshairFontStyle}"
                       FontWeight="{Binding Path=CrosshairFontWeight}"
                       Foreground="{Binding Path=CrosshairForeground}"
                       Height="{Binding Path=CrosshairContentHeight}"
                       HorizontalAlignment="Right"
                       Margin="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendItemTextMargin}}"
                       Opacity="{Binding Path=IsEnabled, Converter={StaticResource isEnabledToOpacityConverter}}"
                       Text="{Binding Path=CrosshairText, Mode=OneWay}"
                       TextAlignment="Right"
                       TextTrimming="WordEllipsis"
                       VerticalAlignment="Center"
                       Visibility="{Binding Path=CrosshairTextVisible, Converter={StaticResource boolToVisibilityConverter}}"
                       Width="{Binding Path=CrosshairContentWidth}"/>
        </local:LegendItemContainer>
    </DataTemplate>

    <DataTemplate x:Key="verticalGradientLegendItemTemplate">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
            <Rectangle x:Name="gradientRect"
                       Fill="{Binding MarkerBrush}"
                       VerticalAlignment="Stretch"
                       Width="10"/>
            <ItemsControl ItemsSource="{Binding DataSource}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <local:GradientLegendItemPanel GradientControl="{Binding ElementName=gradientRect}" Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Fill="{Binding Brush}"
                                       Height="2"
                                       VerticalAlignment="Center"
                                       Width="10"/>
                            <TextBlock Margin="10, 0, 0, 0" Text="{Binding Text}"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="horizontalGradientLegendItemTemplate">
        <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
            <ItemsControl ItemsSource="{Binding DataSource}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <local:GradientLegendItemPanel GradientControl="{Binding ElementName=gradientRect}" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="0, 0, 0, 10" Text="{Binding Text}"/>
                            <Rectangle Fill="{Binding Brush}"
                                       Height="10"
                                       HorizontalAlignment="Center"
                                       Width="2"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Rectangle x:Name="gradientRect"
                       Fill="{Binding MarkerBrush}"
                       Height="10"
                       HorizontalAlignment="Stretch"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:GradientLegendItem}">
        <ContentControl Content="{Binding}">
            <ContentControl.Style>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentControl}" TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Legend.Orientation}" Value="Vertical">
                            <Setter Property="ContentTemplate" Value="{StaticResource verticalGradientLegendItemTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Legend.Orientation}" Value="Horizontal">
                            <Setter Property="ContentTemplate" Value="{StaticResource horizontalGradientLegendItemTemplate}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Legend}" TargetType="local:Legend">
        <Setter Property="Background" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendBackgroundBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendForeground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendBorderThickness}}"/>
        <Setter Property="Padding" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendPaddingValue}}"/>
        <Setter Property="IndentFromDiagram" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=IndentFromDiagramValue}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="{Binding Path=Orientation}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Legend">
                    <Grid>
                        <local:ChartContentControl x:Name="LegendWrapper"
                                                   Background="{TemplateBinding Background}"
                                                   BorderBrush="{TemplateBinding BorderBrush}"
                                                   BorderThickness="{TemplateBinding BorderThickness}"
                                                   DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                   Padding="{TemplateBinding Padding}"
                                                   Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=LegendWrapperTemplate}}"
                                                   Visibility="{Binding ElementName=legendItemsControl, Path=ActualHeight, Converter={StaticResource heightToVisibilityConverter}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <local:ChartContentPresenter Content="{TemplateBinding Title}"/>
                                <local:LegendItemsControl x:Name="legendItemsControl"
                                                          DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                          Grid.Row="1"
                                                          ItemsPanel="{TemplateBinding ItemsPanel}"
                                                          ItemTemplate="{TemplateBinding ItemTemplate}"
                                                          LegendItems="{TemplateBinding Items}"
                                                          ReverseItems="{TemplateBinding ReverseItems}"/>
                                <TextBlock x:Name="tbEmptyLegendContent"
                                           Grid.Row="1"
                                           Text="Empty Legend"
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EmptyContentVisibility}"/>
                            </Grid>
                        </local:ChartContentControl>
                        <local:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.LegendItemPresentation}" TargetType="local:LegendItemPresentation">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LegendItemPresentation">
                    <Path x:Name="PART_MarkerPath"
                          Fill="{Binding Path=ActualMarkerBrush}"
                          Margin="{Binding Path=ActualMarkerMargin}"
                          OpacityMask="{Binding Path=OpacityMask}"
                          SnapsToDevicePixels="True"
                          Stretch="Uniform"
                          Stroke="{Binding Path=ActualMarkerLineBrush}"
                          StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
                          StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
                          StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
                          StrokeEndLineCap="Square"
                          StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
                          StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
                          StrokeStartLineCap="Square"
                          StrokeThickness="{Binding Path=ActualLineThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.CustomLegendItem}" TargetType="local:CustomLegendItem">
        <Setter Property="MarkerBrush"
                Value="Red"
                cs:id="Setter_0000"/>
        <Setter Property="MarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Fill="{Binding Path=ActualMarkerBrush}"
                               SnapsToDevicePixels="True"
                               Stretch="Uniform"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter
            Property="Foreground"
            Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=LegendForeground}}" />-->
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Legend}}, Path=Foreground}"/>
    </Style>

</ResourceDictionary>