<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxee="clr-namespace:DevExpress.Xpf.Editors;assembly=DevExpress.Xpf.Core.v20.2"
                    xmlns:dxreui="http://schemas.devexpress.com/winfx/2008/xaml/richedit"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{dxdst:ThemePartLoader Path=/DevExpress.Xpf.Core/Editors/Themes/Generic/Generic.xaml, PathCore=/Themes/Empty.xaml}" />
    </ResourceDictionary.MergedDictionaries>-->

    <!--END WPF-->

    <!--ONLY SL<ResourceDictionary x:Key="EditorsDictionary" Source="/DevExpress.Xpf.Core.v20.2;component/Themes/generic.xaml" dx:Wpf2SLOptions.AllowProcessNode ="False" />ONLY SL-->

    <!--RichEditFontSizeComboBoxEdit-->

    <!--BEGIN WPF-->

    <!--<Style TargetType="{x:Type dxreui:RichEditFontSizeComboBoxEdit" BasedOn="{StaticResource EditorsDictionary}">-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.RichEdit.UI.RichEditFontSizeComboBoxEdit}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ComboBoxEdit}}"
           TargetType="{x:Type dxreui:RichEditFontSizeComboBoxEdit}">
        <!--END WPF-->
        <!--ONLY SL<Style TargetType="{x:Type dxreui:RichEditFontSizeComboBoxEdit}" dx:ThemeManager.InheritedStyleSource="{StaticResource EditorsDictionary}">ONLY SL-->
        <Setter Property="ValidateOnTextInput" Value="False"/>
    </Style>

    <!--BEGIN WPF-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.RichEdit.UI.RichEditBorderLineWidthEdit}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ComboBoxEdit}}"
           TargetType="{x:Type dxreui:RichEditBorderLineWidthEdit}">
        <!--END WPF-->
        <!--ONLY SL<Style TargetType="{x:Type dxreui:RichEditBorderLineWidthEdit}" dx:ThemeManager.InheritedStyleSource="{StaticResource EditorsDictionary}">ONLY SL-->
        <Setter Property="ValidateOnTextInput" Value="False"/>
        <Setter Property="ApplyItemTemplateToSelectedItem" Value="True"/>
        <Setter Property="IsTextEditable" Value="False"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch"
                          Margin="5,0,5,0"
                          MinWidth="120">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0">
                            <TextBlock.Text>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding/>
                                        <Binding Path="RichEditControl" RelativeSource="{RelativeSource AncestorType={x:Type dxreui:RichEditBorderLineWidthEdit}}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxreui:BorderWidthDisplayTextConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Rectangle Fill="Black"
                                   Grid.Column="1"
                                   HorizontalAlignment="Right"
                                   Width="60"
                                   cs:id="Rectangle_0000">
                            <Rectangle.Height>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding/>
                                        <Binding Path="RichEditControl" RelativeSource="{RelativeSource AncestorType={x:Type dxreui:RichEditBorderLineWidthEdit}}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxreui:PointsToPixelsConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </Rectangle.Height>
                        </Rectangle>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.RichEdit.UI.RichEditBorderLineComboBoxEdit}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ComboBoxEdit}}"
           TargetType="{x:Type dxreui:RichEditBorderLineComboBoxEdit}">
        <!--<Setter Property="ValidateOnTextInput" Value="False" />-->
        <Setter Property="ApplyItemTemplateToSelectedItem" Value="True"/>
        <Setter Property="IsTextEditable" Value="False"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxreui:RichEditBorderLineComboBoxEditItem BorderInfo="{Binding}"
                                                               ClipToBounds="True"
                                                               Control="{Binding Path=RichEditControl,     RelativeSource={RelativeSource AncestorType={x:Type dxreui:RichEditBorderLineComboBoxEdit}}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>