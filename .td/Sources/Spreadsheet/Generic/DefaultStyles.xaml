<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxee="clr-namespace:DevExpress.Xpf.Editors;assembly=DevExpress.Xpf.Core.v20.2"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxr="clr-namespace:DevExpress.Xpf.Ribbon;assembly=DevExpress.Xpf.Ribbon.v20.2"
                    xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
                    xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal"
                    xmlns:dxspsui="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="{dx:DynamicThemeResource IndependentPart.xaml, ResourcePath=Themes, ResourcePathInTheme='Ribbon', TypeInTargetAssembly={x:Type dxr:RibbonControl}, UseGeneric=True}"/>
    </ResourceDictionary.MergedDictionaries>

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <dxspsi:GridLengthConverter x:Key="GridLengthConverter"/>

    <dxspsi:BoolToGridLengthConverter x:Key="BoolToGridLengthConverter"/>

    <dxspsi:InverseVisibilityConverter x:Key="InverseVisibilityConverter"/>

    <dxspsi:ColorToStringConverter x:Key="ColorToStringConverter"/>

    <dxspsui:SpreadsheetControlStringIdConverter x:Key="stringIdConverter"/>

    <dx:BoolInverseConverter x:Key="BoolInverseConverter"/>

    <dx:ColorToBrushConverter x:Key="ColorToBrushConverter"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=CommentIndicatorBrush}" Color="Red"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=NumberIndicatorBrush}" Color="Green"/>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=IndicatorWidth}">5</sys:Double>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=CommentLineBrush}" Color="Black"/>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=CommentLineWidth}">1</sys:Double>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=DataValidationCircleBrush}" Color="Red"/>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=DataValidationCircleWidth}">2</sys:Double>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageForeBrush}" Color="#FF5D5D5D"/>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageBorderWidth}">1</sys:Double>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageBorderBrush}" Color="#FF454849"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageBackgroudBrush}" Color="#FFFFE1"/>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=Template}" TargetType="{x:Type dxsps:SpreadsheetControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Control x:Name="PART_RibbonHost" Template="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=EmptyRibbonTemplate}}"/>
            <Control x:Name="PART_FormulaBar"
                     Grid.Row="1"
                     Template="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=EmptyFormulaBarTemplate}}"/>
            <Border x:Name="rootBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Grid.Row="2"
                    Opacity="{TemplateBinding Opacity}">
                <dxspsi:SpreadsheetViewControl x:Name="PART_View"
                                               Focusable="False"
                                               IsTabStop="False"
                                               ShowTabSelector="{TemplateBinding ShowTabSelector}"/>
            </Border>
            <Control x:Name="PART_StatusBar"
                     Grid.Row="3"
                     Template="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=EmptyStatusBarTemplate}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="CommandBarStyle" Value="Ribbon">
                <Setter Property="Template"
                        TargetName="PART_RibbonHost"
                        Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=RibbonTemplate}}"/>
            </Trigger>
            <Trigger Property="ShowFormulaBar" Value="True">
                <Setter Property="Template"
                        TargetName="PART_FormulaBar"
                        Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarTemplate}}"/>
            </Trigger>
            <Trigger Property="ShowStatusBar" Value="True">
                <Setter Property="Template"
                        TargetName="PART_StatusBar"
                        Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=StatusBarTemplate}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ViewControlTemplate}" TargetType="{x:Type dxspsi:SpreadsheetViewControl}">
        <Border Background="Transparent" cs:id="Border_0000">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <dxspsi:WorksheetControl x:Name="PART_WorkSheetControl"
                                         Focusable="False"
                                         Grid.Column="0"
                                         Grid.Row="0"
                                         LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter DefaultValue="1">
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                </dxspsi:WorksheetControl>
                <ScrollBar x:Name="PART_VerticalScrollBar"
                           Grid.Column="1"
                           Orientation="Vertical"
                           Visibility="{TemplateBinding ShowVerticalScrollbar, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <Border Grid.Column="0"
                        Grid.Row="1"
                        Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorPanelStyle}}"
                        Visibility="{TemplateBinding ShowTabSelector,                                                  Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter DefaultValue="1">
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                </Border>
                <Grid Grid.Column="0" Grid.Row="1">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter DefaultValue="1">
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <dxspsi:SpreadsheetTabSelector x:Name="PART_TabSelector"
                                                   AllowStretch="{TemplateBinding ShowHorizontalScrollbar,                                                                               Converter={StaticResource BoolInverseConverter}}"
                                                   Focusable="False"
                                                   Visibility="{TemplateBinding ShowTabSelector,                                                                             Converter={StaticResource BoolToVisibilityConverter}}"
                                                   VisibleWidth="{Binding ScrollBarPosition, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                    <Grid x:Name="PART_ScrollBarContainer" Visibility="{TemplateBinding ShowHorizontalScrollbar,                                                    Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding ShowTabSelector, Converter={StaticResource BoolToGridLengthConverter}, ConverterParameter=7*}"/>
                            <ColumnDefinition Width="{TemplateBinding ShowTabSelector, Converter={StaticResource BoolToGridLengthConverter}, ConverterParameter=12}"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <Thumb x:Name="PART_ResizeScrollBarThumb"
                               Grid.Column="1"
                               Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ResizeThumbStyle}}"
                               Visibility="{TemplateBinding ShowTabSelector,                                                         Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   dx:ScrollBarExtensions.ScrollBarMode="Standard"
                                   Grid.Column="2"
                                   Orientation="Horizontal"/>
                    </Grid>
                </Grid>
                <Border Grid.Column="1"
                        Grid.Row="1"
                        Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BottomRightCornerStyle}}">
                    <Border.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="ShowVerticalScrollbar" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxspsi:BottomRightCornerVisibilityConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Border.Visibility>
                </Border>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetTemplate}" TargetType="{x:Type dxspsi:WorksheetControl}">
        <Border>
            <Grid SnapsToDevicePixels="True" UseLayoutRounding="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding GroupWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}"/>
                    <ColumnDefinition Width="{Binding HeaderWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding GroupHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}"/>
                    <RowDefinition Height="{Binding HeaderHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GridLengthConverter}}"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="PART_HorizontalGroupBackgroundControl"
                        Background="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupControlBackgroundBrush}}"
                        Grid.ColumnSpan="3"/>
                <Border x:Name="PART_VerticalGroupBackgroundControl"
                        Background="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupControlBackgroundBrush}}"
                        Grid.Row="1"
                        Grid.RowSpan="2"/>
                <Border x:Name="PART_LeftWorksheetBorder"
                        BorderBrush="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=WorksheetBorderBrush}}"
                        BorderThickness="0,0,1,0"
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        Margin="0,-1,0,0"/>
                <Border x:Name="PART_TopWorksheetBorder"
                        BorderBrush="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=WorksheetBorderBrush}}"
                        BorderThickness="0,0,0,1"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"/>
                <dxspsi:WorksheetGroupControl Grid.ColumnSpan="3"
                                              Grid.RowSpan="3"
                                              Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupControlStyle}}"/>
                <dxspsi:WorksheetBackgroundControl Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <dxspsi:ChartsheetBackgroundControl Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <dxspsi:WorksheetLineControl Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <dxspsi:WorksheetIndicatorControl Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <Border Grid.ColumnSpan="3" Grid.RowSpan="3">
                    <dxspsi:WorksheetPanel x:Name="PART_WorksheetPanel"/>
                </Border>
                <dxspsi:WorksheetSparklinePanel Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <dxspsi:WorksheetDiagonalBorderControl Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <dxspsi:WorksheetSelectionControl Grid.ColumnSpan="3"
                                                  Grid.RowSpan="3"
                                                  Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=WorksheetSelectionControlStyle}}"/>
                <dxspsi:FormulaRangesControl Focusable="False"
                                             Grid.ColumnSpan="3"
                                             Grid.RowSpan="3"/>
                <dxspsi:FloatingObjectsContainer Focusable="False"
                                                 Grid.ColumnSpan="3"
                                                 Grid.RowSpan="3"
                                                 IsHitTestVisible="False"
                                                 LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}"/>
                <dxspsi:WorksheetShapeSelectionControl Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <Canvas Grid.ColumnSpan="3" Grid.RowSpan="3">
                    <Border Background="{Binding Path=Background, ElementName=PART_CellEditor}"
                            Canvas.Left="0"
                            Canvas.Top="0"
                            Visibility="{Binding Path=Visibility, ElementName=PART_CellEditor}">
                        <dxspsi:XpfCellInplaceEditor x:Name="PART_CellEditor"
                                                     dx:ThemeManager.ThemeName="None"
                                                     Padding="-3,0,-3,-1"/>
                    </Border>
                </Canvas>
                <Canvas Grid.ColumnSpan="3" Grid.RowSpan="3">
                    <dxspsi:XpfCustomCellInplaceEditor/>
                </Canvas>
                <dxspsi:WorksheetDataValidationPanel Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <Canvas Grid.ColumnSpan="3" Grid.RowSpan="3">
                    <dxspsi:XpfDataValidationInplaceEditor Height="0"
                                                           IsTextEditable="False"
                                                           ShowBorder="False">
                        <dxspsi:XpfDataValidationInplaceEditor.StyleSettings>
                            <dxe:ComboBoxStyleSettings/>
                        </dxspsi:XpfDataValidationInplaceEditor.StyleSettings>
                    </dxspsi:XpfDataValidationInplaceEditor>
                </Canvas>
                <dxspsi:WorksheetCommentPanel Grid.ColumnSpan="3" Grid.RowSpan="3"/>
                <Canvas Grid.ColumnSpan="3" Grid.RowSpan="3">
                    <!--<Border Canvas.Left="0" Canvas.Top="0" >-->
                    <dxspsi:XpfCommentInplaceEditor/>
                    <!--</Border>-->
                </Canvas>
                <dxspsi:WorksheetHeadersControl x:Name="PART_HorizontalHeadersControl"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="2"
                                                Grid.Row="1"
                                                Orientation="Horizontal"
                                                Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=HorizontalHeadersControlStyle}}"/>
                <dxspsi:WorksheetHeadersControl x:Name="PART_VerticalHeadersControl"
                                                Focusable="False"
                                                Grid.Column="1"
                                                Grid.Row="1"
                                                Grid.RowSpan="2"
                                                Orientation="Vertical"
                                                Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=VerticalHeadersControlStyle}}"/>
                <Border x:Name="PART_TopLeftCorner"
                        Grid.Column="1"
                        Grid.Row="1"
                        Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TopLeftCornerStyle}}"/>
                <dxspsi:VisualFeedbackControl Focusable="False"
                                              Grid.ColumnSpan="3"
                                              Grid.RowSpan="3"
                                              IsHitTestVisible="False"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=CellControlContentTemplate}" DataType="{x:Type dxsps:CellData}">
        <dxspsi:CellControl Clip="{Binding Clip}" TextSettings="{Binding TextSettings}"/>
    </DataTemplate>

    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ConditionalFormattingIconCellTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Margin="1,0,0,0"
                   Source="{Binding ConditionalFormattingSettings.Image}"
                   Stretch="None"/>
            <dxspsi:CellControl Clip="{Binding Clip}"
                                Grid.Column="1"
                                Panel.ZIndex="1"
                                TextSettings="{Binding TextSettings}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ConditionalFormattingDataBarCellTemplate}">
        <Grid>
            <Rectangle Fill="{Binding ConditionalFormattingSettings.DataBarFillBrush}"
                       Height="{Binding ConditionalFormattingSettings.DataBarBounds.Height}"
                       HorizontalAlignment="Left"
                       Margin="{Binding ConditionalFormattingSettings.DataBarMargin}"
                       Stroke="{Binding ConditionalFormattingSettings.DataBarBorderBrush}"
                       StrokeThickness="1"
                       Width="{Binding ConditionalFormattingSettings.DataBarBounds.Width}"/>
            <Line SnapsToDevicePixels="True"
                  Stroke="{Binding ConditionalFormattingSettings.AxisBrush}"
                  StrokeDashArray="3 1"
                  StrokeThickness="1"
                  X1="{Binding ConditionalFormattingSettings.AxisStart.X}"
                  X2="{Binding ConditionalFormattingSettings.AxisEnd.X}"
                  Y1="{Binding ConditionalFormattingSettings.AxisStart.Y}"
                  Y2="{Binding ConditionalFormattingSettings.AxisEnd.Y}"/>
            <dxspsi:CellControl Clip="{Binding Clip}"
                                Panel.ZIndex="1"
                                TextSettings="{Binding TextSettings}"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormatBorderControlTemplate}" TargetType="{x:Type dxspsi:FormatBorderControl}">
        <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlTop, Converter={StaticResource stringIdConverter}}"
                                  Grid.Row="0"
                                  Height="25"
                                  IsChecked="{Binding ShowTopBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0,0,8,0"
                                  Padding="0"
                                  TabIndex="7"
                                  VerticalAlignment="Top"
                                  Width="25">
                        <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderTop_16x16.png" Stretch="None"/>
                    </ToggleButton>
                    <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlHorizontal, Converter={StaticResource stringIdConverter}}"
                                  Grid.Row="1"
                                  Height="25"
                                  IsChecked="{Binding ShowHorizontalInsideBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  IsEnabled="{Binding EnableHorizontalBorderCheckState, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0,0,8,0"
                                  Padding="0"
                                  TabIndex="11"
                                  VerticalAlignment="Center"
                                  Width="25">
                        <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderInsideHorizontal_16x16.png" Stretch="None"/>
                    </ToggleButton>
                    <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlBottom, Converter={StaticResource stringIdConverter}}"
                                  Grid.Row="2"
                                  Height="25"
                                  IsChecked="{Binding ShowBottomBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0,0,8,0"
                                  Padding="0"
                                  TabIndex="8"
                                  VerticalAlignment="Bottom"
                                  Width="25">
                        <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderBottom_16x16.png" Stretch="None"/>
                    </ToggleButton>
                </Grid>
            </Grid>
            <dxspsi:FormatBorderPreviewControlContainer BorderBrush="LightGray"
                                                        BorderThickness="1"
                                                        Grid.Column="1"
                                                        Grid.Row="0"
                                                        cs:id="FormatBorderPreviewControlContainer_0000">
                <dxspsi:FormatBorderPreviewControl IsTabStop="False"/>
            </dxspsi:FormatBorderPreviewControlContainer>
            <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlDiagonalUp, Converter={StaticResource stringIdConverter}}"
                          Grid.Column="0"
                          Grid.Row="2"
                          Height="25"
                          HorizontalAlignment="Left"
                          IsChecked="{Binding ShowDiagonalUpBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          IsEnabled="{Binding EnableDiagonalBorderCheckState, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Margin="0,8,0,0"
                          Padding="0"
                          TabIndex="13"
                          Width="25">
                <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderDiagonalUp_16x16.png" Stretch="None"/>
            </ToggleButton>
            <Grid Grid.Column="1" Grid.Row="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlLeft, Converter={StaticResource stringIdConverter}}"
                                  Grid.Column="0"
                                  Height="25"
                                  HorizontalAlignment="Left"
                                  IsChecked="{Binding ShowLeftBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0,8,0,0"
                                  Padding="0"
                                  TabIndex="6"
                                  Width="25">
                        <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderLeft_16x16.png" Stretch="None"/>
                    </ToggleButton>
                    <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlVertical, Converter={StaticResource stringIdConverter}}"
                                  Grid.Column="1"
                                  Height="25"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding ShowVerticalInsideBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  IsEnabled="{Binding EnableVerticalBorderCheckState, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0,8,0,0"
                                  Padding="0"
                                  TabIndex="10"
                                  Width="25">
                        <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderInsideVertical_16x16.png" Stretch="None"/>
                    </ToggleButton>
                    <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlRight, Converter={StaticResource stringIdConverter}}"
                                  Grid.Column="2"
                                  Height="25"
                                  HorizontalAlignment="Right"
                                  IsChecked="{Binding ShowRightBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0,8,0,0"
                                  Padding="0"
                                  TabIndex="9"
                                  Width="25">
                        <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderRight_16x16.png" Stretch="None"/>
                    </ToggleButton>
                </Grid>
            </Grid>
            <ToggleButton AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_FormatBorderControlDiagonalDown, Converter={StaticResource stringIdConverter}}"
                          Grid.Column="2"
                          Grid.Row="2"
                          Height="25"
                          HorizontalAlignment="Right"
                          IsChecked="{Binding ShowDiagonalDownBorder, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          IsEnabled="{Binding EnableDiagonalBorderCheckState, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Margin="8,8,0,0"
                          Padding="0"
                          TabIndex="12"
                          Width="25">
                <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/BorderDiagonalDown_16x16.png" Stretch="None"/>
            </ToggleButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=PageMarginsPreviewControlTemplate}" TargetType="{x:Type dxspsi:PageMarginsPreviewControl}">
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Column="1"
                      Grid.Row="0"
                      Margin="35,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Left"
                               Margin="0,3,0,3"
                               Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginTop, Converter={StaticResource stringIdConverter}}"
                               VerticalAlignment="Center"/>
                    <dxspsi:SpreadsheetSpinEdit x:Name="edtTopMargin"
                                                AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginTop, Converter={StaticResource stringIdConverter}}"
                                                Grid.Row="1"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                HorizontalContentAlignment="Left"
                                                Increment="0.1"
                                                IsTextEditable="False"
                                                Margin="0,0,0,5"
                                                MinValue="0"
                                                Value="{Binding TopMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Width="60"/>
                </Grid>
                <Grid Grid.Column="2"
                      Grid.Row="0"
                      Margin="25,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Left"
                               Margin="0,3,0,3"
                               Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginHeader, Converter={StaticResource stringIdConverter}}"
                               VerticalAlignment="Center"/>
                    <dxspsi:SpreadsheetSpinEdit x:Name="edtHeaderMargin"
                                                AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginHeader, Converter={StaticResource stringIdConverter}}"
                                                Grid.Row="1"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                HorizontalContentAlignment="Left"
                                                Increment="0.1"
                                                IsTextEditable="False"
                                                Margin="0,0,0,5"
                                                MinValue="0"
                                                Value="{Binding HeaderMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Width="60"/>
                </Grid>
                <Grid Grid.Column="0"
                      Grid.Row="1"
                      Margin="0,0,25,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="1"
                                Grid.Row="0"
                                Margin="0,0,0,5"
                                Orientation="Vertical"
                                VerticalAlignment="Center">
                        <TextBlock HorizontalAlignment="Left"
                                   Margin="0,3,0,3"
                                   Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginLeft, Converter={StaticResource stringIdConverter}}"
                                   VerticalAlignment="Center"/>
                        <dxspsi:SpreadsheetSpinEdit x:Name="edtLeftMargin"
                                                    AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginLeft, Converter={StaticResource stringIdConverter}}"
                                                    Height="20"
                                                    HorizontalAlignment="Left"
                                                    HorizontalContentAlignment="Left"
                                                    Increment="0.1"
                                                    IsTextEditable="False"
                                                    MinValue="0"
                                                    Value="{Binding LeftMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    VerticalAlignment="Center"
                                                    Width="60"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="130"/>
                    </Grid.RowDefinitions>
                    <dxspsi:PageMarginsDrawingControlContainer x:Name="portraitOrientationContainer"
                                                               BorderBrush="LightGray"
                                                               BorderThickness="1"
                                                               Grid.Row="0"
                                                               Height="130"
                                                               Visibility="{Binding OrientationPortrait, Converter={StaticResource ResourceKey=BoolToVisibilityConverter}, ConverterParameter=HiddenOnFalse}"
                                                               Width="100"
                                                               cs:id="PageMarginsDrawingControlContainer_0000">
                        <dxspsi:PageMarginsDrawingControl/>
                    </dxspsi:PageMarginsDrawingControlContainer>
                    <dxspsi:PageMarginsDrawingControlContainer x:Name="landscapeOrientationContainer"
                                                               BorderBrush="LightGray"
                                                               BorderThickness="1"
                                                               Grid.Row="0"
                                                               Height="100"
                                                               Visibility="{Binding OrientationPortrait, Converter={StaticResource InverseVisibilityConverter}}"
                                                               Width="130"
                                                               cs:id="PageMarginsDrawingControlContainer_0001">
                        <dxspsi:PageMarginsDrawingControl/>
                    </dxspsi:PageMarginsDrawingControlContainer>
                </Grid>
                <Grid Grid.Column="2"
                      Grid.Row="1"
                      Margin="25,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0"
                                Margin="0,0,0,5"
                                Orientation="Vertical"
                                VerticalAlignment="Center">
                        <TextBlock HorizontalAlignment="Left"
                                   Margin="0,3,0,3"
                                   Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginRight, Converter={StaticResource stringIdConverter}}"
                                   VerticalAlignment="Center"/>
                        <dxspsi:SpreadsheetSpinEdit x:Name="edtRightMargin"
                                                    AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginRight, Converter={StaticResource stringIdConverter}}"
                                                    Height="20"
                                                    HorizontalAlignment="Left"
                                                    HorizontalContentAlignment="Left"
                                                    Increment="0.1"
                                                    IsTextEditable="False"
                                                    MinValue="0"
                                                    Value="{Binding RightMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    VerticalAlignment="Center"
                                                    Width="60"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1"
                      Grid.Row="2"
                      Margin="35,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Left"
                               Margin="0,3,0,3"
                               Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginBottom, Converter={StaticResource stringIdConverter}}"
                               VerticalAlignment="Center"/>
                    <dxspsi:SpreadsheetSpinEdit x:Name="edtBottomMargin"
                                                AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginBottom, Converter={StaticResource stringIdConverter}}"
                                                Grid.Row="1"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                HorizontalContentAlignment="Left"
                                                Increment="0.1"
                                                IsTextEditable="False"
                                                MinValue="0"
                                                Value="{Binding BottomMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Width="60"/>
                </Grid>
                <Grid Grid.Column="2"
                      Grid.Row="2"
                      Margin="25,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Left"
                               Margin="0,3,0,3"
                               Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginFooter, Converter={StaticResource stringIdConverter}}"
                               VerticalAlignment="Center"/>
                    <dxspsi:SpreadsheetSpinEdit x:Name="edtFooterMargin"
                                                AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginFooter, Converter={StaticResource stringIdConverter}}"
                                                Grid.Row="1"
                                                Height="20"
                                                HorizontalAlignment="Left"
                                                HorizontalContentAlignment="Left"
                                                Increment="0.1"
                                                IsTextEditable="False"
                                                MinValue="0"
                                                Value="{Binding FooterMargin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Width="60"/>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Left"
                           Margin="0,3,0,0"
                           Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginCenterOnPage, Converter={StaticResource stringIdConverter}}"
                           VerticalAlignment="Center"/>
                <Separator Grid.Column="1"
                           Margin="10,3,0,0"
                           VerticalAlignment="Center"/>
            </Grid>
            <StackPanel Grid.Row="2"
                        Margin="10,0,0,0"
                        Orientation="Vertical">
                <dxe:CheckEdit Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginHorizontally, Converter={StaticResource stringIdConverter}}"
                               EditValue="{Binding CenterHorizontally, Mode=TwoWay}"
                               IsEnabled="{Binding IsWorksheet}"/>
                <dxe:CheckEdit Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormMarginVertically, Converter={StaticResource stringIdConverter}}"
                               EditValue="{Binding CenterVertically, Mode=TwoWay}"
                               IsEnabled="{Binding IsWorksheet}"/>
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HeaderFooterEditControlTemplate}" TargetType="{x:Type dxspsi:HeaderFooterEditControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label>
                    <TextBlock Grid.Column="0"
                               Text="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterDescription, Converter={StaticResource stringIdConverter}}"
                               TextWrapping="Wrap"/>
                </Label>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterLeftHeader, Converter={StaticResource stringIdConverter}}"
                       Grid.Column="0"
                       HorizontalAlignment="Left"
                       Margin="0,3,0,3"
                       VerticalAlignment="Center"/>
                <Label Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterCenterHeader, Converter={StaticResource stringIdConverter}}"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       Margin="3,3,3,3"
                       VerticalAlignment="Center"/>
                <Label Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterRightHeader, Converter={StaticResource stringIdConverter}}"
                       Grid.Column="2"
                       HorizontalAlignment="Right"
                       Margin="0,3,0,3"
                       VerticalAlignment="Center"/>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <dxe:TextEdit x:Name="edtLeftHeader"
                              AcceptsReturn="True"
                              AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterLeftHeader, Converter={StaticResource stringIdConverter}}"
                              Grid.Column="0"
                              Margin="0,3,0,3"
                              Text="{Binding LeftHeader, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterEditControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              VerticalContentAlignment="Top"/>
                <dxe:TextEdit x:Name="edtCenterHeader"
                              AcceptsReturn="True"
                              AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterCenterHeader, Converter={StaticResource stringIdConverter}}"
                              Grid.Column="1"
                              HorizontalContentAlignment="Center"
                              Margin="3,3,3,3"
                              Text="{Binding CenterHeader, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterEditControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              VerticalContentAlignment="Top"/>
                <dxe:TextEdit x:Name="edtRightHeader"
                              AcceptsReturn="True"
                              AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterRightHeader, Converter={StaticResource stringIdConverter}}"
                              Grid.Column="2"
                              HorizontalContentAlignment="Right"
                              Margin="0,3,0,3"
                              Text="{Binding RightHeader, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterEditControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              VerticalContentAlignment="Top"/>
            </Grid>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="btnPage"
                        Grid.Column="0"
                        Height="25"
                        Margin="85,3,3,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertPageNumber, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/InsertPageNumber_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnPages"
                        Grid.Column="1"
                        Height="25"
                        Margin="3,3,3,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertNumberOfPages, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/InsertPageCount_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnDate"
                        Grid.Column="2"
                        Height="25"
                        Margin="30,3,3,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertDate, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/InsertDate_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnTime"
                        Grid.Column="3"
                        Height="25"
                        Margin="3,3,3,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertTime, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/FormatNumberTime_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnFilePath"
                        Grid.Column="4"
                        Height="25"
                        Margin="30,3,3,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertFilePath, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/InsertFilePath_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnFileName"
                        Grid.Column="5"
                        Height="25"
                        Margin="3,3,3,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertFileName, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/InsertFileName_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnSheetName"
                        Grid.Column="6"
                        Height="25"
                        Margin="3,3,0,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertSheetName, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/SingleSheet_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnInsertPicture"
                        Grid.Column="7"
                        Height="25"
                        Margin="30,3,0,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterInsertPicture, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/ImportImage_16x16.png" Stretch="None"/>
                </Button>
                <Button x:Name="btnFormatPicture"
                        Grid.Column="8"
                        Height="25"
                        Margin="3,3,0,3"
                        Padding="0"
                        ToolTip="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterFormatPicture, Converter={StaticResource stringIdConverter}}"
                        Width="30">
                    <Image Source="/DevExpress.Xpf.Spreadsheet.v20.2;component/Images/Image_16x16.png" Stretch="None"/>
                </Button>
            </Grid>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterLeftFooter, Converter={StaticResource stringIdConverter}}"
                       Grid.Column="0"
                       HorizontalAlignment="Left"
                       Margin="0,3,0,3"
                       VerticalAlignment="Center"/>
                <Label Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterCenterFooter, Converter={StaticResource stringIdConverter}}"
                       Grid.Column="1"
                       HorizontalAlignment="Center"
                       Margin="0,3,0,3"
                       VerticalAlignment="Center"/>
                <Label Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterRightFooter, Converter={StaticResource stringIdConverter}}"
                       Grid.Column="2"
                       HorizontalAlignment="Right"
                       Margin="0,3,0,3"
                       VerticalAlignment="Center"/>
            </Grid>
            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <dxe:TextEdit x:Name="edtLeftFooter"
                              AcceptsReturn="True"
                              AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterLeftFooter, Converter={StaticResource stringIdConverter}}"
                              Grid.Column="0"
                              Margin="0,3,3,0"
                              Text="{Binding LeftFooter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterEditControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              VerticalContentAlignment="Top"/>
                <dxe:TextEdit x:Name="edtCenterFooter"
                              AcceptsReturn="True"
                              AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterCenterFooter, Converter={StaticResource stringIdConverter}}"
                              Grid.Column="1"
                              HorizontalContentAlignment="Center"
                              Margin="3,3,3,0"
                              Text="{Binding CenterFooter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterEditControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              VerticalContentAlignment="Top"/>
                <dxe:TextEdit x:Name="edtRightFooter"
                              AcceptsReturn="True"
                              AutomationProperties.Name="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_HeaderFooterRightFooter, Converter={StaticResource stringIdConverter}}"
                              Grid.Column="2"
                              HorizontalContentAlignment="Right"
                              Margin="3,3,0,0"
                              Text="{Binding RightFooter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterEditControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              VerticalContentAlignment="Top"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HeaderFooterPreviewControlTemplate}" TargetType="{x:Type dxspsi:HeaderFooterPreviewControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <dxe:TextEdit AcceptsReturn="True"
                          Grid.Column="0"
                          IsReadOnly="True"
                          Margin="0,3,3,0"
                          Text="{Binding HeaderFooterLeftValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterPreviewControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          TextWrapping="Wrap"
                          VerticalContentAlignment="Top"/>
            <dxe:TextEdit AcceptsReturn="True"
                          Grid.Column="1"
                          HorizontalContentAlignment="Center"
                          IsReadOnly="True"
                          Margin="3,3,3,0"
                          Text="{Binding HeaderFooterCenterValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterPreviewControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          TextWrapping="Wrap"
                          VerticalContentAlignment="Top"/>
            <dxe:TextEdit AcceptsReturn="True"
                          Grid.Column="2"
                          HorizontalContentAlignment="Right"
                          IsReadOnly="True"
                          Margin="3,3,0,0"
                          Text="{Binding HeaderFooterRightValue, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxspsi:HeaderFooterPreviewControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          TextWrapping="Wrap"
                          VerticalContentAlignment="Top"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=PageSetupPrintButtonsControlTemplate}" TargetType="{x:Type dxspsi:PageSetupPrintButtonsControl}">
        <StackPanel Height="Auto"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    VerticalAlignment="Bottom">
            <Button x:Name="btnPrint"
                    Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormPagePrint, Converter={StaticResource stringIdConverter}}"
                    Margin="0,0,0,0"
                    MinWidth="60"/>
            <Button x:Name="btnPrintPreview"
                    Content="{Binding Source={StaticResource stringIdConverter}, ConverterParameter=Caption_PageSetupFormPagePrintPreview, Converter={StaticResource stringIdConverter}}"
                    Margin="10,0,0,0"
                    MinWidth="60"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupControlTemplate}" TargetType="{x:Type dxspsi:WorksheetGroupControl}">
        <dxspsi:GroupPanel LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}"/>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.FormatBorderControl}" TargetType="{x:Type dxspsi:FormatBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormatBorderControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.PageMarginsPreviewControl}" TargetType="{x:Type dxspsi:PageMarginsPreviewControl}">
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=PageMarginsPreviewControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.HeaderFooterEditControl}" TargetType="{x:Type dxspsi:HeaderFooterEditControl}">
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=HeaderFooterEditControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.HeaderFooterPreviewControl}" TargetType="{x:Type dxspsi:HeaderFooterPreviewControl}">
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=HeaderFooterPreviewControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.PageSetupPrintButtonsControl}" TargetType="{x:Type dxspsi:PageSetupPrintButtonsControl}">
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=PageSetupPrintButtonsControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.SpreadsheetFormulaBarControl}" TargetType="{x:Type dxsps:SpreadsheetFormulaBarControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="MinHeight" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlMinHeight}}"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.CellControl}" TargetType="{x:Type dxspsi:CellControl}">
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.VisualFeedbackControl}" TargetType="{x:Type dxspsi:VisualFeedbackControl}">
        <Setter Property="LineBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=VisualFeedbackLineBrush}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetBackgroundControl}" TargetType="{x:Type dxspsi:WorksheetBackgroundControl}">
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.ChartsheetBackgroundControl}" TargetType="{x:Type dxspsi:ChartsheetBackgroundControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBackgroundBrush}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetLineControl}" TargetType="{x:Type dxspsi:WorksheetLineControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FrozenSeparatorBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FrozenSeparatorBrush}}"/>
        <Setter Property="GridLinesColor" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.CellPresenter}" TargetType="{x:Type dxspsi:CellPresenter}">
        <Setter Property="ToolTip" Value="{Binding CellToolTip, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ToolTipService.IsEnabled" Value="{Binding ShowCellToolTip, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.TabSelectorItem}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=HorizontalHeadersControlStyle}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
        <Setter Property="ItemTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=HorizontalHeaderItem}}"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=VerticalHeadersControlStyle}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
        <Setter Property="ItemTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=VerticalHeaderItem}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetHeadersControl}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=HeadersControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetGroupControl}" TargetType="{x:Type dxspsi:WorksheetGroupControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupControlTemplate}}"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupControlStyle}" TargetType="{x:Type dxspsi:WorksheetGroupControl}">
        <Setter Property="ButtonTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupButtonTemplate}}"/>
        <Setter Property="DotBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupDotBrush}}"/>
        <Setter Property="DotThickness" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupDotThickness}}"/>
        <Setter Property="HeaderTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupHeaderTemplate}}"/>
        <Setter Property="LineBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupLineBrush}}"/>
        <Setter Property="LineThickness" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GroupLineThickness}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.SpreadsheetTabSelector}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetControl}" TargetType="{x:Type dxspsi:WorksheetControl}">
        <Setter Property="CellTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CellControlContentTemplate}}"/>
        <Setter Property="ConditionalFormattingDataBarTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ConditionalFormattingDataBarCellTemplate}}"/>
        <Setter Property="ConditionalFormattingIconTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ConditionalFormattingIconCellTemplate}}"/>
        <Setter Property="HeaderHeight" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DefaultHeaderHeight}}"/>
        <Setter Property="HeaderWidth" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DefaultHeaderWidth}}"/>
        <Setter Property="IsManipulationEnabled" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=WorksheetTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="HeaderHeight" Value="44"/>
                <Setter Property="HeaderWidth" Value="44"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.SpreadsheetViewControl}" TargetType="{x:Type dxspsi:SpreadsheetViewControl}">
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ViewControlTemplate}}"/>
        <Setter Property="dx:ScrollViewerTouchBehavior.IsEnabled" Value="True"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.SpreadsheetControl}" TargetType="{x:Type dxsps:SpreadsheetControl}">
        <Setter Property="Background" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBackgroundBrush}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=SpreadsheetForegroundBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderThickness}}"/>
        <Setter Property="CellToolTip">
            <Setter.Value>
                <dxmvvm:ValueFactory>
                    <DataTemplate>
                        <TextBlock Text="{Binding Cell.DisplayText}"/>
                    </DataTemplate>
                </dxmvvm:ValueFactory>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsManipulationEnabled" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=Template}}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.Setters>
                    <Setter Property="Opacity" Value="0.65"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.SpreadsheetDefaultBarItemDataTemplates}" TargetType="{x:Type dxsps:SpreadsheetDefaultBarItemDataTemplates}">
        <Setter Property="ChartLayoutGalleryGroupTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=ChartLayoutGalleryGroup}}"/>
        <Setter Property="ChartStylesGalleryGroupTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=ChartStylesGalleryGroup}}"/>
        <Setter Property="StyleGalleryGroupTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=StyleGalleryGroup}}"/>
        <Setter Property="CellStyleGalleryItemCaptionTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=CellStyleGalleryItemCaption}}"/>
        <Setter Property="StyleGalleryHintCaptionTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=StyleGalleryHintCaption}}"/>
        <Setter Property="TableStyleGalleryItemCaptionTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=TableStyleGalleryItemCaption}}"/>
        <Setter Property="PivotTableStyleGalleryItemCaptionTemplate" Value="{DynamicResource {themes:BarItemTemplate ResourceKey=PivotTableStyleGalleryItemCaption}}"/>
        <Setter Property="CheckEditTemplate" Value="{Binding OfficeDefaultBarItemDataTemplates.CheckEditTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="MarginBarItemContentTemplate" Value="{Binding OfficeDefaultBarItemDataTemplates.MarginBarItemContentTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="PaperKindBarItemContentTemplate" Value="{Binding OfficeDefaultBarItemDataTemplates.PaperKindBarItemContentTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template" Value="{Binding OfficeDefaultBarItemDataTemplates.Template, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetIndicatorControl}" TargetType="{x:Type dxspsi:WorksheetIndicatorControl}">
        <Setter Property="CommentIndicatorBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentIndicatorBrush}}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IndicatorWidth" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=IndicatorWidth}}"/>
        <Setter Property="NumberIndicatorBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=NumberIndicatorBrush}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetCommentPanel}" TargetType="{x:Type dxspsi:WorksheetCommentPanel}">
        <Setter Property="CommentLineBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentLineBrush}}"/>
        <Setter Property="CommentLineWidth" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentLineWidth}}"/>
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.CommentItem}" TargetType="{x:Type dxspsi:CommentItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.XpfCommentInplaceEditor}" TargetType="{x:Type dxspsi:XpfCommentInplaceEditor}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.WorksheetDataValidationPanel}" TargetType="{x:Type dxspsi:WorksheetDataValidationPanel}">
        <Setter Property="DataValidationBackgroundBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}}"/>
        <Setter Property="DataValidationBorderColor" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}}"/>
        <Setter Property="DataValidationCircleBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DataValidationCircleBrush}}"/>
        <Setter Property="DataValidationCircleWidth" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DataValidationCircleWidth}}"/>
        <Setter Property="DataValidationMessageBackgroudBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageBackgroudBrush}}"/>
        <Setter Property="DataValidationMessageBorderBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageBorderBrush}}"/>
        <Setter Property="DataValidationMessageBorderWidth" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageBorderWidth}}"/>
        <Setter Property="DataValidationMessageForeBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=DataValidationMessageForeBrush}}"/>
        <Setter Property="Focusable" Value="True"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.ReferenceEdit}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ButtonEdit}}"
           TargetType="{x:Type dxspsi:ReferenceEdit}">
        <Setter Property="AllowDefaultButton" Value="False"/>
        <Setter Property="CollapseButtonTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ReferenceEditCollapseButtonTemplate}}"/>
        <Setter Property="ExpandButtonTemplate" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ReferenceEditExpandButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.UI.SpreadsheetChangeNumberFormatComboBoxEdit}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ComboBoxEdit}}"
           TargetType="{x:Type dxspsui:SpreadsheetChangeNumberFormatComboBoxEdit}">
        <Setter Property="IsTextEditable" Value="False"/>
        <Setter Property="PopupMaxHeight" Value="1000"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Image}"/>
                        <StackPanel Margin="7,0,0,0" Orientation="Vertical">
                            <TextBlock FontWeight="Bold" Text="{Binding Caption}"/>
                            <TextBlock Margin="0,0,0,3" Text="{Binding Description}"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.SpreadsheetPopupColorEdit}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.PopupColorEdit}}"
           TargetType="{x:Type dxspsi:SpreadsheetPopupColorEdit}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="IsTextEditable" Value="False"/>
        <Setter Property="DisplayTextConverter" Value="{StaticResource ColorToStringConverter}"/>
        <Setter Property="EditNonEditableTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{Binding Path=(dxee:BaseEdit.OwnerEdit).Color, Converter={StaticResource ColorToBrushConverter}, RelativeSource={RelativeSource Self}}"
                               Height="{Binding Path=(dxee:BaseEdit.OwnerEdit).Height, RelativeSource={RelativeSource Self}}"
                               Margin="3,2,0,2"
                               Width="{Binding Path=(dxee:BaseEdit.OwnerEdit).Width, RelativeSource={RelativeSource Self}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.UI.CellStyleGalleryBarItemLinkControl}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.RibbonGalleryBarItemLinkControl}}"
           TargetType="{x:Type dxspsui:CellStyleGalleryBarItemLinkControl}">
        <Setter Property="MaxHeight" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CellStyleGalleryBarItemHeight}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.UI.TableStyleGalleryBarItemLinkControl}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.RibbonGalleryBarItemLinkControl}}"
           TargetType="{x:Type dxspsui:TableStyleGalleryBarItemLinkControl}">
        <Setter Property="MaxHeight" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TableStyleGalleryBarItemHeight}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.UI.ChartLayoutGalleryBarItemLinkControl}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.RibbonGalleryBarItemLinkControl}}"
           TargetType="{x:Type dxspsui:ChartLayoutGalleryBarItemLinkControl}">
        <Setter Property="MaxHeight" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ChartLayoutGalleryBarItemHeight}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.UI.ChartStyleGalleryBarItemLinkControl}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.RibbonGalleryBarItemLinkControl}}"
           TargetType="{x:Type dxspsui:ChartStyleGalleryBarItemLinkControl}">
        <Setter Property="MaxHeight" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=ChartStyleGalleryBarItemHeight}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Spreadsheet.Internal.PlaceholderPanel}" TargetType="{x:Type dxspsi:PlaceholderPanel}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderBrush="Red"
                            BorderThickness="1"
                            cs:id="Border_0000">
                        <Grid Background="White" cs:id="Grid_0000">
                            <TextBlock FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                       Margin="{Binding Margins, RelativeSource={RelativeSource TemplatedParent}}"
                                       Text="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"
                                       TextWrapping="Wrap"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>