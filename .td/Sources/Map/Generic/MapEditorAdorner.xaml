<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/map/themekeys"
                    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/map"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ResizeBoxStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=ResizePointSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=ResizePointSize}}"/>
        <Setter Property="Fill" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=ResizeBoxBackground}}"/>
        <Setter Property="Stroke" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}"/>
    </Style>

    <Style x:Key="AdditionalPointStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointSize}}"/>
        <Setter Property="Fill" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointBackground}}"/>
        <Setter Property="Stroke" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointStroke}}"/>
    </Style>

    <Style x:Key="EditablePointStyle"
           BasedOn="{StaticResource AdditionalPointStyle}"
           TargetType="Ellipse">
        <Setter x:Name="scaleTransform" Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.05"
                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                         To="1.2"/>
                        <DoubleAnimation Duration="0:0:0.05"
                                         Storyboard.TargetProperty="RenderTransform.ScaleY"
                                         To="1.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetProperty="RenderTransform.ScaleX"/>
                        <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetProperty="RenderTransform.ScaleY"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <VisualBrush x:Key="AdditionalPointBrush">
        <VisualBrush.Visual>
            <Ellipse Style="{StaticResource AdditionalPointStyle}"/>
        </VisualBrush.Visual>
    </VisualBrush>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.MapEditorAdorner}" TargetType="{x:Type local:MapEditorAdorner}">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="AdditionalPointBrush" Value="{DynamicResource AdditionalPointBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MapEditorAdorner}">
                    <Grid Name="root">
                        <Image x:Name="RotationIcon"
                               Height="21"
                               HorizontalAlignment="Center"
                               Margin="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=RotationAdornerMargin}}"
                               Source="{local:MapCoreSvgImage Size='21,21', Path=Images/Svg/Rotate.svg}"
                               VerticalAlignment="Top"
                               Width="21"/>
                        <Grid>
                            <Rectangle x:Name="EditRect" Stroke="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}"/>
                            <ItemsControl x:Name="Points" ItemsSource="{TemplateBinding EditablePoints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <local:EditablePointsPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Ellipse local:MapEditorUIInput.MapEditorInputElement="{Binding InputElement}" Style="{StaticResource EditablePointStyle}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl ItemsSource="{TemplateBinding ResizeModes}" Margin="-3">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle HorizontalAlignment="{Binding HorizontalAlignment}"
                                                   local:MapEditorUIInput.MapEditorInputElement="{Binding InputElement}"
                                                   Style="{StaticResource ResizeBoxStyle}"
                                                   VerticalAlignment="{Binding VerticalAlignment}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanTransform" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="RotationIcon"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="CanRotate" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="RotationIcon"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ShowEditRect" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="EditRect"
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>