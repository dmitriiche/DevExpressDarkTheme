<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/map/themekeys"
                    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/map"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <local:DXMapImages x:Key="MapImages"/>

    <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

    <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <local:SystemParametersWrapper x:Key="SystemParametersWrapper"/>

    <local:PushpinTooltipMenuDropAlignmentToLayoutTransformConverter x:Key="PushpinTooltipMenuDropAlignmentToLayoutTransformConverter"/>

    <local:PushpinTooltipMenuDropAlignmentToHorizontalAlignmentConverter x:Key="PushpinTooltipMenuDropAlignmentToHorizontalAlignmentConverter"/>

    <local:PushpinTooltipMenuDropAlignmentToHorizontalOffsetConverter x:Key="PushpinTooltipMenuDropAlignmentToHorizontalOffsetConverter"/>

    <local:PushpinTooltipMenuDropAlignmentToMarginConverter x:Key="PushpinTooltipMenuDropAlignmentToMarginConverter"/>

    <Style x:Key="PushpinTooltipStyle" TargetType="ToolTip">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid HorizontalAlignment="Center"
                          Margin="12"
                          VerticalAlignment="Center"
                          Visibility="{Binding Path=MapItem.Information, Converter={StaticResource NullToVisibilityConverter}}">
                        <Border Background="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=ToolTipBackground}}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Cursor="{TemplateBinding Cursor}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.PushpinMarkerControl}" TargetType="local:PushpinMarkerControl">
        <Setter Property="Item" Value="{Binding MapItem}"/>
        <Setter Property="State" Value="{Binding MapItem.State}"/>
        <Setter Property="IsHighlighted" Value="{Binding MapItem.IsHighlighted}"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
        <Setter Property="Background" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=PushpinBackground}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=PushpinForeground}}"/>
        <Setter Property="StrokeBrush" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=MapBackground}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PushpinMarkerControl">
                    <Grid x:Name="ContainerGrid"
                          Height="64"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Width="64">
                        <ToolTipService.ToolTip>
                            <ToolTip HorizontalOffset="{Binding Source={StaticResource SystemParametersWrapper},Path=MenuDropAlignment, Converter={StaticResource PushpinTooltipMenuDropAlignmentToHorizontalOffsetConverter}}"
                                     Placement="Top"
                                     Style="{StaticResource PushpinTooltipStyle}">
                                <ToolTip.Content>
                                    <TextBlock Foreground="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=ToolTipForeground}}"
                                               Margin="24,16"
                                               Text="{Binding MapItem.Information}"
                                               TextWrapping="Wrap"/>
                                </ToolTip.Content>
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="-32" Y="-52"/>
                                <RotateTransform x:Name="PointerRotation" Angle="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Selection">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=PushpinSelectionBrush}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(Path.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=MapBackground}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LoadingIndicator" Storyboard.TargetProperty="(Path.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=PushpinSelectionBrush}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Label" Storyboard.TargetProperty="(TextBlock.Foreground)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=PushpinSelectionForeground}}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotSelected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="State">
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0"
                                                         Storyboard.TargetName="Loading"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                        <DoubleAnimation Duration="0:0:1"
                                                         RepeatBehavior="Forever"
                                                         Storyboard.TargetName="LoadingRotation"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="360"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0"
                                                         Storyboard.TargetName="Loading"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MouseStates">
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                                       Storyboard.TargetName="Pin"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.40" Value="0.62"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.80" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NonHighlighted">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.40"
                                                         Storyboard.TargetName="Pin"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent"
                              Height="44"
                              Width="36"
                              cs:id="Grid_0000">
                            <Path x:Name="Pin"
                                  Data="F1 M 55,43C 59.9706,43 64,47.0294 64,52C 64,56.9706 59.9706,61 55,61C 50.0294,61 46,56.9706 46,52C 46,47.0294 50.0294,43 55,43 Z M 55,35C 64.3888,35 72,42.6112 72,52C 72,56.195 70.4805,60.0351 67.962,63L 55,77L 42.038,63C 39.5194,60.0351 38,56.195 38,52C 38,42.6112 45.6111,35 55,35 Z M 55,39C 47.8203,39 42,44.8203 42,52C 42,59.1797 47.8203,65 55,65C 62.1797,65 68,59.1797 68,52C 68,44.8203 62.1797,39 55,39 Z"
                                  Fill="{Binding MapItem.ActualBrush}"
                                  Stretch="Fill"
                                  Stroke="{Binding MapItem.ActualStrokeBrush}"
                                  StrokeThickness="1"
                                  UseLayoutRounding="False"/>
                            <Grid x:Name="Loading"
                                  Height="24"
                                  Margin="6"
                                  RenderTransformOrigin="0.5,0.5"
                                  VerticalAlignment="Top"
                                  Width="24">
                                <Grid.RenderTransform>
                                    <RotateTransform x:Name="LoadingRotation" Angle="0"/>
                                </Grid.RenderTransform>
                                <Path x:Name="LoadingIndicator"
                                      Data="F1 M 55,40C 61.6274,40 67,45.3726 67,52L 65,52C 65,46.4772 60.5228,42 55,42C 49.4771,42 45,46.4772 45,52L 43,52C 43,45.3726 48.3726,40 55,40 Z "
                                      Fill="{DynamicResource {dxt:MapBrushesThemeKey ResourceKey=PushpinBackground}}"
                                      Height="12"
                                      RenderTransformOrigin="0.5,1"
                                      Stretch="Fill"
                                      UseLayoutRounding="False"
                                      VerticalAlignment="Top"
                                      Width="24">
                                    <Path.OpacityMask>
                                        <LinearGradientBrush EndPoint="1,1"
                                                             StartPoint="0,1"
                                                             cs:id="LinearGradientBrush_0000">
                                            <GradientStop Color="#00000000"
                                                          Offset="0"
                                                          cs:id="GradientStop_0000"/>
                                            <GradientStop Color="#FF000000"
                                                          Offset="1"
                                                          cs:id="GradientStop_0001"/>
                                        </LinearGradientBrush>
                                    </Path.OpacityMask>
                                </Path>
                            </Grid>
                            <TextBlock x:Name="Label"
                                       FontSize="12"
                                       FontWeight="Bold"
                                       Foreground="{Binding MapItem.ActualForeground}"
                                       HorizontalAlignment="Center"
                                       Margin="0,0,0,10"
                                       Opacity="0.75"
                                       Text="{Binding MapItem.Text}"
                                       TextWrapping="Wrap"
                                       VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.PushpinControl}" TargetType="local:PushpinControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PushpinControl">
                    <Grid>
                        <local:PushpinPanel x:Name="PART_Container">
                            <local:PushpinTraceControl x:Name="PART_Trace" Item="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ItemInfo.MapItem}"/>
                            <ContentPresenter x:Name="PART_Marker"
                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ItemInfo}"
                                              ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemInfo.MapItem.MarkerTemplate}"/>
                        </local:PushpinPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.PushpinTraceControl}" TargetType="local:PushpinTraceControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PushpinTraceControl">
                    <Grid Name="PART_Canvas"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>