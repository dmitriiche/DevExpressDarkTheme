<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/treemap/themekeys"
                    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/treemap"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="ToolTip.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.TreeMap.TreeMapControl}" TargetType="{x:Type local:TreeMapControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeMapControl}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ControlBorderBrush}}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <local:TreeMapItemsControl x:Name="PART_ItemsContainer"/>
                        </Border>
                        <local:ToolTipPanel x:Name="PART_ToolTipPanel"
                                            Position="{Binding Path=ToolTipInfo.ToolTipPosition, RelativeSource={RelativeSource TemplatedParent}}"
                                            Visibility="{Binding Path=ToolTipInfo.Visible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <Popup AllowsTransparency="True"
                                   IsOpen="{Binding Path=ToolTipInfo.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Placement="Absolute">
                                <ContentPresenter Content="{Binding Path=ToolTipInfo, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=ToolTipTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Popup>
                        </local:ToolTipPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipTemplate" Value="{StaticResource toolTipTemplate}"/>
        <Setter Property="ToolTipContentTemplate" Value="{StaticResource defaultToolTipContentTemplate}"/>
        <Setter Property="ToolTipGroupContentTemplate" Value="{StaticResource defaultToolTipContentTemplate}"/>
        <Setter Property="GroupHeaderContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontSize="{Binding FontSize}"
                               FontWeight="{Binding FontWeight}"
                               Foreground="{Binding ActualForeground}"
                               Margin="4"
                               Text="{Binding Label}"
                               TextTrimming="WordEllipsis"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LeafContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border BorderBrush="{Binding BorderBrush}" BorderThickness="{Binding BorderThickness}">
                        <local:TreeMapTextPanel>
                            <TextBlock Foreground="{Binding ActualForeground}"
                                       HorizontalAlignment="{Binding LeafTextHorizontalAlignment}"
                                       Margin="4"
                                       Text="{Binding Label}"
                                       TextTrimming="WordEllipsis"
                                       TextWrapping="WrapWithOverflow"
                                       VerticalAlignment="{Binding LeafTextVerticalAlignment}"/>
                        </local:TreeMapTextPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TreeMapStyle">
            <Setter.Value>
                <local:TreeMapStyle GroupBackground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupBackground}}"
                                    GroupBorderBrush="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupBorderBrush}}"
                                    GroupFontSize="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupFontSize}}"
                                    GroupFontWeight="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupFontWeight}}"
                                    GroupForeground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupForeground}}"
                                    SubGroupBackground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupBackground}}"
                                    SubGroupFontSize="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupFontSize}}"
                                    SubGroupFontWeight="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupFontWeight}}"
                                    SubGroupForeground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupForeground}}"/>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>