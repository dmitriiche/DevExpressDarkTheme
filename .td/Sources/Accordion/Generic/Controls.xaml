<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
                    xmlns:dxan="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
                    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Accordion.v20.2;component/Themes/Generic/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <dxan:AccordionItemConverter x:Key="accordionItemConverter"/>

    <Style x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}" TargetType="dxa:AccordionExpandButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemExpandButtonSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemExpandButtonSize}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonTemplate}}"/>
        <Setter Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="IsChecked" Value="{Binding Path=IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Command" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.Commands.ChangeItemExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource accordionItemConverter}}"/>
        <Setter Property="ItemType" Value="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Style.Triggers>
            <Trigger Property="ItemType" Value="RootItem">
                <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}"/>
                <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="{StaticResource ExpandButtonTouchSize}"/>
                <Setter Property="Height" Value="{StaticResource ExpandButtonTouchSize}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxat:AccordionThemeKeys ResourceKey=SearchControlSearchButtonTemplate}" TargetType="dxe:ButtonClose">
        <Grid x:Name="Root"
              Background="Transparent"
              Height="16"
              HorizontalAlignment="Center"
              Opacity="0.62"
              VerticalAlignment="Center"
              Width="16"
              cs:id="Grid_0000">
            <Path x:Name="CloseButtonPath"
                  Data="F1 M 4,1.90735e-006C 6.20914,1.90735e-006 8,1.79086 8,4C 8,4.84917 7.73539,5.63653 7.28414,6.28414L 10,9L 9,10L 6.28414,7.28414C 5.63653,7.7354 4.84917,8 4,8C 1.79086,8 0,6.20914 0,4C 0,1.79086 1.79086,1.90735e-006 4,1.90735e-006 Z M 4,1C 2.34315,1 1,2.34315 1,4C 1,5.65686 2.34315,7 4,7C 5.65685,7 7,5.65686 7,4C 7,2.34315 5.65685,1 4,1 Z "
                  Fill="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlSearchButtonFill}}"
                  Height="14"
                  HorizontalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="14"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
                <Setter Property="Height"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
                <Setter Property="Height"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
                <Setter Property="Width"
                        TargetName="CloseButtonPath"
                        Value="26"/>
                <Setter Property="Height"
                        TargetName="CloseButtonPath"
                        Value="26"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxat:AccordionThemeKeys ResourceKey=SearchControlClearButtonTemplate}" TargetType="dxe:ButtonClose">
        <Grid x:Name="Root"
              Background="Transparent"
              Height="16"
              HorizontalAlignment="Center"
              Opacity="0.62"
              VerticalAlignment="Center"
              Width="16"
              cs:id="Grid_0000">
            <Path x:Name="CloseButtonPath"
                  Data="F1 M 0,1 1,0 4,3 7,0 8,1 5,4 8,7 7,8 4,5 1,8 0,7 3,4 0,1 Z "
                  Fill="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlClearButtonFill}}"
                  Height="8"
                  HorizontalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="8"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
                <Setter Property="Height"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
                <Setter Property="Height"
                        TargetName="Root"
                        Value="{StaticResource SearchControlButtonTouchSize}"/>
                <Setter Property="Width"
                        TargetName="CloseButtonPath"
                        Value="16"/>
                <Setter Property="Height"
                        TargetName="CloseButtonPath"
                        Value="16"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=SearchControlStyle}" TargetType="{x:Type dxa:AccordionSearchControl}">
        <Setter Property="Margin" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlMargin}}"/>
        <Setter Property="ShowMRUButton" Value="False"/>
        <Setter Property="ImmediateMRUPopup" Value="False"/>
        <Setter Property="SearchTextPostDelay" Value="500"/>
        <Setter Property="IsEditorTabStop" Value="False"/>
        <Setter Property="NullTextForeground" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlNullTextForeground}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxa:AccordionSearchControl}">
                    <ContentControl dx:FocusHelper2.Focusable="False"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <dxe:ButtonClose x:Name="searchButton"
                                             HorizontalAlignment="Center"
                                             Margin="0,0,4,0"
                                             Template="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlSearchButtonTemplate}}"
                                             VerticalAlignment="Center"/>
                            <dxei:ChildMinWidthPanel ChildMinWidth="{Binding Path=SearchTextBoxMinWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Grid.Column="1"
                                                     VerticalAlignment="Center">
                                <dxe:ComboBoxEdit x:Name="editor"
                                                  AllowDefaultButton="False"
                                                  dxei:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                  EditValue="{Binding Path=SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                  EditValuePostDelay="{Binding Path=SearchTextPostDelay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Foreground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}"
                                                  ImmediatePopup="{Binding Path= SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}"
                                                  IncrementalFiltering="False"
                                                  IsCaseSensitiveSearch="True"
                                                  IsTabStop="{Binding IsEditorTabStop, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding Path=MRU, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Margin="0"
                                                  MinHeight="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlMinHeight}}"
                                                  NullTextForeground="{Binding Path=NullTextForeground, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                  ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:BooleanNegationConverter}}"
                                                  ValidateOnEnterKeyPressed="True">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxmvvm:FocusBehavior EventName="Click" SourceName="searchButton"/>
                                    </dxmvvm:Interaction.Behaviors>
                                    <dxe:ComboBoxEdit.EditTemplate>
                                        <ControlTemplate>
                                            <TextBox x:Name="PART_Editor"
                                                     CaretBrush="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}"
                                                     dxei:EditorMarginHelper.Margin="2,2,2,2,0,2,2,2"
                                                     Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextStyle}}"/>
                                        </ControlTemplate>
                                    </dxe:ComboBoxEdit.EditTemplate>
                                    <dxe:ComboBoxEdit.BorderTemplate>
                                        <ControlTemplate TargetType="ContentControl">
                                            <ContentPresenter/>
                                        </ControlTemplate>
                                    </dxe:ComboBoxEdit.BorderTemplate>
                                    <dxe:ComboBoxEdit.NullText>
                                        <MultiBinding>
                                            <Binding Path="NullText" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Converter="{StaticResource EditorStringIdConverter}"
                                                     ConverterParameter="LookUpSearch"
                                                     Path="IsTabStop"
                                                     RelativeSource="{RelativeSource Self}"/>
                                            <MultiBinding.Converter>
                                                <dx:SearchControlNullTextConverter/>
                                            </MultiBinding.Converter>
                                        </MultiBinding>
                                    </dxe:ComboBoxEdit.NullText>
                                    <dxe:ComboBoxEdit.Buttons>
                                        <dxe:ButtonInfo x:Name="buttonClear"
                                                        Command="{Binding Path=SearchControlPropertyProvider.ClearSearchTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                        GlyphKind="Custom"
                                                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                            <dxe:ButtonInfo.Template>
                                                <DataTemplate>
                                                    <dxe:ButtonClose Command="{Binding Command}"
                                                                     HorizontalAlignment="Center"
                                                                     Margin="2,0"
                                                                     Template="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=SearchControlClearButtonTemplate}}"
                                                                     VerticalAlignment="Center"
                                                                     Visibility="{Binding Visibility}"/>
                                                </DataTemplate>
                                            </dxe:ButtonInfo.Template>
                                        </dxe:ButtonInfo>
                                        <dxe:ButtonInfo Command="{Binding Path=OpenPopupCommand, ElementName=editor}"
                                                        GlyphKind="DropDown"
                                                        Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
                                    </dxe:ComboBoxEdit.Buttons>
                                </dxe:ComboBoxEdit>
                            </dxei:ChildMinWidthPanel>
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin"
                                    TargetName="searchButton"
                                    Value="0,0,2,0"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                            <Setter Property="Margin"
                                    TargetName="searchButton"
                                    Value="0,0,8,0"/>
                            <Setter Property="FontSize"
                                    TargetName="editor"
                                    Value="18"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="8,1,0,1"/>
                <Setter Property="MinHeight" Value="42"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxat:AccordionThemeKeys ResourceKey=ItemPresenterTemplate}" TargetType="dxa:ItemPresenter">
        <Grid x:Name="Root"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="PART_RotateContainer" Grid.Row="1">
                <Grid x:Name="PART_HeaderInternalContainer"
                      HorizontalAlignment="Center"
                      Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderMargin}}"
                      VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <dxa:GlyphPresenter x:Name="PART_Glyph"
                                        Grid.Row="1"
                                        Style="{StaticResource decoratorGlyphPresenterStyle}"/>
                    <Border x:Name="PART_Header"
                            Background="{TemplateBinding Background}"
                            Grid.Column="1"
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                            SnapsToDevicePixels="True"
                            VerticalAlignment="Stretch">
                        <ContentPresenter x:Name="PART_HeaderContent"
                                          ContentSource="Header"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Resources>
                                <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <Border x:Name="PART_RightBorder"
                            BorderThickness="0"
                            Grid.Column="3"
                            Grid.Row="1"
                            Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"/>
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsRotatedView" Value="True">
                <Setter Property="TextOptions.TextFormattingMode"
                        TargetName="PART_HeaderInternalContainer"
                        Value="Display"/>
                <Setter Property="TextOptions.TextRenderingMode"
                        TargetName="PART_HeaderInternalContainer"
                        Value="ClearType"/>
            </Trigger>
            <Trigger Property="GlyphPosition" Value="Left">
                <Setter Property="Visibility"
                        TargetName="PART_Glyph"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="GlyphPosition" Value="Right">
                <Setter Property="Visibility"
                        TargetName="PART_Glyph"
                        Value="Visible"/>
                <Setter Property="Grid.Column"
                        TargetName="PART_Glyph"
                        Value="2"/>
                <Setter Property="Grid.Row"
                        TargetName="PART_Glyph"
                        Value="1"/>
            </Trigger>
            <Trigger Property="GlyphPosition" Value="Top">
                <Setter Property="Visibility"
                        TargetName="PART_Glyph"
                        Value="Visible"/>
                <Setter Property="Grid.Column"
                        TargetName="PART_Glyph"
                        Value="1"/>
                <Setter Property="Grid.Row"
                        TargetName="PART_Glyph"
                        Value="0"/>
            </Trigger>
            <Trigger Property="ShowHeader" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Header"
                        Value="Collapsed"/>
                <Setter Property="Grid.Column"
                        TargetName="PART_Glyph"
                        Value="0"/>
                <Setter Property="Grid.Row"
                        TargetName="PART_Glyph"
                        Value="1"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight"
                        TargetName="Root"
                        Value="{StaticResource HeaderTouchHeight}"/>
                <Setter Property="MinWidth"
                        TargetName="Root"
                        Value="{StaticResource HeaderTouchHeight}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Margin"
                        TargetName="PART_RightBorder"
                        Value="{StaticResource CollapsedItemRightTouchMargin}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=CoerceGlyphMarginOnTouchTheme, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=GlyphPosition, RelativeSource={RelativeSource Self}}" Value="Right"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Margin"
                        TargetName="PART_Glyph"
                        Value="4,0,0,0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=CoerceGlyphMarginOnTouchTheme, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=GlyphPosition, RelativeSource={RelativeSource Self}}" Value="Right"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Margin"
                        TargetName="PART_Glyph"
                        Value="4,0,0,0"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseButtonStyleBase}" TargetType="ToggleButton">
        <Setter Property="Template" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=CollapseButtonTemplate}}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}"/>
        <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}"/>
        <Setter Property="Margin" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=CollapseButtonMargin}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="{StaticResource ExpandButtonTouchSize}"/>
                <Setter Property="Height" Value="{StaticResource ExpandButtonTouchSize}"/>
                <Setter Property="Margin" Value="7,5,7,5"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ThemeManager.IsTouchlineTheme" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="8,9,16,9"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapsedContainerStyleBase}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=CollapsedItemTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapsedItemStyleBase}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=CollapsedContainerStyleBase}}"
           TargetType="{x:Type dxe:ListBoxEditItem}">
        <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=CollapsedItemFontSize}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=CollapsedItemFontWeight}}"/>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxa:CollapsedItemHoverSuppressBehavior/>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource Self}, Converter={dxan:SummaryCollapseItemToBoolConverter}}" Value="False">
                <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapsedItemStyle}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=CollapsedItemStyleBase}}"
           TargetType="{x:Type dxe:ListBoxEditItem}"/>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=ItemPresenterStyleBase}" TargetType="{x:Type dxa:ItemPresenter}">
        <Setter Property="Background"
                Value="Transparent"
                cs:id="Setter_0000"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="GlyphPosition" Value="Left"/>
        <Setter Property="GlyphTemplate" Value="{StaticResource AccordionItemDefaultGlyphTemplate}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHeight}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHeight}}"/>
        <Setter Property="RotateAngle" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemRotateAngle}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=ItemPresenterTemplate}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=GlyphTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="GlyphTemplate" Value="{x:Null}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=HeaderPresenterStyleBase}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=ItemPresenterStyleBase}}"
           TargetType="{x:Type dxa:ItemPresenter}">
        <Setter Property="Header" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderContent, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HeaderTemplate" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderContentTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HeaderTemplateSelector" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderContentTemplateSelector, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Glyph" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderGlyph, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="GlyphTemplate" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderGlyphTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="GlyphTemplateSelector" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderGlyphTemplateSelector, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="GlyphSize" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderGlyphSize, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="GlyphStretch" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.HeaderGlyphStretch, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=HeaderForeground}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=HeaderFontSize}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=HeaderFontWeight}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ShowDefaultGlyph" Value="False"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="{StaticResource GlyphTouchMargin}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=HeaderPresenterStyle}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=HeaderPresenterStyleBase}}"
           TargetType="{x:Type dxa:ItemPresenter}"/>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=ItemDecoratorStyleBase}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=ItemPresenterStyleBase}}"
           TargetType="{x:Type dxa:CollapsedItemDecorator}">
        <Setter Property="Item" Value="{Binding}"/>
        <Setter Property="IsRotatedView" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapsedItemDisplayMode,              Converter={StaticResource glyphViewModeToBoolInvertedConverter}, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="CoerceGlyphMarginOnTouchTheme" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapsedItemDisplayMode,              Converter={StaticResource contentAndGlyphViewModeToBoolConverter}, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="GlyphSize" Value="{Binding GlyphSize}"/>
        <Setter Property="GlyphStretch" Value="{Binding GlyphStretch}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSummaryItemDecorator, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="GlyphSize" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.SummaryItemGlyphSize, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="GlyphStretch" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.SummaryItemGlyphStretch, RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapsedItemDecoratorStyleBase}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=ItemDecoratorStyleBase}}"
           TargetType="{x:Type dxa:CollapsedItemDecorator}">
        <Setter Property="ShowDefaultGlyph" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapsedItemDisplayMode, RelativeSource={RelativeSource Self},             Converter={StaticResource glyphViewModeToBoolConverter}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapsedItemDisplayMode, RelativeSource={RelativeSource Self}}" Value="Content">
                <Setter Property="GlyphPosition" Value="None"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapsedItemDisplayMode, RelativeSource={RelativeSource Self}}" Value="Glyph">
                <Setter Property="ShowHeader" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=OverflowDecoratorStyleBase}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=ItemDecoratorStyleBase}}"
           TargetType="{x:Type dxa:CollapsedItemDecorator}">
        <Setter Property="IsRotatedView" Value="False"/>
        <Setter Property="ShowHeader" Value="False"/>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=OverflowDecoratorStyle}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=OverflowDecoratorStyleBase}}"
           TargetType="{x:Type dxa:CollapsedItemDecorator}"/>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapsedItemDecoratorStyle}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=CollapsedItemDecoratorStyleBase}}"
           TargetType="{x:Type dxa:CollapsedItemDecorator}"/>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseButtonStyle}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=CollapseButtonStyleBase}}"
           TargetType="ToggleButton"/>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=OverflowItemStyleBase}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=CollapsedContainerStyleBase}}"
           TargetType="{x:Type dxe:ListBoxEditItem}">
        <Setter Property="Margin" Value="{DynamicResource {dxat:AccordionThemeKeys ResourceKey=OverflowItemMargin}}"/>
    </Style>

    <Style x:Key="{dxat:AccordionThemeKeys ResourceKey=OverflowItemStyle}"
           BasedOn="{StaticResource {dxat:AccordionThemeKeys ResourceKey=OverflowItemStyleBase}}"
           TargetType="{x:Type dxe:ListBoxEditItem}"/>

</ResourceDictionary>