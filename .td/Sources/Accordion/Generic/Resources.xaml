<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
                    xmlns:dxan="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
                    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <sys:Double x:Key="HeaderTouchHeight">44</sys:Double>

    <sys:Double x:Key="ExpandButtonTouchSize">34</sys:Double>

    <sys:Double x:Key="ItemTouchOffset">35</sys:Double>

    <sys:Double x:Key="ExpandButtonContainerTouchMinWidth">35</sys:Double>

    <Thickness x:Key="HeaderTouchMargin">12,0,0,0</Thickness>

    <Thickness x:Key="GlyphTouchMargin">8,0,0,0</Thickness>

    <Thickness x:Key="CollapsedItemRightTouchMargin">4,8,0,8</Thickness>

    <Thickness x:Key="LeftExpanderTouchMargin">1,3,0,3</Thickness>

    <Thickness x:Key="RightExpanderTouchMargin">12,3,-11,3</Thickness>

    <Thickness x:Key="PopupContentMargin">3,3,3,3</Thickness>

    <Thickness x:Key="PopupScrollingContentMargin">3,3,0,3</Thickness>

    <sys:Double x:Key="SearchControlButtonTouchSize">34</sys:Double>

    <sys:Double x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemRotateAngle}">-90</sys:Double>

    <sys:Double x:Key="{dxat:AccordionThemeKeys ResourceKey=PopupDefaultWidth}">200</sys:Double>

    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=ExpandStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,.8,.8,.4"
                                  KeyTime="0:0:0.3"
                                  Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".8,.4,.4,.8"
                                  KeyTime="0:0:0.3"
                                  Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=ExpandAccordionStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,.8,.8,.4"
                                  KeyTime="0:0:0.03"
                                  Value="0"/>
            <SplineDoubleKeyFrame KeySpline=".8,.4,.4,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsContentCollapsed">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.03" Value="False"/>
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseAccordionStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.2"
                                  Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,1.0,.4,1.0"
                                  KeyTime="0:0:0.15"
                                  Value="0"/>
            <SplineDoubleKeyFrame KeySpline="1.0,.0,1.0,.0"
                                  KeyTime="0:0:0.3"
                                  Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsContentCollapsed">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.15" Value="True"/>
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>

    <dxmvvm:ObjectToObjectConverter x:Key="scrollBarVisibilityConverter" DefaultTarget="Auto">
        <dxmvvm:MapItem Source="False" Target="Hidden"/>
    </dxmvvm:ObjectToObjectConverter>

    <dxmvvm:ObjectToObjectConverter x:Key="glyphViewModeToBoolConverter" DefaultTarget="False">
        <dxmvvm:MapItem Source="Glyph" Target="True"/>
    </dxmvvm:ObjectToObjectConverter>

    <dxmvvm:ObjectToObjectConverter x:Key="glyphViewModeToBoolInvertedConverter" DefaultTarget="True">
        <dxmvvm:MapItem Source="Glyph" Target="False"/>
    </dxmvvm:ObjectToObjectConverter>

    <dxmvvm:ObjectToObjectConverter x:Key="contentAndGlyphViewModeToBoolConverter" DefaultTarget="False">
        <dxmvvm:MapItem Source="ContentAndGlyph" Target="True"/>
    </dxmvvm:ObjectToObjectConverter>

    <Style x:Key="glyphPresenterStyle" TargetType="dxa:GlyphPresenter">
        <Setter Property="Content" Value="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="ContentTemplate" Value="{Binding GlyphTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="ContentTemplateSelector" Value="{Binding GlyphTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="GlyphSize" Value="{Binding GlyphSize, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="GlyphStretch" Value="{Binding GlyphStretch, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <Style x:Key="decoratorGlyphPresenterStyle"
           BasedOn="{StaticResource glyphPresenterStyle}"
           TargetType="dxa:GlyphPresenter">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Glyph, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}"/>
                    <Condition Binding="{Binding Path=ShowDefaultGlyph, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Content" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.DefaultGlyph, RelativeSource={RelativeSource TemplatedParent}}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="AccordionItemDefaultGlyphTemplate">
        <dx:DXImage x:Name="glyph"
                    Height="{Binding GlyphHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                    SnapsToDevicePixels="True"
                    Source="{Binding}"
                    Stretch="{Binding GlyphStretch, RelativeSource={RelativeSource TemplatedParent}}"
                    Width="{Binding GlyphWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="glyph"
                        Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>