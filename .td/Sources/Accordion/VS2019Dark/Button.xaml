<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
                    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Accordion/VS2019Dark/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <ControlTemplate x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonTemplate}" TargetType="dxa:AccordionExpandButton">
        <Grid x:Name="Root"
              Background="Transparent"
              cs:id="Grid_0000">
            <Border x:Name="IsDefault"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    cs:id="Border_0001"/>
            <dxa:ExpandButtonContentPresenter x:Name="IsUnchecked"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <dxa:ExpandButtonContentPresenter.ItemContent>
                    <Path x:Name="ItemContentCollapse"
                          Fill="$Foreground"
                          RenderTransformOrigin="0.5,0.5"
                          Stretch="Fill"
                          Style="{StaticResource UIShape.Right}"
                          cs:id="Path_0000">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="{Binding IsRightExpandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlipHorizontalConverter}}"/>
                        </Path.RenderTransform>
                    </Path>
                </dxa:ExpandButtonContentPresenter.ItemContent>
                <dxa:ExpandButtonContentPresenter.RootItemContent>
                    <Path x:Name="RootItemContentCollapse"
                          Fill="$Foreground"
                          Stretch="Fill"
                          Style="{StaticResource UIShape.Down}"
                          cs:id="Path_0001"/>
                </dxa:ExpandButtonContentPresenter.RootItemContent>
            </dxa:ExpandButtonContentPresenter>
            <dxa:ExpandButtonContentPresenter x:Name="IsChecked"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Visibility="Hidden">
                <dxa:ExpandButtonContentPresenter.ItemContent>
                    <Path x:Name="ItemContentExpand"
                          Fill="$Foreground"
                          RenderTransformOrigin="0.5,0.5"
                          Stretch="Fill"
                          Style="{StaticResource UIShape.RightDown}"
                          cs:id="Path_0002">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="{Binding IsRightExpandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlipHorizontalConverter}}"/>
                        </Path.RenderTransform>
                    </Path>
                </dxa:ExpandButtonContentPresenter.ItemContent>
                <dxa:ExpandButtonContentPresenter.RootItemContent>
                    <Path x:Name="RootItemContentExpand"
                          Fill="$Foreground"
                          Stretch="Fill"
                          Style="{StaticResource UIShape.Up}"
                          cs:id="Path_0003"/>
                </dxa:ExpandButtonContentPresenter.RootItemContent>
            </dxa:ExpandButtonContentPresenter>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed"
                                                           Storyboard.TargetName="IsUnchecked"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)"/>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="IsChecked"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="ItemState" Value="Default"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="ItemState" Value="Hover"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="ItemContentCollapse"
                        Value="$HoverForeground"
                        cs:id="Setter_0000"/>
                <Setter Property="Fill"
                        TargetName="ItemContentExpand"
                        Value="$HoverForeground"
                        cs:id="Setter_0001"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="ItemState" Value="Pressed"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="ItemContentCollapse"
                        Value="$SelectionForeground"
                        cs:id="Setter_0002"/>
                <Setter Property="Fill"
                        TargetName="ItemContentExpand"
                        Value="$SelectionForeground"
                        cs:id="Setter_0003"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="ItemState" Value="Selected"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="ItemContentCollapse"
                        Value="$SelectionForeground"
                        cs:id="Setter_0004"/>
                <Setter Property="Fill"
                        TargetName="ItemContentExpand"
                        Value="$SelectionForeground"
                        cs:id="Setter_0005"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="ItemState" Value="SelectedInactive"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="ItemContentCollapse"
                        Value="$HoverForeground"
                        cs:id="Setter_0006"/>
                <Setter Property="Fill"
                        TargetName="ItemContentExpand"
                        Value="$HoverForeground"
                        cs:id="Setter_0007"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="ItemState" Value="Disabled"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="ItemState" Value="Default"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="ItemState" Value="Hover"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="RootItemContentCollapse"
                        Value="$HoverForeground"
                        cs:id="Setter_0008"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentExpand"
                        Value="$HoverForeground"
                        cs:id="Setter_0009"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="ItemState" Value="Pressed"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="RootItemContentCollapse"
                        Value="$SelectionForeground"
                        cs:id="Setter_0010"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentExpand"
                        Value="$SelectionForeground"
                        cs:id="Setter_0011"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="ItemState" Value="Selected"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="RootItemContentCollapse"
                        Value="$SelectionForeground"
                        cs:id="Setter_0012"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentExpand"
                        Value="$SelectionForeground"
                        cs:id="Setter_0013"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="ItemState" Value="SelectedInactive"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="RootItemContentCollapse"
                        Value="$HoverForeground"
                        cs:id="Setter_0014"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentExpand"
                        Value="$HoverForeground"
                        cs:id="Setter_0015"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="ItemState" Value="Disabled"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="ItemContentCollapse"
                        Value="$HoverForeground"
                        cs:id="Setter_0016"/>
                <Setter Property="Fill"
                        TargetName="ItemContentExpand"
                        Value="$HoverForeground"
                        cs:id="Setter_0017"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Fill"
                        TargetName="ItemContentCollapse"
                        Value="$SelectionForeground"
                        cs:id="Setter_0018"/>
                <Setter Property="Fill"
                        TargetName="ItemContentExpand"
                        Value="$SelectionForeground"
                        cs:id="Setter_0019"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="IsDefault"
                        Value="$HoverBackground"
                        cs:id="Setter_0020"/>
                <Setter Property="BorderBrush"
                        TargetName="IsDefault"
                        Value="$HoverBorder"
                        cs:id="Setter_0021"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentCollapse"
                        Value="$HoverForeground"
                        cs:id="Setter_0022"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentExpand"
                        Value="$HoverForeground"
                        cs:id="Setter_0023"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        TargetName="IsDefault"
                        Value="$SelectionBackground"
                        cs:id="Setter_0024"/>
                <Setter Property="BorderBrush"
                        TargetName="IsDefault"
                        Value="$SelectionBorder"
                        cs:id="Setter_0025"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentCollapse"
                        Value="$SelectionForeground"
                        cs:id="Setter_0026"/>
                <Setter Property="Fill"
                        TargetName="RootItemContentExpand"
                        Value="$SelectionForeground"
                        cs:id="Setter_0027"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Collapsed -->

    <ControlTemplate x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseButtonTemplate}" TargetType="ToggleButton">
        <Grid x:Name="Root"
              Background="Transparent"
              Height="{TemplateBinding Height}"
              Width="{TemplateBinding Width}"
              cs:id="Grid_0000">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Collapsed"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Expanded"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Collapsed"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Expanded"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefault"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$HoverBackground"
                                            cs:id="ColorAnimation_0000"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefault"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="$HoverBorder"
                                            cs:id="ColorAnimation_0001"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Expanded"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$HoverForeground"
                                            cs:id="ColorAnimation_0002"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Collapsed"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$HoverForeground"
                                            cs:id="ColorAnimation_0003"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefault"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$SelectionBackground"
                                            cs:id="ColorAnimation_0004"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefault"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="$SelectionBorder"
                                            cs:id="ColorAnimation_0005"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Expanded"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$SelectionForeground"
                                            cs:id="ColorAnimation_0006"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Collapsed"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="$SelectionForeground"
                                            cs:id="ColorAnimation_0007"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="IsDefault"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    cs:id="Border_0001">
                <Grid>
                    <Path x:Name="Collapsed"
                          Fill="$Foreground"
                          Opacity="0"
                          Style="{StaticResource UIShape.Left}"
                          cs:id="Path_0000"/>
                    <Path x:Name="Expanded"
                          Fill="$Foreground"
                          Opacity="0"
                          Style="{StaticResource UIShape.Right}"
                          cs:id="Path_0001"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>