<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
                    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v20.2">

    <!--END WPF-->

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <Style x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=HeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
        <!--BEGIN WPF-->
        <Setter Property="ContentTemplateSelector" Value="{Binding Path=ActualHeaderTemplateSelector}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=GroupImageStyle}" TargetType="Image">
        <Setter Property="FlowDirection" Value="LeftToRight"/>
    </Style>

    <Style x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <dxn:SelectItemCommandProvider x:Key="SelectItemCommandProvider"/>

    <DataTemplate x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=ItemTemplate}">
        <dxn:NavBarItemControl Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
                               ContentTemplate="{Binding Path=Template}"
                               ContentTemplateSelector="{Binding Path=Group.ActualItemTemplateSelector}"
                               DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"
                               Focusable="{Binding Path=Group.NavBar.View.Focusable}"
                               Style="{Binding Path=ActualVisualStyle}"
                               Template="{Binding Path=Group.NavBar.View.ItemControlTemplate}"
                               Visibility="{Binding Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=GroupItemsTemplate}">
        <dxn:NavBarItemsControl x:Name="groupItemsPresenter"
                                DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"
                                dx:FocusHelper2.Focusable="False"
                                ItemsPanel="{Binding Path=NavBar.View.ItemsPanelTemplate}"
                                ItemsSourceCore="{Binding Path=SynchronizedItems}"
                                ItemTemplate="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=ItemTemplate}}"/>
    </DataTemplate>

    <Style x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}" TargetType="Image">
        <Setter Property="Height" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).Height, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=24}"/>
        <Setter Property="Width" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).Width, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=24}"/>
        <Setter Property="Stretch" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).Stretch, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Uniform}"/>
        <!--BEGIN WPF-->
        <Setter Property="StretchDirection" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).StretchDirection, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Both}"/>
        <!--END WPF-->
        <Setter Property="FlowDirection" Value="LeftToRight"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}" TargetType="ContentControl">
        <ScrollViewer BorderThickness="0"
                      Margin="0,0,1,0"
                      Padding="0">
            <!--BEGIN WPF-->
            <dxmvvm:Interaction.Behaviors>
                <dx:ScrollViewerTouchBehavior Orientation="Vertical"/>
            </dxmvvm:Interaction.Behaviors>
            <!--END WPF-->
            <ScrollViewer.VerticalScrollBarVisibility>
                <Binding Path="NavBar.View.NavBarViewKind">
                    <Binding.Converter>
                        <dxn:NavBarViewKindToScrollBarVisibilityConverter/>
                    </Binding.Converter>
                </Binding>
            </ScrollViewer.VerticalScrollBarVisibility>
            <ContentPresenter/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:GroupScrollableContentControl x:Name="scrollableContent"
                                           Content="{TemplateBinding Content}"
                                           dx:FocusHelper2.Focusable="False"
                                           Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}">
            <dxn:GroupScrollableContentControl.AllowScrolling>
                <!--BEGIN WPF-->
                <MultiBinding>
                    <MultiBinding.Bindings>
                        <Binding Path="NavBar.View"/>
                        <Binding Path="NavBar.View.Orientation"/>
                    </MultiBinding.Bindings>
                    <MultiBinding.Converter>
                        <dxn:NavBarViewToAllowScrollingConverter/>
                    </MultiBinding.Converter>
                </MultiBinding>
                <!--END WPF-->
                <!--ONLY SL
                <Binding Path="NavBar.View" >
                    <Binding.Converter>
                        <dxn:NavBarViewToAllowScrollingConverter />
                    </Binding.Converter>
                </Binding>
                ONLY SL-->
            </dxn:GroupScrollableContentControl.AllowScrolling>
            <!--<ContentPresenter />-->
        </dxn:GroupScrollableContentControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:NavPaneScrollableContentControl x:Name="scrollableContent"
                                             dx:FocusHelper2.Focusable="False"
                                             Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}">
            <dxn:NavPaneScrollableContentControl.AllowScrolling>
                <Binding Path="NavBar.View.NavBarViewKind">
                    <Binding.Converter>
                        <dxn:NavBarViewKindToBooleanConverter/>
                    </Binding.Converter>
                </Binding>
            </dxn:NavPaneScrollableContentControl.AllowScrolling>
            <ContentPresenter/>
        </dxn:NavPaneScrollableContentControl>
    </ControlTemplate>

</ResourceDictionary>