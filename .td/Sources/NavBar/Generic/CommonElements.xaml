<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
                    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v20.2">

    <!--END WPF-->

    <DataTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemContentTemplate}">
        <dxn:ImageAndTextDecorator x:Name="itemContent"
                                   ContentSource="{Binding Path=ContextElement.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   ContentStyle="{DynamicResource {dxnt:NavBarItemControlThemeKey ResourceKey=ItemTextStyle}}"
                                   ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}"
                                   ImageSource="{Binding Path=ContextElement.ImageSource, RelativeSource={RelativeSource TemplatedParent}}"
                                   ImageStyle="{DynamicResource {dxnt:NavBarItemControlThemeKey ResourceKey=ItemImageStyle}}"
                                   Style="{DynamicResource ResourceKey={dxnt:CommonElementsThemeKey ResourceKey=ItemContentDecoratorStyle}}"/>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemTemplate}" TargetType="dxn:NavBarItemControl">
        <ContentControl x:Name="PART_Border"
                        Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{DynamicResource ResourceKey={dxnt:CommonElementsThemeKey ResourceKey=ItemBorderTemplate}}">
            <dxn:ImageAndTextContentPresenter x:Name="item"
                                              Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Converter={dxn:NavBarItemToSourceObjectConverter}}"
                                              ContentTemplate="{Binding Path=DataContext.Template, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContextElement="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}"
                                              dx:FocusHelper2.Focusable="False"
                                              HorizontalAlignment="Stretch"
                                              ImageFallbackSize="16"
                                              Style="{DynamicResource {dxnt:NavBarItemControlThemeKey ResourceKey=ItemStyle}}"
                                              VerticalAlignment="Stretch">
                <!--ONLY SL
                <dxn:ImageAndTextContentPresenter.Foreground>
                    <Binding Path="Foreground" ElementName="PART_Border"/>
                </dxn:ImageAndTextContentPresenter.Foreground>                
                <dxn:ImageAndTextContentPresenter.ContentTemplateSelector>
                    <Binding Path="ContentTemplateSelector" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                </dxn:ImageAndTextContentPresenter.ContentTemplateSelector>ONLY SL-->
            </dxn:ImageAndTextContentPresenter>
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupVisualStyle}" TargetType="ButtonBase">
        <Setter Property="dxn:NavBarViewBase.FontSettings" Value="{Binding ActualFontSettings}"/>
        <!--BEGIN WPF-->
        <Setter Property="IsManipulationEnabled" Value="False"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=GroupForegroundBrush}}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="Foreground" Value="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=GroupForegroundBrush}}"/>ONLY SL-->
        <Setter Property="dxn:NavBarViewBase.DisplayMode">
            <Setter.Value>
                <dxn:DisplayMode>ImageAndText</dxn:DisplayMode>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemVisualStyle}" TargetType="dxn:NavBarItemControl"/>

    <ItemsPanelTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemsPanelTemplate}">
        <StackPanel x:Name="itemsPanel" Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}"/>
    </ItemsPanelTemplate>

    <Style x:Key="{dxnt:CommonElementsThemeKey ResourceKey=DefaultGroupControlPresenterStyle}" TargetType="dx:XPFContentPresenter">
        <!--BEGIN WPF-->
        <Setter Property="ContentTemplate" Value="{Binding Path=ActualGroupContentTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <!--END WPF-->
    </Style>

    <DataTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupContainerTemplate}">
        <dxn:NavPaneContentPresenter x:Name="groupContainerPresenter"
                                     ActualContent="{Binding Content}"
                                     ContentTemplate="{Binding ContentTemplate}"
                                     DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"/>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:SideBarThemeKey ResourceKey=SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:GroupScrollableContentControl x:Name="scrollableContent"
                                           Content="{TemplateBinding Content}"
                                           Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}">
            <!--<ContentPresenter />-->
        </dxn:GroupScrollableContentControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:SideBarThemeKey ResourceKey=NoScrollTemplate}" TargetType="ContentControl">
        <ContentPresenter/>
    </ControlTemplate>

</ResourceDictionary>