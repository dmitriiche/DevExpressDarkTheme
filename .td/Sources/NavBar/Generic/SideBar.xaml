<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
                    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v20.2">

    <dxn:IsActiveToAnimationProgressConverter x:Key="IsActiveToAnimationProgressConverter"/>

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <!--END WPF-->

    <ControlTemplate x:Key="{dxnt:SideBarThemeKey ResourceKey=NormalScrollTemplate}" TargetType="ContentControl">
        <ScrollViewer BorderThickness="0"
                      Margin="0,0,0,0"
                      Padding="0">
            <!--BEGIN WPF-->
            <dxmvvm:Interaction.Behaviors>
                <dx:ScrollViewerTouchBehavior Orientation="Vertical"/>
            </dxmvvm:Interaction.Behaviors>
            <!--END WPF-->
            <ScrollViewer.VerticalScrollBarVisibility>
                <Binding Path="NavBar.View.NavBarViewKind">
                    <Binding.Converter>
                        <dxn:NavBarViewKindToScrollBarVisibilityConverter/>
                    </Binding.Converter>
                </Binding>
            </ScrollViewer.VerticalScrollBarVisibility>
            <ContentPresenter/>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:SideBarThemeKey ResourceKey=SideBarGroupTemplate}" TargetType="dxn:NavBarGroupControl">
        <xpf:XPFDockPanel dxn:NavBarAnimationOptions.AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical"/>
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="panel"
                                                           Storyboard.TargetProperty="xpf:XPFDockPanel.Dock">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <!--BEGIN WPF-->
                                        <Dock>Left</Dock>
                                        <!--END WPF-->
                                        <!--ONLY SL<dx:Dock>Left</dx:Dock>ONLY SL-->
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:LayoutTransformPanel x:Name="panel"
                                     Orientation="{Binding Path=NavBar.View.Orientation}"
                                     xpf:XPFDockPanel.Dock="Top">
                <dxn:SideBarHeader x:Name="groupHeader"
                                   AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}"
                                   Style="{Binding Path=ActualVisualStyle}"
                                   Template="{Binding Path=ActualGroupHeaderTemplate}">
                    <!--BEGIN WPF-->
                    <dxn:SideBarHeader.Focusable>
                        <Binding Path="NavBar.View.Focusable"/>
                    </dxn:SideBarHeader.Focusable>
                    <!--END WPF-->
                    <!--<dxcn:RoutedCommandHelper.Command>
                        <dxn:SetActiveGroupCommandProvider />
                    </dxcn:RoutedCommandHelper.Command>
                    <dxcn:RoutedCommandHelper.CommandParameter>
                        <Binding />
                    </dxcn:RoutedCommandHelper.CommandParameter>-->
                </dxn:SideBarHeader>
            </dx:LayoutTransformPanel>
            <dxn:GroupItemsContainer AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}"
                                     dx:FocusHelper2.Focusable="False"
                                     MaxHeight="{Binding Path=NavBar.View.SideBarPanel.ResidualSize.Height}"
                                     MaxWidth="{Binding Path=NavBar.View.SideBarPanel.ResidualSize.Width}">
                <dxn:SideBarLayoutTransformPanel Clockwise="True" Orientation="{Binding Path=NavBar.View.Orientation}">
                    <dx:DXExpander x:Name="PART_DXExpander"
                                   AnimationProgress="{Binding Path=IsActive, Mode=OneTime, Converter={StaticResource IsActiveToAnimationProgressConverter}}"
                                   dxn:NavBarAnimationOptions.CollapseStoryboard="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.CollapseStoryboard)}"
                                   dxn:NavBarAnimationOptions.ExpandStoryboard="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.ExpandStoryboard)}"
                                   dxn:NavBarAnimationOptions.IsAnimationEnabled="{Binding AnimateGroupExpansion}"
                                   dxn:NavBarAnimationOptions.IsExpanded="{Binding Path=IsActive}"
                                   HorizontalExpand="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.HorizontalExpand)}"
                                   StretchChild="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.StretchChild)}"
                                   VerticalExpand="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.VerticalExpand)}">
                        <dx:DXExpander.Collapsing>
                            <Binding Mode="TwoWay" Path="IsCollapsing"/>
                        </dx:DXExpander.Collapsing>
                        <dx:DXExpander.Expanding>
                            <Binding Mode="TwoWay" Path="IsExpanding"/>
                        </dx:DXExpander.Expanding>
                        <dxn:ScrollControl x:Name="scrollControl"
                                           NoScrollControlTemplate="{DynamicResource {dxnt:SideBarThemeKey ResourceKey=NoScrollTemplate}}"
                                           ScrollBarControlTemplate="{DynamicResource {dxnt:SideBarThemeKey ResourceKey=NormalScrollTemplate}}"
                                           ScrollButtonsControlTemplate="{DynamicResource {dxnt:SideBarThemeKey ResourceKey=SmoothScrollTemplate}}">
                            <!--ONLY SL<dx:BackgroundPanel.PatchForeground>True</dx:BackgroundPanel.PatchForeground>ONLY SL-->
                            <!--<dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                                <Grid  Margin="2,1,2,1">
                                    <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}" Clockwise="True">-->
                            <dx:XPFContentPresenter Name="groupHeaderContentPresenter"
                                                    Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}}"
                                                    Style="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=DefaultGroupControlPresenterStyle}}">
                                <!--ONLY SL<dx:XPFContentPresenter.ContentTemplate>
                                                <Binding Path="ActualGroupContentTemplate" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                            </dx:XPFContentPresenter.ContentTemplate>
                                            ONLY SL-->
                            </dx:XPFContentPresenter>
                            <!--</dx:LayoutTransformPanel>
                                </Grid>
                            </dx:LayoutTransformPanel>-->
                        </dxn:ScrollControl>
                    </dx:DXExpander>
                </dxn:SideBarLayoutTransformPanel>
            </dxn:GroupItemsContainer>
        </xpf:XPFDockPanel>
    </ControlTemplate>

    <Style x:Key="{dxnt:SideBarThemeKey ResourceKey=GroupControlStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="GroupItemsControlTemplate" Value="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupItemsTemplate}}"/>
        <Setter Property="GroupContentPresenterTemplate" Value="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=GroupContainerTemplate}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxnt:SideBarThemeKey ResourceKey=SideBarGroupTemplate}}"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:SideBarThemeKey ResourceKey=ViewTemplate}">
        <dxn:NavBarGroupItemsControl x:Name="Groups"
                                     ItemContainerStyle="{DynamicResource {dxnt:SideBarThemeKey ResourceKey=GroupControlStyle}}"
                                     ViewKind="SideBar">
            <!--BEGIN WPF-->
            <dxn:NavBarGroupItemsControl.DataContext>
                <Binding Path="NavBar" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
            </dxn:NavBarGroupItemsControl.DataContext>
            <!--END WPF-->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical"/>
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.HorizontalExpand)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:HorizontalExpandMode>FromRightToLeft</dx:HorizontalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.VerticalExpand)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:VerticalExpandMode>None</dx:VerticalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dxn:NavBarGroupItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <dxn:SideBarPanel ActiveGroupMinHeight="{Binding Path=View.ActiveGroupMinHeight}" Orientation="{Binding Path=View.Orientation}"/>
                </ItemsPanelTemplate>
            </dxn:NavBarGroupItemsControl.ItemsPanel>
        </dxn:NavBarGroupItemsControl>
        <!--</dxn:ScrollableContentControl>-->
    </ControlTemplate>

</ResourceDictionary>