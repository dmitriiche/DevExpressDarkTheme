<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Ribbon/VS2019Dark/UICore.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- General -->

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Border x:Name="IsDefaultBorder"
                    Background="$Border"
                    CornerRadius="36"
                    cs:id="Border_0000">
                <Border x:Name="IsDefaultBackground"
                        Background="$Button.Background"
                        CornerRadius="36"
                        Margin="3"
                        cs:id="Border_0001"/>
            </Border>
            <ContentPresenter Margin="4"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefaultBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$HoverBackground"
                                            cs:id="ColorAnimation_0000"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefaultBackground"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$HoverBackground"
                                            cs:id="ColorAnimation_0001"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefaultBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$SelectionBackground"
                                            cs:id="ColorAnimation_0002"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefaultBackground"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$SelectionBackground"
                                            cs:id="ColorAnimation_0003"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefaultBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$HoverBackground"
                                            cs:id="ColorAnimation_0004"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="IsDefaultBackground"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="$HoverBackground"
                                            cs:id="ColorAnimation_0005"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007InPopup}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="IsDefaultBorder"
                    Background="$SelectionBackground"
                    CornerRadius="36"
                    cs:id="Border_0000">
                <Border x:Name="IsDefaultBackground"
                        Background="$SelectionBackground"
                        CornerRadius="36"
                        Margin="3"
                        cs:id="Border_0001"/>
            </Border>
            <ContentPresenter Margin="4"/>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>