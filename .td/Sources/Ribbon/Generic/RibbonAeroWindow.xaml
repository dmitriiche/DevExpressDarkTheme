<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False"/>

    <DataTemplate x:Key="{dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowTemplate}">
        <Grid>
            <Grid Margin="{Binding Path=(dxr:DXRibbonWindow.AeroContentMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <dxc:DXWindowHeader Grid.Row="0" Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid>
                        <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowHeaderBorderTemplate}}"/>
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="PART_IconAndCaptionArea"
                                            Grid.Column="0"
                                            IsTabStop="False"
                                            Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowIconAndCaptionAreaStyle}}"
                                            Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="PART_Icon"
                                           Grid.Column="0"
                                           Panel.ZIndex="100"
                                           Source="{Binding Path=Icon, RelativeSource={RelativeSource AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                           Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowIconStyle}}"/>
                                    <ContentControl x:Name="PART_CaptionContainer"
                                                    Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                    Grid.Column="1"
                                                    IsHitTestVisible="False"
                                                    IsTabStop="False"
                                                    Panel.ZIndex="100"
                                                    Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowCaptionStyle}}"
                                                    Visibility="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                                </Grid>
                            </ContentControl>
                            <StackPanel Grid.Column="1"
                                        Height="{Binding Path=(dxc:DXWindow.AeroControlBoxHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                                        Margin="{Binding Path=(dxc:DXWindow.AeroControlBoxMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                                        Orientation="Horizontal"
                                        VerticalAlignment="Top"
                                        Width="{Binding Path=(dxc:DXWindow.AeroControlBoxWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"/>
                        </Grid>
                    </Grid>
                </dxc:DXWindowHeader>
                <ContentControl x:Name="PART_ContentContainer"
                                Focusable="False"
                                Grid.Row="1"
                                Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowContentStyle}}"
                                Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowContentTemplate}}">
                    <Grid>
                        <ContentControl Focusable="False"
                                        Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowBodyStyle}}"
                                        Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowBodyTemplate}}">
                            <dxc:DXWindowBackgroundPanel x:Name="PART_ContainerContent"
                                                         Background="{x:Null}"
                                                         Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                         ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                         Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"/>
                        </ContentControl>
                        <StackPanel x:Name="PART_StatusPanel" VerticalAlignment="Bottom">
                            <Border Background="{x:Null}"
                                    Height="Auto"
                                    HorizontalAlignment="Right">
                                <Thumb x:Name="PART_SizeGrip"
                                       Cursor="SizeNWSE"
                                       Height="16"
                                       HorizontalAlignment="Right"
                                       Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                       VerticalAlignment="Bottom"
                                       Width="16"/>
                            </Border>
                        </StackPanel>
                    </Grid>
                </ContentControl>
            </Grid>
            <Grid Background="{x:Null}" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentControl IsHitTestVisible="False"
                                IsTabStop="False"
                                Opacity="0"
                                Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowCaptionStyle}}"
                                Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                    <ContentPresenter Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                      ContentTemplate="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey IsVisibleInBlend=True, ResourceKey=AeroWindowCaptionTemplate}}"
                                      Grid.Column="0"
                                      Panel.ZIndex="100"/>
                </ContentControl>
                <StackPanel x:Name="stackPanel"
                            Grid.Column="1"
                            Height="{Binding Path=(dxc:DXWindow.AeroControlBoxHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                            KeyboardNavigation.TabNavigation="None"
                            Margin="{Binding Path=(dxc:DXWindow.AeroControlBoxMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                            Orientation="Horizontal"
                            VerticalAlignment="Top"
                            Width="{Binding Path=(dxc:DXWindow.AeroControlBoxWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}">
                    <Button x:Name="PART_Minimize"
                            Focusable="False"
                            Height="0"
                            Template="{x:Null}"
                            Width="0"/>
                    <Button x:Name="PART_Restore"
                            Focusable="False"
                            Height="0"
                            Template="{x:Null}"
                            Width="0"/>
                    <Button x:Name="PART_Maximize"
                            Focusable="False"
                            Height="0"
                            Template="{x:Null}"
                            Width="0"/>
                    <Button x:Name="PART_CloseButton"
                            Focusable="False"
                            Height="0"
                            Template="{x:Null}"
                            Width="0"/>
                </StackPanel>
            </Grid>
            <Control x:Name="PART_ResizeFrame"
                     Focusable="False"
                     Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}"
                     Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="Maximized">
                <Setter Property="Margin"
                        TargetName="PART_ContentContainer"
                        Value="0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Opacity"
                        TargetName="stackPanel"
                        Value="0.5"/>
                <Setter Property="Opacity"
                        TargetName="PART_IconAndCaptionArea"
                        Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>