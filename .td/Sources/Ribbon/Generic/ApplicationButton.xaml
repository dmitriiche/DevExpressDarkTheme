<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False"/>

    <dxc:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True"/>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Template}" TargetType="{x:Type dxr:RibbonApplicationButtonControl}">
        <!---->
        <dxr:RibbonCheckedBorderControl x:Name="PART_Border"
                                        AppFocusValue="{Binding Path=(dxr:RibbonNavigationManager.IsSelected), RelativeSource={RelativeSource TemplatedParent}}"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        Focusable="False"
                                        IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        IsTabStop="False"
                                        Template="{TemplateBinding ActualBorderTemplate}"
                                        UseAppFocusValue="True">
            <Grid>
                <dxc:PixelSnapper HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}">
                    <Image Source="{Binding Path=Ribbon.ActualApplicationButtonLargeIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"/>
                </dxc:PixelSnapper>
                <Grid Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <dxc:PixelSnapper Grid.Column="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                        <dxc:DXImage Margin="0,1,0,0"
                                     Source="{Binding Path=Ribbon.ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                     Stretch="None"/>
                    </dxc:PixelSnapper>
                    <Grid Grid.Column="1" Visibility="{Binding Path=Ribbon.ActualIsApplicationButtonTextVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                        <ContentControl Name="ContentControl"
                                        Content="{Binding Path=Ribbon.ApplicationButtonText, RelativeSource={RelativeSource TemplatedParent}}"
                                        IsTabStop="False"
                                        Style="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}}"/>
                    </Grid>
                </Grid>
            </Grid>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Style"
                        TargetName="ContentControl"
                        Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Style"
                        TargetName="ContentControl"
                        Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=CheckedTextStyle}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsLeftButtonPressed}" Value="True">
                <Setter Property="Style"
                        TargetName="ContentControl"
                        Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>