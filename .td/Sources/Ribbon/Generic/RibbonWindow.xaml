<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="{dxc:DynamicThemeResource Ribbon.xaml, ResourcePath=Themes, ResourcePathInTheme='Ribbon', TypeInTargetAssembly={x:Type dxr:RibbonControl}}"/>
        <dxt:ResourceDictionaryEx Source="{dxc:DynamicThemeResource RibbonControlBoxButton.xaml, ResourcePath=Themes, ResourcePathInTheme='Ribbon', TypeInTargetAssembly={x:Type dxr:RibbonControl}}"/>
    </ResourceDictionary.MergedDictionaries>

    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False"/>

    <dxc:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True"/>

    <dxc:NegativeConverter x:Key="negativeConverter"/>

    <dxr:NegativeDoubleToThicknessTopConverter x:Key="negativeDoubleToThicknessTopConverter"/>

    <ControlTemplate x:Key="DXWindowTemplate" TargetType="{x:Type dxr:DXRibbonWindow}">
        <Grid x:Name="Root_Grid" VerticalAlignment="Stretch">
            <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                <ContentPresenter x:Name="PART_RootContentPresenter"
                                  ContentTemplate="{TemplateBinding ActualWindowTemplate}"
                                  dxr:RibbonControlHelper.DisplayShowModeSelector="{TemplateBinding DisplayShowModeSelector}"
                                  dxr:RibbonControlHelper.IsAutoHide="{TemplateBinding RibbonAutoHideMode}"/>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DXWindowEmptyTemplate" TargetType="{x:Type dxc:DXWindow}">
        <Grid x:Name="Root_Grid" VerticalAlignment="Stretch">
            <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding WindowTemplate}">
                    <ContentPresenter.Content>
                        <Border/>
                    </ContentPresenter.Content>
                </ContentPresenter>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="headercustomitemspresentertemplate">
        <dxc:ThemedWindowHeaderItemsControl x:Name="PART_HeaderCustomItems" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}}"/>
    </ControlTemplate>

    <system:Boolean x:Key="True">True</system:Boolean>

    <system:Boolean x:Key="False">False</system:Boolean>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.Internal.RibbonControlBoxContainer}" TargetType="{x:Type dxri:RibbonControlBoxContainer}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="dxc:HeaderItemControl.CommonTemplateProvider" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCommonTemplateProvider}}"/>
        <Setter Property="dxc:HeaderItemControl.CloseTemplateProvider" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCloseTemplateProvider}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxri:RibbonControlBoxContainer}">
                    <ContentControl Focusable="False"
                                    Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}}"
                                    Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}}">
                        <StackPanel x:Name="stackPanel"
                                    KeyboardNavigation.TabNavigation="None"
                                    Orientation="Horizontal"
                                    UseLayoutRounding="True">
                            <dxr:RibbonShowModeSelectorItem Name="PART_ShowModeSelector" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}}"/>
                            <Control x:Name="PART_HeaderCustomItemsHost"/>
                            <StackPanel x:Name="PART_WindowButtons" Orientation="Horizontal">
                                <dxc:HeaderItemControl x:Name="PART_Minimize"
                                                       Command="{x:Static dxcn:WindowSystemCommands.MinimizeWindowCommand}"
                                                       Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self} }"
                                                       TemplateProvider="{Binding Path=(dxc:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}"/>
                                <dxc:HeaderItemControl x:Name="PART_Restore"
                                                       Command="{x:Static dxcn:WindowSystemCommands.RestoreWindowCommand}"
                                                       Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self} }"
                                                       TemplateProvider="{Binding Path=(dxc:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}"
                                                       Visibility="Collapsed"/>
                                <dxc:HeaderItemControl x:Name="PART_Maximize"
                                                       Command="{x:Static dxcn:WindowSystemCommands.MaximizeWindowCommand}"
                                                       Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self} }"
                                                       TemplateProvider="{Binding Path=(dxc:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}"
                                                       Visibility="Visible"/>
                                <dxc:HeaderItemControl x:Name="PART_CloseButton"
                                                       Command="{x:Static dxcn:WindowSystemCommands.CloseWindowCommand}"
                                                       Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self} }"
                                                       TemplateProvider="{Binding Path=(dxc:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}"/>
                            </StackPanel>
                        </StackPanel>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowCustomItems" Value="True">
                            <Setter Property="Template"
                                    TargetName="PART_HeaderCustomItemsHost"
                                    Value="{StaticResource headercustomitemspresentertemplate}"/>
                        </Trigger>
                        <Trigger Property="IsMinimizeButtonVisible" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_Minimize"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsRestoreButtonVisible" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_Restore"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMaximizeButtonVisible" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_Maximize"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsCloseButtonVisible" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_CloseButton"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="dxr:RibbonControlHelper.DisplayShowModeSelector" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_ShowModeSelector"
                                    Value="Collapsed"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxcn:DXWindowsHelper.Window).WindowState, RelativeSource={RelativeSource Self}}" Value="Maximized">
                            <Setter Property="Visibility"
                                    TargetName="PART_Restore"
                                    Value="Visible"/>
                            <Setter Property="Visibility"
                                    TargetName="PART_Maximize"
                                    Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="dxr:RibbonControlHelper.IsAutoHide" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="PART_Restore"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="PART_Maximize"
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.DXRibbonWindow}" TargetType="{x:Type dxr:DXRibbonWindow}">
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}}"/>
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowResizeBorderThickness}}"/>
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroBorderSize}}"/>
        <Setter Property="AeroWindowTemplate" Value="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowTemplate}}"/>
        <Setter Property="WindowTemplate" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerTemplate}}"/>
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}}"/>
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}}"/>
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}}"/>
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}}"/>
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}}"/>
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}}"/>
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}}"/>
        <Setter Property="Template" Value="{StaticResource DXWindowTemplate}"/>
        <Setter Property="RibbonAutoHideMode" Value="{Binding Path=ActualRibbon.AutoHideMode, RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay}"/>
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerTemplate}">
        <Grid>
            <ContentControl Focusable="False" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}}">
                <Grid>
                    <Grid Name="PART_RibbonLayout">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ContentControl Name="PART_HeaderBorder"
                                        Focusable="False"
                                        Height="{Binding Path=(dxr:DXRibbonWindow.RibbonHeaderBorderHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                        Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}"/>
                        <Grid x:Name="PART_Header" Grid.Row="0">
                            <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}"/>
                            <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentControl x:Name="PART_IconAndCaptionArea"
                                                Grid.Column="0"
                                                IsTabStop="False"
                                                Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}}">
                                    <Grid Panel.ZIndex="100">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="PART_Icon"
                                               Grid.Column="0"
                                               Source="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                               Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}}"/>
                                        <ContentControl Name="PART_Title"
                                                        Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                        Grid.Column="1"
                                                        IsHitTestVisible="False"
                                                        IsTabStop="False"
                                                        Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}"/>
                                    </Grid>
                                </ContentControl>
                                <ContentControl dxc:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCloseTemplateProvider}}"
                                                dxc:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCommonTemplateProvider}}"
                                                Focusable="False"
                                                Grid.Column="2"
                                                IsTabStop="False"
                                                Opacity="0"
                                                Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}}"
                                                Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}}">
                                    <StackPanel Orientation="Horizontal">
                                        <dxc:HeaderItemControl Style="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}"/>
                                        <dxc:HeaderItemControl Style="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}, RelativeSource={RelativeSource Self}}"/>
                                        <dxc:HeaderItemControl Style="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}"/>
                                        <dxc:HeaderItemControl Style="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderCloseButtonStyle}}"/>
                                    </StackPanel>
                                </ContentControl>
                            </Grid>
                        </Grid>
                        <ContentControl x:Name="Part_WindowContent"
                                        Focusable="False"
                                        Grid.Row="1"
                                        Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}}"
                                        Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}}">
                            <Grid>
                                <ContentControl Focusable="False"
                                                Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}}"
                                                Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}}">
                                    <dxc:DXWindowBackgroundPanel x:Name="PART_ContainerContent"
                                                                 Background="{x:Null}"
                                                                 Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                                 ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                                 Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"/>
                                </ContentControl>
                                <StackPanel x:Name="PART_StatusPanel"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom">
                                    <Border Background="{x:Null}" Height="Auto">
                                        <Thumb x:Name="PART_SizeGrip"
                                               Cursor="SizeNWSE"
                                               Height="16"
                                               HorizontalAlignment="Right"
                                               Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                               VerticalAlignment="Bottom"
                                               Width="16"/>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </ContentControl>
                    </Grid>
                    <Grid Name="PART_Buttons"
                          Background="{x:Null}"
                          KeyboardNavigation.TabNavigation="None"
                          VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl Name="PART_Caption"
                                        IsHitTestVisible="False"
                                        IsTabStop="False"
                                        Opacity="0"
                                        Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}">
                            <ContentPresenter Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                              ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}"
                                              Grid.Column="0"
                                              Panel.ZIndex="100"/>
                        </ContentControl>
                        <dxri:RibbonControlBoxContainer x:Name="PART_ControlBoxContainer" Grid.Column="2"/>
                    </Grid>
                </Grid>
            </ContentControl>
            <Control x:Name="PART_ResizeFrame"
                     Focusable="False"
                     Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}"
                     Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}"/>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="dxr:RibbonControlHelper.IsAutoHide" Value="True">
                <Setter Property="Margin"
                        TargetName="Part_WindowContent"
                        Value="0"/>
            </Trigger>
            <Trigger Property="dxc:FloatingContainer.IsActive" Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_IconAndCaptionArea"
                        Value="0.5"/>
            </Trigger>
            <Trigger Property="dxc:FloatingContainer.FloatingContainer" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Header"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_IconAndCaptionArea"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_HeaderBorder"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_Caption"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Title"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Icon"
                        Value="Collapsed"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="Minimized"/>
                    <Condition Binding="{Binding Path=ShowInTaskbar, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Width"
                        TargetName="PART_Buttons"
                        Value="{Binding Path=Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"/>
                <Setter Property="HorizontalAlignment"
                        TargetName="PART_Buttons"
                        Value="Left"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="DXWindowContainerTemplate" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <ContentControl Focusable="False" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}}">
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ContentControl Name="PART_HeaderBorder"
                                    Height="{Binding Path=(dxr:DXRibbonWindow.RibbonHeaderBorderHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}"
                                    Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}"
                                    Visibility="Collapsed"/>
                    <Grid x:Name="PART_Header"
                          dxc:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCloseTemplateProvider}}"
                          dxc:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCommonTemplateProvider}}"
                          Grid.Row="0">
                        <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}"/>
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}"/>
                        <Grid UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="PART_IconAndCaptionArea"
                                            Grid.Column="0"
                                            Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}}">
                                <Grid Panel.ZIndex="100">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="PART_Icon"
                                           Grid.Column="0"
                                           Source="{TemplateBinding Icon}"
                                           Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}}"/>
                                    <ContentControl Name="PART_Caption"
                                                    Content="{TemplateBinding Caption}"
                                                    Grid.Column="1"
                                                    IsHitTestVisible="False"
                                                    Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}"/>
                                </Grid>
                            </ContentControl>
                            <dxri:RibbonControlBoxContainer x:Name="PART_ControlBoxContainer"
                                                            Grid.Column="1"
                                                            IsCloseButtonVisible="{TemplateBinding IsCloseButtonVisible}"
                                                            IsMaximizeButtonVisible="{TemplateBinding IsMaximizeButtonVisible}"
                                                            IsMinimizeButtonVisible="{TemplateBinding IsMinimizeButtonVisible}"
                                                            IsRestoreButtonVisible="{TemplateBinding IsRestoreButtonVisible}"/>
                        </Grid>
                    </Grid>
                    <ContentControl Focusable="False"
                                    Grid.Row="1"
                                    Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}}"
                                    Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}}">
                        <Grid>
                            <ContentControl Focusable="False"
                                            Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}}"
                                            Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}}">
                                <ContentPresenter Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}"/>
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel" Visibility="Collapsed">
                                <Border Background="{x:Null}"
                                        Height="Auto"
                                        HorizontalAlignment="Right">
                                    <Thumb x:Name="PART_SizeGrip"
                                           Cursor="SizeNWSE"
                                           Height="16"
                                           HorizontalAlignment="Right"
                                           Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                           VerticalAlignment="Bottom"
                                           Width="16"/>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>
                <Grid Background="{x:Null}" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Name="PART_CaptionContainer"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}">
                        <ContentPresenter Content="{TemplateBinding Caption}"
                                          ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}"
                                          Grid.Column="0"
                                          Panel.ZIndex="100"/>
                    </ContentControl>
                </Grid>
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHeaderVisible" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Header"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_IconAndCaptionArea"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_HeaderBorder"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_CaptionContainer"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsStatusBarVisible" Value="True">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_IconAndCaptionArea"
                        Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Caption"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Icon"
                        Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DXAeroWindowContainerTemplate" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <Grid>
            <Border BorderBrush="#FF4E6166"
                    BorderThickness="1"
                    CornerRadius="4"
                    cs:id="Border_0000">
                <Border Background="#FFF0FFFF"
                        BorderBrush="#FFECF4FC"
                        BorderThickness="1"
                        CornerRadius="3"
                        cs:id="Border_0002"/>
            </Border>
            <Grid>
                <Grid Margin="{Binding Path=(dxr:DXRibbonWindow.AeroContentMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="PART_Header" Grid.Row="0">
                        <ContentControl Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowHeaderBorderTemplate}}"/>
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}"/>
                        <ContentControl x:Name="PART_IconAndCaptionArea"
                                        Grid.Column="0"
                                        Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowIconAndCaptionAreaStyle}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="PART_Icon"
                                       Grid.Column="0"
                                       Panel.ZIndex="100"
                                       Source="{TemplateBinding Icon}"
                                       Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowIconStyle}}"/>
                                <ContentControl Content="{TemplateBinding  Caption}"
                                                Grid.Column="1"
                                                IsHitTestVisible="False"
                                                Panel.ZIndex="100"
                                                Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowCaptionStyle}}"
                                                Visibility="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                            </Grid>
                        </ContentControl>
                    </Grid>
                    <ContentControl Focusable="False"
                                    Grid.Row="1"
                                    Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowContentStyle}}"
                                    Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowContentTemplate}}">
                        <Grid>
                            <ContentControl Focusable="False"
                                            Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowBodyStyle}}"
                                            Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowBodyTemplate}}">
                                <dxc:DXWindowBackgroundPanel x:Name="PART_ContainerContent" Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}"/>
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel"
                                        VerticalAlignment="Bottom"
                                        Visibility="Collapsed">
                                <Border Background="{x:Null}"
                                        Height="Auto"
                                        HorizontalAlignment="Right">
                                    <Thumb x:Name="PART_SizeGrip"
                                           Cursor="SizeNWSE"
                                           Height="16"
                                           HorizontalAlignment="Right"
                                           Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                           VerticalAlignment="Bottom"
                                           Width="16"/>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>
                <Grid Background="{x:Null}" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Name="PART_Caption"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowCaptionStyle}}">
                        <ContentPresenter Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                          ContentTemplate="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey IsVisibleInBlend=True, ResourceKey=AeroWindowCaptionTemplate}}"
                                          Grid.Column="0"
                                          Panel.ZIndex="100"/>
                    </ContentControl>
                    <ContentControl x:Name="PART_ControlBoxContainer"
                                    Grid.Column="1"
                                    IsHitTestVisible="False"
                                    Opacity="0"/>
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHeaderVisible" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Caption"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_Header"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_IconAndCaptionArea"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsStatusBarVisible" Value="True">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Visible"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_IconAndCaptionArea"
                        Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Caption"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_Icon"
                        Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.DXRibbonWindowContainer}" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <Setter Property="Template" Value="{StaticResource DXWindowContainerTemplate}"/>
        <Setter Property="AeroTemplate" Value="{StaticResource DXAeroWindowContainerTemplate}"/>
    </Style>

    <!--RibbonCommonTemplateProvider-->

    <dxc:CommonHeaderItemControlTemplateProvider x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCommonTemplateProvider}"
                                                 HeaderItemControlStyle="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}"
                                                 MaximizeGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonMaximizeButtonGlyph}}"
                                                 MinimizeGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonMinimizeButtonGlyph}}"
                                                 MouseOverBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundMouseOverState}}"
                                                 MouseOverForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundMouseOverState}}"
                                                 NormalBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundNormalState}}"
                                                 NormalForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundNormalState}}"
                                                 PressedBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundPressedState}}"
                                                 PressedForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundPressedState}}"
                                                 RestoreGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonRestoreButtonGlyph}}"/>

    <!--RibbonCloseTemplateProvider-->

    <dxc:CloseHeaderItemControlTemplateProvider x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonHeaderItemControlCloseTemplateProvider}"
                                                CloseGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonGlyph}}"
                                                HeaderItemControlStyle="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderCloseButtonStyle}}"
                                                MouseOverBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundMouseOverState}}"
                                                MouseOverForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundMouseOverState}}"
                                                NormalBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundNormalState}}"
                                                NormalForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundNormalState}}"
                                                PressedBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundPressedState}}"
                                                PressedForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundPressedState}}"/>

</ResourceDictionary>