<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxct="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="{dxrt:RibbonAutoHideThemeKey ResourceKey=Template}" TargetType="{x:Type dxri:RibbonAutoHideControl}">
        <Grid Name="Root">
            <dxr:ShowAutoHidePopupButton x:Name="PART_ShowAutoHidePopupButton"
                                         Focusable="False"
                                         IsChecked="{Binding IsRibbonShown, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                         Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonStyle}}"
                                         Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}}"
                                         VerticalAlignment="Bottom"
                                         Visibility="Collapsed"/>
            <dxr:RibbonAutoHidePopup x:Name="PART_RibbonAutoHidePopup"
                                     IsOpen="{Binding IsChecked, ElementName=PART_ShowAutoHidePopupButton, Mode=TwoWay}"
                                     PlacementTarget="{Binding ElementName=Root}"
                                     Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonAutoHidePopupStyle}}"
                                     Width="{TemplateBinding ActualWidth}"/>
            <ContentControl Name="PART_ContainerControl"
                            Focusable="False"
                            IsTabStop="False">
                <ContentPresenter Name="PART_ContentPresenter"/>
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsAutoHideActive" Value="True">
                <Setter Property="Visibility"
                        TargetName="PART_ShowAutoHidePopupButton"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_ContainerControl"
                        Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonAutoHidePopupStyle}" TargetType="{x:Type dxr:RibbonAutoHidePopup}">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="PopupAnimation" Value="Slide"/>
        <Setter Property="Placement" Value="Relative"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

</ResourceDictionary>