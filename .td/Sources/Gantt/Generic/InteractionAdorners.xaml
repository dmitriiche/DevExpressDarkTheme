<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxgn="http://schemas.devexpress.com/winfx/2008/xaml/gantt"
                    xmlns:dxgni="http://schemas.devexpress.com/winfx/2008/xaml/gantt/internal"
                    xmlns:dxgnt="http://schemas.devexpress.com/winfx/2008/xaml/gantt/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TaskEventTargetStyle" TargetType="{x:Type dxgni:EventsTarget}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowInputConnectorThumb}" Value="None">
                <Setter Property="IsHitTestVisible" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.Native.GanttTaskInteractionAdornerControl}" TargetType="{x:Type dxgni:GanttTaskInteractionAdornerControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Node.TaskKind}" Value="Milestone">
                <DataTrigger.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type dxgni:GanttTaskInteractionAdornerControl}">
                                <Grid>
                                    <dxgni:GanttConnectorInteractionAdornerControl/>
                                    <dxgni:EventsTarget Style="{StaticResource TaskEventTargetStyle}"/>
                                    <dxgni:GanttTaskDragThumb Cursor="{Binding Path=(dxgn:GanttControl.ActiveView).Cursors.Move, RelativeSource={RelativeSource Self}}"
                                                              IsHitTestVisible="{Binding ShowStartDateThumb}"
                                                              Margin="-1"
                                                              ThumbKind="{x:Static dxgni:TaskEditKind.StartDate}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger.Setters>
            </DataTrigger>
            <DataTrigger Binding="{Binding Node}" Value="{x:Null}">
                <DataTrigger.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type dxgni:GanttTaskInteractionAdornerControl}">
                                <Grid>
                                    <dxgni:EventsTarget/>
                                    <dxgni:GanttTaskDragThumb Cursor="{Binding Path=(dxgn:GanttControl.ActiveView).Cursors.NewTask, RelativeSource={RelativeSource Self}}"
                                                              IsHitTestVisible="{Binding ShowNewTaskThumb}"
                                                              ThumbKind="{x:Static dxgni:TaskEditKind.NewTask}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgni:GanttTaskInteractionAdornerControl}">
                    <Grid>
                        <dxgni:GanttConnectorInteractionAdornerControl/>
                        <dxgni:EventsTarget Margin="0, -2" Style="{StaticResource TaskEventTargetStyle}"/>
                        <dxgni:GanttDragThumbPanel Margin="0, -2" Progress="{Binding Node.Progress}">
                            <dxgni:GanttTaskDragThumb Cursor="{Binding Path=(dxgn:GanttControl.ActiveView).Cursors.Move, RelativeSource={RelativeSource Self}}"
                                                      IsHitTestVisible="{Binding ShowStartDateThumb}"
                                                      Margin="-5,0,0,0"
                                                      ThumbKind="{x:Static dxgni:TaskEditKind.StartDate}"/>
                            <dxgni:GanttTaskDragThumb Cursor="{Binding Path=(dxgn:GanttControl.ActiveView).Cursors.Resize, RelativeSource={RelativeSource Self}}"
                                                      HorizontalAlignment="Right"
                                                      IsHitTestVisible="{Binding ShowDurationThumb}"
                                                      Margin="0,0,-5,0"
                                                      ThumbKind="{x:Static dxgni:TaskEditKind.Duration}"
                                                      Width="7"/>
                            <dxgni:GanttTaskDragThumb Cursor="{Binding Path=(dxgn:GanttControl.ActiveView).Cursors.Progress, RelativeSource={RelativeSource Self}}"
                                                      dxgni:GanttDragThumbPanel.IsProgressThumb="True"
                                                      IsHitTestVisible="{Binding ShowProgressThumb}"
                                                      ThumbKind="{x:Static dxgni:TaskEditKind.Progress}"
                                                      Width="6"/>
                        </dxgni:GanttDragThumbPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.Native.OutputConnectorDragThumb}" TargetType="{x:Type dxgni:OutputConnectorDragThumb}">
        <Setter Property="Background" Value="{DynamicResource {dxgnt:GanttControlThemeKeys ResourceKey=RowBackground}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsStrokeThickness}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=TaskProgressBrush}}"/>
        <Setter Property="Cursor" Value="{Binding Path=(dxgn:GanttControl.ActiveView).Cursors.BeginConnector, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgni:OutputConnectorDragThumb}">
                    <Ellipse x:Name="Ellipse"
                             Fill="{TemplateBinding Background}"
                             Stroke="{TemplateBinding BorderBrush}"
                             StrokeThickness="{Binding BorderThickness.Left, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Ellipse.Style>
                            <Style x:Key="{x:Type Ellipse}" TargetType="{x:Type Ellipse}">
                                <Setter Property="Width" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsSize}}"/>
                                <Setter Property="Height" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsSize}}"/>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="Width" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsSizeTouch}}"/>
                                        <Setter Property="Height" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsSizeTouch}}"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                        <Setter Property="Width" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorHighlightedThumbsSize}}"/>
                                        <Setter Property="Height" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorHighlightedThumbsSize}}"/>
                                        <Setter Property="Margin" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorHighlightedThumbsMargin}}"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True"/>
                                            <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Width" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorHighlightedThumbsSizeTouch}}"/>
                                        <Setter Property="Height" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorHighlightedThumbsSizeTouch}}"/>
                                        <Setter Property="Margin" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorHighlightedThumbsMarginTouch}}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsStrokeThicknessTouch}}"/>
            </Trigger>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgnt:GanttItemsThemeKeys ResourceKey=TaskProgressBrush}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.Native.GanttConnectorInteractionAdornerControl}" TargetType="{x:Type dxgni:GanttConnectorInteractionAdornerControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgni:GanttConnectorInteractionAdornerControl}">
                    <Grid>
                        <Grid x:Name="PART_OutputThumbs"
                              Background="Transparent"
                              IsHitTestVisible="{Binding IsHitTestableThumbs}"
                              cs:id="Grid_0000">
                            <Grid.Style>
                                <Style x:Key="{x:Type Grid}" TargetType="{x:Type Grid}">
                                    <Setter Property="Margin" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsMargin}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                            <Setter Property="Margin" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=ConnectorThumbsMarginTouch}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <dxgni:OutputConnectorDragThumb HorizontalAlignment="Right"
                                                            IsActive="{Binding ActiveConnectorThumb, Converter={dxgni:ActiveConnectorThumbConverter PointType=End}}"
                                                            ThumbKind="End"
                                                            VerticalAlignment="Center"
                                                            Visibility="{Binding ShowOutputConnectorThumb, Converter={dxgni:ConnectorThumbVisibilityConverter ThumbKind=Finish}}"/>
                            <dxgni:OutputConnectorDragThumb HorizontalAlignment="Left"
                                                            IsActive="{Binding ActiveConnectorThumb, Converter={dxgni:ActiveConnectorThumbConverter PointType=Begin}}"
                                                            ThumbKind="Begin"
                                                            VerticalAlignment="Center"
                                                            Visibility="{Binding ShowOutputConnectorThumb, Converter={dxgni:ConnectorThumbVisibilityConverter ThumbKind=Start}}"/>
                        </Grid>
                        <Grid x:Name="PART_InputThumbs">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <dxgni:InputConnectorDragThumb ThumbKind="Begin" Visibility="{Binding ShowInputConnectorThumb, Converter={dxgni:ConnectorThumbVisibilityConverter ThumbKind=Start}}"/>
                            <dxgni:InputConnectorDragThumb Grid.Column="1"
                                                           ThumbKind="End"
                                                           Visibility="{Binding ShowInputConnectorThumb, Converter={dxgni:ConnectorThumbVisibilityConverter ThumbKind=Finish}}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.Native.GanttConnectorEditStateControl}" TargetType="{x:Type dxgni:GanttConnectorEditStateControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgni:GanttConnectorEditStateControl}">
                    <dxgni:OutputConnectorDragThumb IsActive="True" IsHitTestVisible="False"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>