<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxgn="http://schemas.devexpress.com/winfx/2008/xaml/gantt"
                    xmlns:dxgni="http://schemas.devexpress.com/winfx/2008/xaml/gantt/internal"
                    xmlns:dxgnt="http://schemas.devexpress.com/winfx/2008/xaml/gantt/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttTaskControl}" TargetType="{x:Type dxgn:GanttTaskControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskBrush}}"/>
        <Setter Property="ProgressBackground" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskProgressBrush}}"/>
        <Setter Property="dxgn:GanttConnector.IsAttachmentTarget" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgn:GanttTaskControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.Style>
                            <Style x:Key="{x:Type Border}" TargetType="{x:Type Border}">
                                <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskHeight}}"/>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskHeightTouch}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <dxgn:GanttProgressPanel Progress="{Binding Node.Progress}" Visibility="{Binding IsEditing, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
                            <Border Background="{TemplateBinding ProgressBackground}" CornerRadius="{TemplateBinding CornerRadius}"/>
                        </dxgn:GanttProgressPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Node.IsCritical}" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskCriticalPathBrush}}"/>
                <Setter Property="ProgressBackground" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskCriticalPathProgressBrush}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttSummaryTaskControl}" TargetType="{x:Type dxgn:GanttSummaryTaskControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBrush}}"/>
        <Setter Property="ProgressBackground" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskProgressBrush}}"/>
        <Setter Property="BracketThickness" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketThickness}}"/>
        <Setter Property="BracketBrush" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketBrush}}"/>
        <Setter Property="BracketHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketHeight}}"/>
        <Setter Property="BracketIndent" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketIndent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgn:GanttSummaryTaskControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                dxgn:GanttConnector.IsAttachmentTarget="True">
                            <Border.Style>
                                <Style x:Key="{x:Type Border}" TargetType="{x:Type Border}">
                                    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskHeight}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                            <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskHeightTouch}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <dxgn:GanttProgressPanel Progress="{Binding Node.Progress}" Visibility="{Binding IsEditing, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
                                <Border Background="{TemplateBinding ProgressBackground}" CornerRadius="{TemplateBinding CornerRadius}"/>
                            </dxgn:GanttProgressPanel>
                        </Border>
                        <dxgni:GanttSummaryTaskBracketBorder BorderBrush="{TemplateBinding BracketBrush}"
                                                             BorderThickness="{TemplateBinding BracketThickness}"
                                                             EnableDPICorrection="True"
                                                             Grid.Row="1"
                                                             Height="{TemplateBinding BracketHeight}"
                                                             Margin="{TemplateBinding BracketIndent}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="BracketThickness" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketThicknessTouch}}"/>
                <Setter Property="BracketHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketHeightTouch}}"/>
                <Setter Property="BracketIndent" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBracketIndentTouch}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MilestoneStyle" TargetType="{x:Type dxgn:GanttMilestoneControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgn:GanttMilestoneControl}">
                    <Path Data="M0,7.5L7.5,0 15,7.5 7.5,15z"
                          Fill="{TemplateBinding Background}"
                          Stretch="Fill"
                          Stroke="{TemplateBinding BorderBrush}"
                          StrokeThickness="{Binding Path=BorderThickness.Left, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Path.Style>
                            <Style x:Key="{x:Type Path}" TargetType="{x:Type Path}">
                                <Setter Property="Width" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneSize}}"/>
                                <Setter Property="Height" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneSize}}"/>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="Width" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneSizeTouch}}"/>
                                        <Setter Property="Height" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneSizeTouch}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttMilestoneControl}"
           BasedOn="{StaticResource MilestoneStyle}"
           TargetType="{x:Type dxgn:GanttMilestoneControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneBrush}}"/>
        <Setter Property="dxgn:GanttConnector.IsAttachmentTarget" Value="True"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEditing}" Value="True">
                <Setter Property="Opacity" Value="0.52"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Node.IsCritical}" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneCriticalPathBrush}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttTaskBaselineControl}" TargetType="{x:Type dxgn:GanttTaskBaselineControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=TaskBaselineBrush}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgn:GanttTaskBaselineControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style x:Key="{x:Type Border}" TargetType="{x:Type Border}">
                                <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=BaselineHeight}}"/>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=BaselineHeightTouch}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttSummaryTaskBaselineControl}" TargetType="{x:Type dxgn:GanttSummaryTaskBaselineControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=SummaryTaskBaselineBrush}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgn:GanttSummaryTaskBaselineControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Style>
                            <Style x:Key="{x:Type Border}" TargetType="{x:Type Border}">
                                <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=BaselineHeight}}"/>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=BaselineHeightTouch}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttMilestoneBaselineControl}"
           BasedOn="{StaticResource MilestoneStyle}"
           TargetType="{x:Type dxgn:GanttMilestoneBaselineControl}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneBaselineBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneBaselineBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneBaselineBorderThickness}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={dxgnt:GanttItemsThemeKeys ResourceKey=MilestoneBaselineBorderThicknessTouch}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Gantt.GanttResourceControl}" TargetType="{x:Type dxgn:GanttResourceControl}">
        <Setter Property="RowBackground" Value="{DynamicResource {dxgnt:GanttControlThemeKeys ResourceKey=RowBackground}}"/>
        <Setter Property="ResourceColor" Value="{Binding ResourceData.Color}"/>
        <Setter Property="Background" Value="{Binding ResourceBackground, RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="Foreground" Value="{Binding ResourceForeground, RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="BorderBrush" Value="{Binding ResourceBorderBrush, RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="3,0,3,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgn:GanttResourceControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                            <TextBlock Text="{Binding ResourceData.Name, Mode=OneWay}"/>
                            <TextBlock x:Name="PART_Allocation" Text="{Binding AllocationPercentage, Mode=OneWay, StringFormat={} ({0:p0})}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding AllocationPercentage, Mode=OneWay}" Value="1">
                            <Setter Property="Visibility"
                                    TargetName="PART_Allocation"
                                    Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoaded}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>