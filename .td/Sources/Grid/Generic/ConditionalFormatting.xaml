<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:conditionalFormattingManager="clr-namespace:DevExpress.Xpf.Core.ConditionalFormattingManager;assembly=DevExpress.Xpf.Core.v20.2"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgc="clr-namespace:DevExpress.Xpf.Grid.Native;assembly=DevExpress.Xpf.Grid.v20.2.Core"
                    xmlns:dxgn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Grid.v20.2.Core"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DataTemplate x:Key="EmptyFormatTemplate">
        <TextBlock HorizontalAlignment="Center"
                   Text="{dx:DataControlStringId ConditionalFormatting_Manager_NoFormatSet}"
                   VerticalAlignment="Center"/>
    </DataTemplate>

    <ControlTemplate x:Key="SimpleFormatContainerTemplate" TargetType="{x:Type ContentControl}">
        <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}"
                BorderThickness="1"
                CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}"
                Padding="{Binding Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}">
            <ContentPresenter/>
        </Border>
    </ControlTemplate>

    <DataTemplate x:Key="SimpleFormatContentTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock HorizontalAlignment="Center"
                       Text="{Binding PreviewString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}"
                       TextDecorations="{Binding TextDecorations}"
                       VerticalAlignment="Center"/>
            <dx:DXImage HorizontalAlignment="Center"
                        Margin="1,0,0,0"
                        Source="{Binding Icon}"
                        Stretch="None"
                        Visibility="{Binding Icon, Converter={dx:NullableToVisibilityConverter}}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SimpleFormatTemplate">
        <ContentControl Content="{Binding}"
                        ContentTemplate="{Binding SimpleFormatTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}"
                        Template="{StaticResource SimpleFormatContainerTemplate}"/>
    </DataTemplate>

    <DataTemplate x:Key="IconSetFormatTemplate">
        <ItemsControl ItemsSource="{Binding Icons}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <dx:DXImage HorizontalAlignment="Center"
                                Margin="1"
                                Source="{Binding}"
                                Stretch="None"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="ColorScaleFormatTemplate">
        <Rectangle Fill="{Binding Converter={dxgc:ColorScalePreviewConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="DataBarFormatTemplate">
        <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}"
                BorderThickness="1"
                Padding="2,2,20,2">
            <Rectangle Fill="{Binding Fill}" Stroke="{Binding BorderBrush}"/>
        </Border>
    </DataTemplate>

    <dxgn:DebugConverter x:Key="DebugConverter"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FormatPreviewControl}"
           BasedOn="{StaticResource {x:Type ContentControl}}"
           TargetType="{x:Type dxg:FormatPreviewControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}"/>
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
        <Setter Property="Format" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={StaticResource DebugConverter}}"/>
        <Setter Property="EmptyFormatTemplate" Value="{StaticResource EmptyFormatTemplate}"/>
        <Setter Property="SimpleFormatTemplate" Value="{StaticResource SimpleFormatContentTemplate}"/>
        <Setter Property="IconSetFormatTemplate" Value="{StaticResource IconSetFormatTemplate}"/>
        <Setter Property="ColorScaleFormatTemplate" Value="{StaticResource ColorScaleFormatTemplate}"/>
        <Setter Property="DataBarFormatTemplate" Value="{StaticResource DataBarFormatTemplate}"/>
        <Setter Property="PreviewString" Value="AaBbCcYyZz"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:FormatPreviewControl}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="FormatType" Value="{x:Null}">
                <Setter Property="ContentTemplate" Value="{Binding EmptyFormatTemplate, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:Format}">
                <Setter Property="ContentTemplate" Value="{StaticResource SimpleFormatTemplate}"/>
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type conditionalFormattingManager:IconFormatStyle}">
                <Setter Property="ContentTemplate" Value="{Binding IconSetFormatTemplate, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:ColorScaleFormat}">
                <Setter Property="ContentTemplate" Value="{Binding ColorScaleFormatTemplate, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:DataBarFormat}">
                <Setter Property="ContentTemplate" Value="{Binding DataBarFormatTemplate, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>