<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxep="clr-namespace:DevExpress.Xpf.Editors.Popups;assembly=DevExpress.Xpf.Core.v20.2"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxfui_local="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
                    xmlns:dxfui_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal"
                    xmlns:dxfui_themes="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.Native.FilteringPanelFilterPresenter}" TargetType="{x:Type dxfui_native:FilteringPanelFilterPresenter}">
        <Setter Property="Margin" Value="2,1"/>
        <Setter Property="TextBlock.FontSize" Value="11"/>
        <Setter Property="ExtraPadding" Value="0,3"/>
        <Setter Property="AddExtraPaddingIfHeightLesserThan" Value="26"/>
    </Style>

    <Style x:Key="{dxfui_themes:FilteringPanelThemeKey ResourceKey=ToolbarButton}" TargetType="ButtonBase">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBackground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBackground}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ButtonSvgPalette}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlButtonsBorderBrushHover}}"/>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlButtonsBackgroundHover}}"/>
                            <Setter Property="dx:SvgImageHelper.State" Value="Hover"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlButtonsBackgroundPressed}}"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlButtonsBorderBrushPressed}}"/>
                            <Setter Property="dx:SvgImageHelper.State" Value="Pressed"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlButtonsBackgroundPressed}}"/>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlButtonsBorderBrushPressed}}"/>
                            <Setter Property="dx:SvgImageHelper.State" Value="Pressed"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin" Value="0,8,0,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlStyle}" TargetType="{x:Type dxfui_local:FilteringPanelControl}">
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="AllowDisableFilter" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBackground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBorderBrush}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilteringPanelControl}" TargetType="{x:Type dxfui_local:FilteringPanelControl}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local:FilteringPanelControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Width="{TemplateBinding Indent}"/>
                            <dxe:CheckEdit x:Name="cbFilterEnable"
                                           AutomationProperties.Name="FilterEnable"
                                           Content="{TemplateBinding Caption}"
                                           EditValue="{Binding IsFilterEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                                           Grid.Column="1"
                                           Margin="8,5"
                                           VerticalAlignment="Top"/>
                            <dxfui_native:FilteringPanelFilterPresenter x:Name="filteringPanelFilterPresenter"
                                                                        AllowDeleteColumnFilters="{TemplateBinding AllowDeleteColumnFilters}"
                                                                        Filter="{TemplateBinding Filter}"
                                                                        Grid.Column="2"
                                                                        MaxLineCount="{TemplateBinding ActualMaxLineCount}"/>
                            <Border x:Name="borderFade"
                                    Background="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBackground}}"
                                    Focusable="False"
                                    Grid.Column="2"
                                    HorizontalAlignment="Right"
                                    IsHitTestVisible="False"
                                    VerticalAlignment="Stretch"
                                    Width="40">
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="1,0"
                                                         StartPoint="0,0"
                                                         cs:id="LinearGradientBrush_0000">
                                        <GradientStop Color="Transparent"
                                                      Offset="0"
                                                      cs:id="GradientStop_0000"/>
                                        <GradientStop Color="White"
                                                      Offset="1"
                                                      cs:id="GradientStop_0001"/>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                            </Border>
                            <Border x:Name="borderButtonExpand"
                                    Background="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBackground}}"
                                    Grid.Column="3"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch">
                                <Button x:Name="buttonExpand"
                                        AutomationProperties.Name="ExpandFilterPanel"
                                        Command="{TemplateBinding ExpandCommand}"
                                        Style="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ToolbarButton}}"
                                        ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelExpand, Converter={StaticResource EditorStringIdConverter}}">
                                    <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v20.2;component/FilteringUI/FilteringPanel/Images/Expand.svg" Stretch="None"/>
                                </Button>
                            </Border>
                            <Button x:Name="buttonCollapse"
                                    AutomationProperties.Name="CollapseFilterPanel"
                                    Command="{TemplateBinding CollapseCommand}"
                                    Grid.Column="3"
                                    Style="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ToolbarButton}}"
                                    ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelCollapse, Converter={StaticResource EditorStringIdConverter}}">
                                <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v20.2;component/FilteringUI/FilteringPanel/Images/Collapse.svg" Stretch="None"/>
                            </Button>
                            <Grid x:Name="mru" Grid.Column="4">
                                <dxe:ComboBoxEdit x:Name="PART_MRUList"
                                                  Height="30"
                                                  IsHitTestVisible="False"
                                                  IsTextEditable="False"
                                                  ItemsSource="{Binding MRUFilters, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Opacity="0"
                                                  ShowBorder="False"
                                                  Width="30">
                                    <dxe:ComboBoxEdit.ItemTemplate>
                                        <DataTemplate>
                                            <dxfui_native:FilteringPanelFilterPresenter Filter="{Binding}"/>
                                        </DataTemplate>
                                    </dxe:ComboBoxEdit.ItemTemplate>
                                    <dxe:ComboBoxEdit.Resources>
                                        <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                                        <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=Template, IsThemeIndependent=True}" TargetType="{x:Type dxep:EditorListBox}">
                                            <Border x:Name="Bd" Background="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ControlBackground}}">
                                                <Grid>
                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                  BorderThickness="0"
                                                                  dx:FocusHelper2.Focusable="False"
                                                                  Padding="{TemplateBinding Padding}">
                                                        <ItemsPresenter/>
                                                        <dx:ScrollBarExtensions.AllowMouseScrolling>
                                                            <system:Boolean>true</system:Boolean>
                                                        </dx:ScrollBarExtensions.AllowMouseScrolling>
                                                    </ScrollViewer>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate, IsThemeIndependent=True}" TargetType="{x:Type dxe:ListBoxEditItem}">
                                            <Grid x:Name="Root" Background="{TemplateBinding Background}">
                                                <Border x:Name="SelectedState"
                                                        Background="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=PopupElementPressedBackground}}"
                                                        Opacity="0"/>
                                                <Border x:Name="HoverState"
                                                        Background="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=PopupElementHoverBackground}}"
                                                        Opacity="0"
                                                        Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           LastChildFill="True"
                                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <dxei:ImagePresenter DockPanel.Dock="Left" Padding="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemImagePadding}}"/>
                                                    <dx:ContentContainer x:Name="content" Margin="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemContentPadding}}">
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          Height="Auto"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                          Width="Auto"/>
                                                    </dx:ContentContainer>
                                                </DockPanel>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Opacity"
                                                            TargetName="SelectedState"
                                                            Value="1"/>
                                                    <Setter Property="Opacity"
                                                            TargetName="HoverState"
                                                            Value="0"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsFocused" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Opacity"
                                                            TargetName="SelectedState"
                                                            Value="0"/>
                                                    <Setter Property="Opacity"
                                                            TargetName="HoverState"
                                                            Value="1"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity"
                                                            TargetName="content"
                                                            Value="0.35"/>
                                                </Trigger>
                                                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                    <Setter Property="Margin"
                                                            TargetName="content"
                                                            Value="12"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </dxe:ComboBoxEdit.Resources>
                                </dxe:ComboBoxEdit>
                                <ToggleButton x:Name="buttonMRU"
                                              AutomationProperties.Name="MRUFilterList"
                                              IsChecked="{Binding IsPopupOpen, ElementName=PART_MRUList}"
                                              Style="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ToolbarButton}}"
                                              ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelMRU, Converter={StaticResource EditorStringIdConverter}}">
                                    <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v20.2;component/FilteringUI/FilteringPanel/Images/MRU.svg" Stretch="None"/>
                                </ToggleButton>
                            </Grid>
                            <Button x:Name="buttonEditFilter"
                                    AutomationProperties.Name="EditFilter"
                                    Command="{TemplateBinding ShowFilterEditorCommand}"
                                    Grid.Column="5"
                                    Style="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ToolbarButton}}"
                                    ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelEditFilter, Converter={StaticResource EditorStringIdConverter}}">
                                <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v20.2;component/FilteringUI/FilteringPanel/Images/Edit.svg" Stretch="None"/>
                            </Button>
                            <Button x:Name="buttonClearFilter"
                                    AutomationProperties.Name="ClearFilter"
                                    Command="{TemplateBinding ClearFilterCommand}"
                                    Grid.Column="6"
                                    Style="{DynamicResource {dxfui_themes:FilteringPanelThemeKey ResourceKey=ToolbarButton}}"
                                    ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelClearFilter, Converter={StaticResource EditorStringIdConverter}}">
                                <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v20.2;component/FilteringUI/FilteringPanel/Images/Close.svg" Stretch="None"/>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsTrimmed, ElementName=filteringPanelFilterPresenter}" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="borderButtonExpand"
                                    Value="Visible"/>
                            <Setter Property="Visibility"
                                    TargetName="borderFade"
                                    Value="Visible"/>
                            <Setter Property="Grid.ColumnSpan"
                                    TargetName="filteringPanelFilterPresenter"
                                    Value="2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTrimmed, ElementName=filteringPanelFilterPresenter}" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="borderButtonExpand"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="borderFade"
                                    Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActualLineCount, ElementName=filteringPanelFilterPresenter}" Value="0">
                            <Setter Property="Visibility"
                                    TargetName="buttonCollapse"
                                    Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActualLineCount, ElementName=filteringPanelFilterPresenter}" Value="1">
                            <Setter Property="Visibility"
                                    TargetName="buttonCollapse"
                                    Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=cbFilterEnable}" Value="True">
                            <Setter Property="ToolTip"
                                    TargetName="cbFilterEnable"
                                    Value="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelDisableFilter, Converter={StaticResource EditorStringIdConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=cbFilterEnable}" Value="False">
                            <Setter Property="ToolTip"
                                    TargetName="cbFilterEnable"
                                    Value="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelEnableFilter, Converter={StaticResource EditorStringIdConverter}}"/>
                        </DataTrigger>
                        <Trigger Property="Filter" Value="{x:Null}">
                            <Setter Property="Visibility"
                                    TargetName="cbFilterEnable"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMRUListEmpty" Value="true">
                            <Setter Property="Visibility"
                                    TargetName="mru"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="AllowChangeExpandState" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="borderButtonExpand"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="buttonCollapse"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="AllowMRU" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="mru"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="AllowEditFilter" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="buttonEditFilter"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="AllowDisableFilter" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="cbFilterEnable"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="AllowClearFilter" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="buttonClearFilter"
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>