<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
                    xmlns:dxfui_local="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
                    xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal"
                    xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="{dx:GridResource Themes/Generic/FilteringUI/FilterEditor.xaml}"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CountTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.ValueCountContentControl}" TargetType="{x:Type dxfui_local:ValueCountContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local:ValueCountContentControl}">
                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter/>
                        <TextBlock x:Name="PART_Count"
                                   Grid.Column="1"
                                   Style="{StaticResource CountTextBlockStyle}"
                                   Text="{Binding Count, StringFormat=({0}), RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="{DXBinding '@p.ShowCount and @p.Count != null', Converter={dx:BooleanToVisibilityConverter}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FilterValueContainerTemplate">
        <dxfui_local:ValueCountContentControl Count="{Binding Count}">
            <dxfui_local:ValueEditorContainer EditSettingsLazy="{Binding EditSettingsLazy}"
                                              GetDisplayText="{Binding GetDisplayText}"
                                              Value="{Binding Value}"/>
        </dxfui_local:ValueCountContentControl>
    </DataTemplate>

    <ControlTemplate x:Key="FilterValueContainerTopAreaTemplate">
        <Border Background="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBackground}}"
                BorderBrush="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBorderColor}}"
                BorderThickness="0,0,0,1"
                DataContext="{Binding FilterModel, RelativeSource={RelativeSource AncestorType={x:Type dxfui_local:FilterValueEditor}}}"
                Visibility="{DXBinding Expr='FilterValuesSortModes.Count gt 1 and FilterValues.Count gt 0 ? `Visible` : `Collapsed`'}">
            <Border.Resources>
                <dxmvvm:ObjectToObjectConverter x:Key="FilterValuesSortModesConverter" DefaultSource="{x:Null}">
                    <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModeNoSort}">
                        <dxmvvm:MapItem.Source>
                            <dxfui_local:FilterValuesSortMode>NoSort</dxfui_local:FilterValuesSortMode>
                        </dxmvvm:MapItem.Source>
                    </dxmvvm:MapItem>
                    <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModeAvailableFirst}">
                        <dxmvvm:MapItem.Source>
                            <dxfui_local:FilterValuesSortMode>AvailableFirst</dxfui_local:FilterValuesSortMode>
                        </dxmvvm:MapItem.Source>
                    </dxmvvm:MapItem>
                    <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModePopularFirst}">
                        <dxmvvm:MapItem.Source>
                            <dxfui_local:FilterValuesSortMode>PopularFirst</dxfui_local:FilterValuesSortMode>
                        </dxmvvm:MapItem.Source>
                    </dxmvvm:MapItem>
                </dxmvvm:ObjectToObjectConverter>
            </Border.Resources>
            <dxe:HyperlinkEdit x:Name="PART_FilterValuesSortMode"
                               Focusable="False"
                               Margin="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaMargin}}"
                               Text="{Binding Path=FilterValuesSortMode, Mode=OneWay, Converter={StaticResource ResourceKey=FilterValuesSortModesConverter}}"
                               ToolTipService.IsEnabled="False">
                <dxmvvm:Interaction.Behaviors>
                    <dxfui_local_native:HyperlinkToogleBehavior ItemsSource="{Binding FilterValuesSortModes, Mode=OneWay }" SelectedItem="{Binding FilterValuesSortMode, Mode=TwoWay }"/>
                </dxmvvm:Interaction.Behaviors>
            </dxe:HyperlinkEdit>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin"
                        TargetName="PART_FilterValuesSortMode"
                        Value="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaMarginTouch}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DateCalendarImageStyle" TargetType="{x:Type dx:DXImage}">
        <Setter Property="Margin" Value="2,1,1,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="16,1,17,0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DateCalendarButtonTemplate">
        <dx:DXImage Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Grid.v20.2;component/Images/CalendarDate.svg'}" Style="{StaticResource DateCalendarImageStyle}"/>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterValueEditor}" TargetType="{x:Type dxfui_local:FilterValueEditor}">
        <Setter Property="UniqueValueTemplate" Value="{StaticResource FilterValueContainerTemplate}"/>
        <Setter Property="PopupTopAreaTemplate" Value="{StaticResource FilterValueContainerTopAreaTemplate}"/>
        <Setter Property="DateCalendarButtonTemplate" Value="{StaticResource DateCalendarButtonTemplate}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.LoadingIndicatorControl}" TargetType="{x:Type dxfui_local:LoadingIndicatorControl}">
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxfui_local:LoadingIndicatorControl">
                    <Grid>
                        <ContentPresenter ContentSource="Content"/>
                        <dxfui_local:FilteringUIWaitIndicator Height="32"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Visibility="{TemplateBinding IsLoading, Converter={dx:BooleanToVisibilityConverter}}"
                                                              Width="32"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="filterElementStyle" TargetType="dxfui_local:FilterElement">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxfui_local:FilterElement">
                    <dxfui_local:FilterElementContentPresenter ContentSource="FilterModel"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxHeight" Value="750"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsEnabled" Value="{Binding Path=FilterModel.CanBuildFilter, RelativeSource={RelativeSource Mode=Self}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CheckBoxFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="dxfui_local:CheckBoxFilterElement">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate DataType="dxfui:CheckBoxFilterModel">
                    <CheckBox Content="{Binding FieldDisplayName}"
                              IsChecked="{Binding Value}"
                              IsThreeState="True"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.RadioListFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="dxfui_local:RadioListFilterElement">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxfui_local:LoadingIndicatorControl IsLoading="{Binding IsLoading}">
                        <dxe:ListBoxEdit AllowLiveDataShaping="False"
                                         EditValue="{Binding SelectedFilterValue}"
                                         ItemsSource="{Binding FilterValues}"
                                         ItemTemplate="{StaticResource FilterValueContainerTemplate}">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings EmptyItemText="{DXBinding '$dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterElementRadioAllItem)'}" ShowEmptyItem="True"/>
                            </dxe:ListBoxEdit.StyleSettings>
                        </dxe:ListBoxEdit>
                    </dxfui_local:LoadingIndicatorControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CheckedListFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="dxfui_local:CheckedListFilterElement">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxfui_local:LoadingIndicatorControl IsLoading="{Binding IsLoading}">
                        <dxe:ListBoxEdit AllowLiveDataShaping="False"
                                         EditValue="{Binding SelectedFilterValues}"
                                         ItemsSource="{Binding FilterValues}"
                                         ItemTemplate="{StaticResource FilterValueContainerTemplate}">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:CheckedListBoxEditStyleSettings/>
                            </dxe:ListBoxEdit.StyleSettings>
                        </dxe:ListBoxEdit>
                    </dxfui_local:LoadingIndicatorControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region MultiFilterElement-->

    <DataTemplate x:Key="MultiFilterConstantTemplate"/>

    <DataTemplate x:Key="MultiFilterBinaryTemplate">
        <dxfui_local:FilterValueEditor EditSettings="{Binding ValueItem.EditSettings}"
                                       FilterModel="{Binding}"
                                       NullText="{dxe:EditorStringId FilterRulesEmptyValueText}"
                                       Value="{Binding ValueItem.Value, Mode=TwoWay}"
                                       VerticalAlignment="Top"/>
    </DataTemplate>

    <DataTemplate x:Key="MultiFilterTernaryTemplate">
        <Grid VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="4"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{dxe:EditorStringId FilterElementClauseFrom}" VerticalAlignment="Center"/>
            <dxfui_local:FilterValueEditor EditSettings="{Binding LeftValueItem.EditSettings}"
                                           FilterModel="{Binding}"
                                           Grid.Column="1"
                                           NullText="{dxe:EditorStringId FilterRulesEmptyValueText}"
                                           Value="{Binding LeftValueItem.Value, Mode=TwoWay}"/>
            <TextBlock Grid.Row="2"
                       Text="{dxe:EditorStringId FilterElementClauseTo}"
                       VerticalAlignment="Center"/>
            <dxfui_local:FilterValueEditor EditSettings="{Binding RightValueItem.EditSettings}"
                                           FilterModel="{Binding}"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           NullText="{dxe:EditorStringId FilterRulesEmptyValueText}"
                                           Value="{Binding RightValueItem.Value, Mode=TwoWay}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MultiFilterFormatConditionsTemplate">
        <dxfui_local:FormatConditionFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" VerticalAlignment="Top"/>
    </DataTemplate>

    <DataTemplate x:Key="MultiFilterPredefinedTemplate">
        <dxfui_local:PredefinedFiltersElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" VerticalAlignment="Top"/>
    </DataTemplate>

    <DataTemplate x:Key="MultiFilterDateTimeOperatorsTemplate">
        <dxfui_local:DatePeriodsFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="MultiFilterPredefinedFormatConditionTemplate">
        <DataTemplate.Resources>
            <Style x:Key="baseEditorStyle" TargetType="{x:Type dxe:SpinEdit}">
                <Setter Property="MaskType" Value="Numeric"/>
                <Setter Property="MaskUseAsDisplayFormat" Value="True"/>
                <Setter Property="EditValueType" Value="{x:Type sys:Double}"/>
                <Setter Property="AllowRoundOutOfRangeValue" Value="True"/>
            </Style>
            <Style x:Key="itemsStyle"
                   BasedOn="{StaticResource baseEditorStyle}"
                   TargetType="{x:Type dxe:SpinEdit}">
                <Setter Property="Mask" Value="D"/>
                <Setter Property="MinValue" Value="1"/>
                <Setter Property="MaxValue" Value="2147483647"/>
                <!--{x:Static sys:Int32.MaxValue}-->
            </Style>
            <Style x:Key="percentStyle"
                   BasedOn="{StaticResource baseEditorStyle}"
                   TargetType="{x:Type dxe:SpinEdit}">
                <Setter Property="MaxValue" Value="100"/>
                <Setter Property="MinValue" Value="0"/>
            </Style>
        </DataTemplate.Resources>
        <Grid VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <dxe:SpinEdit x:Name="PART_Value" EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:TypeCastConverter}}">
                <dxe:SpinEdit.Style>
                    <Binding Path="ValueType">
                        <Binding.Converter>
                            <dxmvvm:ObjectToObjectConverter DefaultSource="Items" DefaultTarget="{StaticResource itemsStyle}">
                                <dxmvvm:MapItem Source="Percent" Target="{StaticResource percentStyle}"/>
                            </dxmvvm:ObjectToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxe:SpinEdit.Style>
            </dxe:SpinEdit>
            <dxe:ComboBoxEdit x:Name="PART_ValueType"
                              ApplyItemTemplateToSelectedItem="True"
                              EditValue="{Binding ValueType, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Column="1"
                              IsTextEditable="False"
                              Margin="4,0,0,0"
                              MinWidth="80">
                <dxe:ComboBoxEdit.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <dxmvvm:ObjectToObjectConverter x:Key="TopBottomValueTypeConverter">
                                <dxmvvm:MapItem Source="Items" Target="{dxe:EditorStringId TopBottomValueTypeItems}"/>
                                <dxmvvm:MapItem Source="Percent" Target="{dxe:EditorStringId TopBottomValueTypePercent}"/>
                            </dxmvvm:ObjectToObjectConverter>
                        </DataTemplate.Resources>
                        <TextBlock Text="{Binding Converter={StaticResource TopBottomValueTypeConverter}}"/>
                    </DataTemplate>
                </dxe:ComboBoxEdit.ItemTemplate>
                <dxe:ComboBoxEdit.ItemsSource>
                    <x:Array Type="{x:Type dxfui:TopBottomValueType}">
                        <dxfui_local:TopBottomValueType>Items</dxfui_local:TopBottomValueType>
                        <dxfui_local:TopBottomValueType>Percent</dxfui_local:TopBottomValueType>
                    </x:Array>
                </dxe:ComboBoxEdit.ItemsSource>
            </dxe:ComboBoxEdit>
        </Grid>
    </DataTemplate>

    <dxfui_local:OperationModelTemplateSelector x:Key="{dxfuit:FilteringUIThemeKey ResourceKey=MultiFilterElementOperatorTemplateSelector}"
                                                BinaryTemplate="{StaticResource MultiFilterBinaryTemplate}"
                                                ConstantTemplate="{StaticResource MultiFilterConstantTemplate}"
                                                DateTimeOperatorsTemplate="{StaticResource MultiFilterDateTimeOperatorsTemplate}"
                                                FormatConditionsTemplate="{StaticResource MultiFilterFormatConditionsTemplate}"
                                                PredefinedFormatConditionTemplate="{StaticResource MultiFilterPredefinedFormatConditionTemplate}"
                                                PredefinedTemplate="{StaticResource MultiFilterPredefinedTemplate}"
                                                TernaryTemplate="{StaticResource MultiFilterTernaryTemplate}"/>

    <DataTemplate x:Key="{dxfuit:FilteringUIThemeKey ResourceKey=MultiFilterElementTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <dxe:ComboBoxEdit x:Name="operatorSelector"
                              DisplayMember="DisplayName"
                              EditValue="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                              IsTextEditable="False"
                              ItemsSource="{Binding Items}"
                              Margin="0,0,0,12"/>
            <ContentPresenter x:Name="modelPresenter"
                              Content="{Binding Model}"
                              ContentTemplateSelector="{Binding DataContext.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Grid.Row="1"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.MultiFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:MultiFilterElement}">
        <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxfuit:FilteringUIThemeKey ResourceKey=MultiFilterElementTemplate}}"/>
    </Style>

    <!--#endregion-->

    <!--#region ExcelStyleFilterElement-->

    <ControlTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderSeparatorTemplate}">
        <Rectangle x:Name="PART_Separator"
                   Fill="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSeparatorColor}}"
                   Height="14"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center"
                   Width="1"/>
    </ControlTemplate>

    <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderBackgroundTemplate}">
        <Control Focusable="False"
                 Template="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderSeparatorTemplate}}"
                 Visibility="{DXBinding '(@a($dx:DXTabItem).DataContext is $dxfui:MultiFilterModel) ? `Visible` : `Collapsed`'}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FocusedHeaderBackgroundTemplate}">
        <Grid>
            <Path Data="M0,1 L1,0 2,1"
                  Fill="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSelectionMarkerBackground}}"
                  Height="6"
                  HorizontalAlignment="Center"
                  Stretch="Fill"
                  Stroke="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelBottomBorderColor}}"
                  StrokeThickness="1"
                  VerticalAlignment="Bottom"
                  Width="9"/>
            <Path Data="M0,0 L1,0"
                  Fill="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSelectionMarkerBackground}}"
                  Height="1"
                  HorizontalAlignment="Center"
                  Stretch="Fill"
                  Stroke="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSelectionMarkerBackground}}"
                  StrokeThickness="1"
                  VerticalAlignment="Bottom"
                  Width="7"/>
            <Control Focusable="False"
                     Template="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderSeparatorTemplate}}"
                     Visibility="{DXBinding '(@a($dx:DXTabItem).DataContext is $dxfui:MultiFilterModel) ? `Visible` : `Collapsed`'}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderStyle}" TargetType="dx:DXTabItem">
        <Setter Property="NormalBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderBackgroundTemplate}}"/>
        <Setter Property="HoverBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderBackgroundTemplate}}"/>
        <Setter Property="FocusedBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FocusedHeaderBackgroundTemplate}}"/>
        <Setter Property="SelectedBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FocusedHeaderBackgroundTemplate}}"/>
        <Setter Property="AutomationProperties.AutomationId" Value="{DXBinding Expr='@c.GetType().Name'}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPadding}}"/>
        <Setter Property="Focusable" Value="True"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="12,8,12,9"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterRulesTemplate}">
        <dxfui_local:MultiFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}"
                                        ShowAllLookUpFilterValues="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowAllLookUpFilterValues, RelativeSource={RelativeSource Self}}"
                                        ShowCounts="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowCounts, RelativeSource={RelativeSource Self}}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValuesTemplate}">
        <dxfui_local:CheckedTreeListFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}"
                                                  ShowAllLookUpFilterValues="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowAllLookUpFilterValues, RelativeSource={RelativeSource Self}}"
                                                  ShowCounts="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowCounts, RelativeSource={RelativeSource Self}}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderTemplate}">
        <TextBlock Text="{Binding}"/>
    </DataTemplate>

    <Style x:Key="tabControlStyle" TargetType="dx:DXTabControl">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="11,12,11,11"/>
        <Setter Property="TabContentCacheMode" Value="CacheAllTabs"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderStyle}}"/>
        <Setter Property="BackgroundTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=Background}}"
                            BorderBrush="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=BorderBrush}}"
                            BorderThickness="0,1,0,0"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}" TargetType="{x:Type dxcn:TabPanelContainer}">
                <Setter Property="NormalMargin" Value="0,0,0,-2"/>
                <Setter Property="Background"
                        Value="Transparent"
                        cs:id="Setter_0000"/>
            </Style>
        </Style.Resources>
    </Style>

    <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=Template}">
        <Grid Background="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelBackground}}">
            <dx:DXTabControl x:Name="tabControl"
                             dxfui_local:FilterElement.Context="{x:Null}"
                             ItemsSource="{Binding FilterModels}"
                             ItemTemplateSelector="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ActualTemplateSelector, RelativeSource={RelativeSource Mode=Self}}"
                             Style="{StaticResource tabControlStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxfui_local_native:ExcelStyleTabControlBehavior/>
                </dxmvvm:Interaction.Behaviors>
                <dx:DXTabControl.View>
                    <dx:TabControlScrollView ScrollButtonShowMode="Never">
                        <dx:TabControlScrollView.HeaderLocation>
                            <Binding Path="Owner.DataContext.ActualAllowedFilterTypes" RelativeSource="{RelativeSource Mode=Self}">
                                <Binding.Converter>
                                    <dxmvvm:ObjectToObjectConverter DefaultTarget="None">
                                        <dxmvvm:MapItem Source="All" Target="Top"/>
                                        <dxmvvm:MapItem Source="None" Target="Top"/>
                                    </dxmvvm:ObjectToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </dx:TabControlScrollView.HeaderLocation>
                    </dx:TabControlScrollView>
                </dx:DXTabControl.View>
                <dx:DXTabControl.ItemHeaderTemplate>
                    <DataTemplate>
                        <ContentPresenter x:Name="presenter" ContentTemplate="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderTemplate}}"/>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="true">
                                <Setter Property="Content"
                                        TargetName="presenter"
                                        Value="{dxe:EditorStringId FilterElementFilterValues}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="false">
                                <Setter Property="Content"
                                        TargetName="presenter"
                                        Value="{dxe:EditorStringId FilterElementFilterRules}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </dx:DXTabControl.ItemHeaderTemplate>
            </dx:DXTabControl>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.ExcelStyleFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:ExcelStyleFilterElement}">
        <Setter Property="dxfui_local_native:FilterElementHelper.FilterElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=Template}}"/>
        <Setter Property="FilterRulesTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterRulesTemplate}}"/>
        <Setter Property="FilterValuesTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValuesTemplate}}"/>
    </Style>

    <!--#endregion-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.DatePeriodsFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:DatePeriodsFilterElement}">
        <Setter Property="Height" Value="{DynamicResource {dxfuit:FilteringUIThemeKey ResourceKey=DatePeriodsFilterElementHeight}}"/>
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                                     DisplayMember="DisplayText"
                                     EditValue="{Binding SelectedPredefinedFilters, Mode=TwoWay}"
                                     ItemsSource="{Binding PredefinedFilters}"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                     SelectionMode="Multiple"
                                     ShowBorder="False">
                        <dxe:ListBoxEdit.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </dxe:ListBoxEdit.ItemsPanel>
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:CheckedListBoxEditStyleSettings/>
                        </dxe:ListBoxEdit.StyleSettings>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="{DynamicResource {dxfuit:FilteringUIThemeKey ResourceKey=DatePeriodsFilterElementHeightTouch}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CalendarFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:CalendarFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:DateNavigator AllowMultipleRanges="{Binding AllowMultipleDateRanges}"
                                       ColumnCount="1"
                                       IsMultiSelect="True"
                                       RowCount="1"
                                       SelectedDates="{Binding SelectedDates, Mode=TwoWay}"
                                       ShowTodayButton="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.PredefinedFiltersElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:PredefinedFiltersElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit AllowLiveDataShaping="False"
                                     EditValue="{Binding SelectedFilters}"
                                     ItemsSource="{Binding Filters}">
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:CheckedListBoxEditStyleSettings ShowSelectAllItem="False"/>
                        </dxe:ListBoxEdit.StyleSettings>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <dxfui_local:ValueCountContentControl Count="{Binding Count}">
                                    <TextBlock Text="{Binding Value.Name}"/>
                                </dxfui_local:ValueCountContentControl>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FormatConditionFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:FormatConditionFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit EditValue="{Binding SelectedFilters}"
                                     ItemsSource="{Binding Filters}"
                                     ShowBorder="False">
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:CheckedListBoxEditStyleSettings ShowSelectAllItem="False"/>
                        </dxe:ListBoxEdit.StyleSettings>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,1" Orientation="Horizontal">
                                    <dxg:FormatPreviewControl Content="{Binding Value.Format}" PreviewString="Aa"/>
                                    <dxfui_local:ValueCountContentControl Count="{Binding Count}"
                                                                          Margin="2,0,0,0"
                                                                          VerticalAlignment="Center">
                                        <TextBlock Text="{Binding Value.DisplayExpression}"/>
                                    </dxfui_local:ValueCountContentControl>
                                </StackPanel>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.RangeFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:RangeFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <DockPanel LastChildFill="False" Margin="0,0,0,8">
                            <dxe:SpinEdit x:Name="PART_SpinEditFrom"
                                          DockPanel.Dock="Left"
                                          EditValue="{Binding From, UpdateSourceTrigger=PropertyChanged}"
                                          MaxValue="{Binding To}"
                                          MinValue="{Binding Min}"
                                          ValidateOnTextInput="False"
                                          Width="80"/>
                            <dxe:SpinEdit x:Name="PART_SpinEditTo"
                                          DockPanel.Dock="Right"
                                          EditValue="{Binding To, UpdateSourceTrigger=PropertyChanged}"
                                          MaxValue="{Binding Max}"
                                          MinValue="{Binding From}"
                                          ValidateOnTextInput="False"
                                          Width="80"/>
                        </DockPanel>
                        <dxe:TrackBarEdit x:Name="PART_TrackBarEdit"
                                          EditValuePostDelay="300"
                                          EditValuePostMode="Delayed"
                                          IsMoveToPointEnabled="True"
                                          IsSnapToTickEnabled="True"
                                          Maximum="{Binding Max}"
                                          Minimum="{Binding Min}"
                                          SelectionEnd="{Binding To, Mode=TwoWay}"
                                          SelectionStart="{Binding From, Mode=TwoWay}"
                                          TickPlacement="None">
                            <dxe:TrackBarEdit.StyleSettings>
                                <dxe:TrackBarRangeStyleSettings/>
                            </dxe:TrackBarEdit.StyleSettings>
                        </dxe:TrackBarEdit>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.DateRangeFilterElement}"
           BasedOn="{StaticResource filterElementStyle}"
           TargetType="{x:Type dxfui_local:DateRangeFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel LastChildFill="False">
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                            <TextBlock Margin="0,0,8,0"
                                       Text="{dxe:EditorStringId FilterElementDateRangeFrom}"
                                       VerticalAlignment="Center"/>
                            <dxe:DateEdit x:Name="PART_DateEditFrom"
                                          AllowNullInput="False"
                                          EditValue="{Binding From, UpdateSourceTrigger=PropertyChanged}"
                                          MaxValue="{Binding To}"
                                          MinValue="{Binding Min}"
                                          ValidateOnTextInput="False"
                                          Width="100"/>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <TextBlock Margin="0,0,8,0"
                                       Text="{dxe:EditorStringId FilterElementDateRangeTo}"
                                       VerticalAlignment="Center"/>
                            <dxe:DateEdit x:Name="PART_DateEditTo"
                                          AllowNullInput="False"
                                          EditValue="{Binding To, UpdateSourceTrigger=PropertyChanged}"
                                          MaxValue="{Binding Max}"
                                          MinValue="{Binding From}"
                                          ValidateOnTextInput="False"
                                          Width="100"/>
                        </StackPanel>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>