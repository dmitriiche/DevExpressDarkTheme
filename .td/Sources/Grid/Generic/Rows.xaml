<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True"/>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel Name="headersPanel"
                                   ArrangeAccordingToVisibleIndex="True"
                                   dxgcore:GridColumn.HeaderPresenterType="Headers"
                                   Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedNoneColumnHeaderDropTargetFactory/>
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}">
        <dxgcore:OrdinaryStackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedLeftHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel Name="fixedLeftHeadersPanel"
                                   ArrangeAccordingToVisibleIndex="True"
                                   dxgcore:GridColumn.HeaderPresenterType="Headers"
                                   Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedLeftColumnHeaderDropTargetFactory/>
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedRightHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel Name="fixedRightHeadersPanel"
                                   ArrangeAccordingToVisibleIndex="True"
                                   dxgcore:GridColumn.HeaderPresenterType="Headers"
                                   Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedRightColumnHeaderDropTargetFactory/>
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal"/>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <dxgcore:DefaultControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}" TargetType="{x:Type ContentControl}">
        <!--END WPF-->
        <!--ONLY SL 
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}" TargetType="{x:Type ContentControl}">
    ONLY SL-->
        <ContentPresenter/>
        <!--BEGIN WPF-->
    </dxgcore:DefaultControlTemplate>

    <!--END WPF-->

    <!--ONLY SL 
    </ControlTemplate>
    ONLY SL-->

    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowToolTipTemplate}">
        <dx:DXDockPanel LastChildFill="True">
            <dxe:ErrorControl Content="{Binding}"/>
            <ContentPresenter Content="{Binding Path=ErrorContent}" VerticalAlignment="Center"/>
        </dx:DXDockPanel>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowControlTemplate}">
        <ContentControl Template="{Binding Path=View.RowDecorationTemplate}">
            <dxgcore:GridRowContent x:Name="PART_DataRow"
                                    MinHeight="{Binding Path=View.RowMinHeight}"
                                    Style="{Binding Path=View.RowStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <dx:DXDockPanel>
                        <dxgcore:RowIndicatorControl dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                                                     dxgcore:GridPopupMenu.GridMenuType="RowCell"
                                                     Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ItemTemplate}}"
                                                     Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                     Width="{Binding Path=View.ActualIndicatorWidth}"/>
                        <dxgcore:DetailRowsIndentControl ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"/>
                        <ContentPresenter x:Name="PART_RowOffsetPresenter"/>
                        <dxgcore:GridDetailExpandButtonContainer dx:FrameworkElementHelper.IsVisible="{Binding View.ActualShowDetailButtons}"/>
                        <Grid>
                            <dx:DataContentPresenter x:Name="PART_DataRowContent"
                                                     Content="{Binding}"
                                                     ContentTemplateSelector="{Binding Path=View.ActualDataRowTemplateSelector}"
                                                     Margin="0,0,0,1">
                                <ToolTipService.ToolTip>
                                    <Binding Path="(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:BoolToObjectConverter FalseValue="{x:Null}">
                                                <dx:BoolToObjectConverter.TrueValue>
                                                    <ToolTip Name="toolTip"
                                                             Content="{Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.ValidationError), RelativeSource={RelativeSource TemplatedParent}}"
                                                             ContentTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowToolTipTemplate}}"/>
                                                </dx:BoolToObjectConverter.TrueValue>
                                            </dx:BoolToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </ToolTipService.ToolTip>
                            </dx:DataContentPresenter>
                            <dx:DataContentPresenter x:Name="PART_CompactModeRowContent"
                                                     Content="{Binding}"
                                                     ContentTemplate="{Binding Path=View.DataRowCompactTemplate}"
                                                     Margin="0,0,0,1"
                                                     Visibility="Collapsed"/>
                        </Grid>
                    </dx:DXDockPanel>
                    <dxgcore:DetailRowsIndentControl Grid.Column="1"
                                                     IsLeft="False"
                                                     ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"/>
                </Grid>
            </dxgcore:GridRowContent>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ShowHorizontalLines}" Value="false">
                <Setter Property="dx:DataContentPresenter.Margin"
                        TargetName="PART_DataRowContent"
                        Value="0,0,0,0"/>
                <Setter Property="dx:DataContentPresenter.Margin"
                        TargetName="PART_CompactModeRowContent"
                        Value="0,0,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowBottomLine}" Value="true">
                <Setter Property="dx:DataContentPresenter.Margin"
                        TargetName="PART_DataRowContent"
                        Value="0,0,0,1"/>
                <Setter Property="dx:DataContentPresenter.Margin"
                        TargetName="PART_CompactModeRowContent"
                        Value="0,0,0,1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=View.IsCompactMode}" Value="True">
                <Setter Property="Visibility"
                        TargetName="PART_DataRowContent"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_CompactModeRowContent"
                        Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <dxgcore:DefaultStyle x:Key="{dxgt:GridRowThemeKey ResourceKey=RowStyle}" TargetType="{x:Type dxg:GridRowContent}">
        <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}"/>
        <Setter Property="dxg:GridRowContent.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=AlternateRow}" Value="True">
                <Setter Property="dxg:GridRowContent.Background" Value="{Binding Path=View.ActualAlternateRowBackground}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=HoverBackground}}"/>
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=HoverForeground}}"/>
            </DataTrigger>
        </Style.Triggers>
    </dxgcore:DefaultStyle>

    <!--END WPF-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FixedDelimiter}" TargetType="{x:Type dxg:FixedDelimiter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter ContentTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.RowsDelimiter}" TargetType="{x:Type dxg:RowsDelimiter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FitRowContentPresenter}" TargetType="{x:Type dxg:FitRowContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FitColumnContentTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FitRowLeftContentPresenter}" TargetType="{x:Type dxg:FitRowLeftContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FitColumnLeftContentTemplate}}"/>
    </Style>

    <!--BEGIN WPF-->

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}">
        <!--END WPF-->
        <!--ONLY SL 
    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}">
    ONLY SL-->
        <dxgcore:BandedViewContentSelector BandsLayout="{Binding Path=View.DataControl.BandsLayout}" HorizontalContentAlignment="Stretch">
            <dxgcore:BandedViewContentSelector.TableViewContent>
                <ControlTemplate>
                    <dxgcore:GridScrollablePart x:Name="ScrollablePart"
                                                dxgcore:GridControl.CurrentView="{Binding Path=View}"
                                                FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"
                                                FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                                FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                                FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                                FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                                ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}">
                        <dxgcore:GridScrollablePart.FitContent>
                            <dxgcore:FitRowContentPresenter Content="{Binding}"
                                                            dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                                                            dxgcore:GridPopupMenu.GridMenuType="RowCell"
                                                            VerticalContentAlignment="Stretch"/>
                        </dxgcore:GridScrollablePart.FitContent>
                        <dxgcore:GridScrollablePart.FixedLeftContent>
                            <dxgcore:CellItemsControl dxgcore:GridControl.CurrentView="{Binding View}"
                                                      ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}}"
                                                      ItemsSource="{Binding Path=FixedLeftCellData}"/>
                        </dxgcore:GridScrollablePart.FixedLeftContent>
                        <dxgcore:GridScrollablePart.FixedRightContent>
                            <dxgcore:CellItemsControl dxgcore:GridControl.CurrentView="{Binding View}"
                                                      ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}}"
                                                      ItemsSource="{Binding Path=FixedRightCellData}"/>
                        </dxgcore:GridScrollablePart.FixedRightContent>
                        <dxgcore:GridScrollablePart.FixedNoneContent>
                            <dxgcore:CellItemsControl dxgcore:GridControl.CurrentView="{Binding View}"
                                                      ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}}"
                                                      ItemsSource="{Binding Path=FixedNoneCellData}"/>
                        </dxgcore:GridScrollablePart.FixedNoneContent>
                    </dxgcore:GridScrollablePart>
                </ControlTemplate>
            </dxgcore:BandedViewContentSelector.TableViewContent>
            <dxgcore:BandedViewContentSelector.BandedViewContent>
                <ControlTemplate>
                    <dxgcore:GridScrollablePart x:Name="ScrollablePart"
                                                dxgcore:GridControl.CurrentView="{Binding Path=View}"
                                                FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}"
                                                FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                                FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                                FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                                FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                                ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}">
                        <dxgcore:GridScrollablePart.FitContent>
                            <dxgcore:FitRowContentPresenter Content="{Binding}"
                                                            dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                                                            dxgcore:GridPopupMenu.GridMenuType="RowCell"
                                                            VerticalContentAlignment="Stretch"/>
                        </dxgcore:GridScrollablePart.FitContent>
                        <dxgcore:GridScrollablePart.FixedLeftContent>
                            <dxgcore:CellItemsControl dxgcore:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedLeftCellData}">
                                <dxgcore:CellItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <dxgcore:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"/>
                                    </ControlTemplate>
                                </dxgcore:CellItemsControl.ItemsPanel>
                            </dxgcore:CellItemsControl>
                        </dxgcore:GridScrollablePart.FixedLeftContent>
                        <dxgcore:GridScrollablePart.FixedRightContent>
                            <dxgcore:CellItemsControl dxgcore:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedRightCellData}">
                                <dxgcore:CellItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <dxgcore:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"/>
                                    </ControlTemplate>
                                </dxgcore:CellItemsControl.ItemsPanel>
                            </dxgcore:CellItemsControl>
                        </dxgcore:GridScrollablePart.FixedRightContent>
                        <dxgcore:GridScrollablePart.FixedNoneContent>
                            <dxgcore:CellItemsControl dxgcore:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedNoneCellData}">
                                <dxgcore:CellItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <dxgcore:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"/>
                                    </ControlTemplate>
                                </dxgcore:CellItemsControl.ItemsPanel>
                            </dxgcore:CellItemsControl>
                        </dxgcore:GridScrollablePart.FixedNoneContent>
                    </dxgcore:GridScrollablePart>
                </ControlTemplate>
            </dxgcore:BandedViewContentSelector.BandedViewContent>
        </dxgcore:BandedViewContentSelector>
        <!--BEGIN WPF-->
    </dxgcore:DefaultDataTemplate>

    <!--END WPF-->

    <!--ONLY SL 
    </DataTemplate>
    ONLY SL-->

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowControlTemplate}">
        <Grid x:Name="group" Visibility="{Binding IsRowVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <dxgcore:RowIndicatorControl Grid.Column="0"
                                         Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=GroupPresenterTemplate}}"
                                         Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"
                                         Width="{Binding Path=View.ActualIndicatorWidth}"/>
            <dxgcore:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"/>
            <dxgcore:GroupRowOffsetPresenter Grid.Column="2"/>
            <ContentControl Grid.Column="3" Template="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowControlContainerTemplate}}">
                <ContentControl Template="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}}">
                    <dx:DoubleClicker Command="{Binding View.Commands.ChangeGroupExpanded}"
                                      CommandParameter="{Binding RowHandle.Value}"
                                      HorizontalContentAlignment="Stretch">
                        <dxgcore:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter"
                                                       Content="{Binding}"
                                                       ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}"
                                                       Style="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowPresenterStyle}}"/>
                    </dx:DoubleClicker>
                </ContentControl>
            </ContentControl>
            <dxgcore:DetailRowsIndentControl Grid.Column="4"
                                             IsLeft="False"
                                             ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowControlTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <dxgcore:RowIndicatorControl Grid.Column="0"
                                         Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AdditionalTemplate}}"
                                         Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"
                                         Width="{Binding Path=View.ActualIndicatorWidth}"/>
            <dxgcore:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"/>
            <dxgcore:GroupRowOffsetPresenter Grid.Column="2" Visibility="{Binding Path=IsFooterMarginControlVisible, Converter={StaticResource BooleanToVisibilityConverterInverted}}"/>
            <dxgcore:FooterMarginControl Grid.Column="3"
                                         NextRowLevel="{Binding Path=NextRowLevel}"
                                         ScrollingMargin="{Binding View.ScrollingHeaderVirtualizationMargin}"
                                         Visibility="{Binding Path=IsFooterMarginControlVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <dxgcore:FooterContentPresenter x:Name="PART_GroupFooterContentPresenter"
                                            Content="{Binding}"
                                            ContentTemplateSelector="{Binding Path=View.ActualGroupFooterRowTemplateSelector}"
                                            Grid.Column="4"
                                            Style="{Binding Path=View.FooterRowStyle}"/>
            <dxgcore:DetailRowsIndentControl Grid.Column="5"
                                             IsLeft="False"
                                             ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:CardViewThemeKey ResourceKey=GroupRowControlTemplate}">
        <ContentControl Template="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=GroupRowControlContainerTemplate}}">
            <ContentControl x:Name="headerContainer"
                            DockPanel.Dock="Top"
                            Template="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}}">
                <dx:DoubleClicker Command="{x:Static dxg:GridCommands.ChangeGroupExpanded}" CommandParameter="{Binding RowHandle.Value}">
                    <dxgcore:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter"
                                                   Content="{Binding}"
                                                   ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}"/>
                </dx:DoubleClicker>
            </ContentControl>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="DockPanel.Dock"
                        TargetName="headerContainer"
                        Value="Left"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=GroupPanelCaptionTemplate}" TargetType="dxg:GroupPanelCaptionControl">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=DetailHeaderControlTemplate}" TargetType="dxg:DetailHeaderControl">
        <dxgcore:DetailRowsContentControl DetailDescriptor="{Binding Path=DetailDescriptor, RelativeSource={RelativeSource TemplatedParent}}"
                                          ShowLastDetailMargin="{Binding Path=ShowLastDetailMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                          View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}">
            <dxgcore:DetailDescriptorContentBorder>
                <dxgcore:DetailRowContentPresenter Content="{Binding DetailDescriptor.HeaderContent, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ContentTemplate="{Binding DetailDescriptor.HeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                   MasterRowData="{TemplateBinding MasterRowData}"/>
            </dxgcore:DetailDescriptorContentBorder>
        </dxgcore:DetailRowsContentControl>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FixRowControl}" TargetType="{x:Type dxg:FixRowControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:FixRowControl">
                    <DockPanel x:Name="root">
                        <Border x:Name="offsetBorder" DockPanel.Dock="Bottom"/>
                        <Grid Background="Transparent"
                              HorizontalAlignment="Left"
                              cs:id="Grid_0000">
                            <Path x:Name="PinnedPath"
                                  Data="F1M1252,785L1252,786 1257,786 1257,791 1252,791 1252,792 1251,792 1251,789 1248,789 1248,788 1251,788 1251,785 1252,785z M1256,787L1252,787 1252,788 1256,788 1256,787z"
                                  Fill="{TemplateBinding Foreground}"
                                  Height="7"
                                  HorizontalAlignment="Left"
                                  Margin="3,0,3,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  VerticalAlignment="Center"
                                  Width="9"/>
                            <Path x:Name="UnpinnedPath"
                                  Data="F1M1265,788L1266,788 1266,783 1271,783 1271,788 1272,788 1272,789 1269,789 1269,792 1268,792 1268,789 1265,789 1265,788z M1267,784L1267,788 1268,788 1268,784 1267,784z"
                                  Fill="{TemplateBinding Foreground}"
                                  Height="9"
                                  HorizontalAlignment="Left"
                                  Margin="4,1,3,0"
                                  Stretch="Fill"
                                  VerticalAlignment="Center"
                                  Width="7"/>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FixedRowPosition" Value="None">
                            <Setter Property="Opacity"
                                    TargetName="UnpinnedPath"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="PinnedPath"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="ShowButton" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="PinnedPath"
                                    Value="0"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsLastFixedRow}" Value="True">
                            <Setter Property="Height"
                                    TargetName="offsetBorder"
                                    Value="{Binding Path=View.FixedLineHeight}"/>
                        </DataTrigger>
                        <Trigger Property="FixedRowPosition" Value="Bottom">
                            <Setter Property="DockPanel.Dock"
                                    TargetName="offsetBorder"
                                    Value="Top"/>
                        </Trigger>
                        <Trigger Property="IsButtonVisible" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="root"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                            <Setter Property="Width"
                                    TargetName="PinnedPath"
                                    Value="18"/>
                            <Setter Property="Height"
                                    TargetName="PinnedPath"
                                    Value="14"/>
                            <Setter Property="Width"
                                    TargetName="UnpinnedPath"
                                    Value="14"/>
                            <Setter Property="Height"
                                    TargetName="UnpinnedPath"
                                    Value="18"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>