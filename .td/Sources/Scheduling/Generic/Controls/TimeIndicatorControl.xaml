<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduling/themekeys"
                    xmlns:dxschv="http://schemas.devexpress.com/winfx/2008/xaml/scheduling/visual"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="{dx:SchedulingResource UICore.xaml, ShortPaths=True}"/>
        <dxt:ResourceDictionaryEx Source="{dx:SchedulingResource UIPreset.xaml, ShortPaths=True}"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{dxscht:SchedulerControlThemeKey ResourceKey=TimeIndicatorControlTemplate}" TargetType="dxschv:TimeIndicatorControl">
        <Border x:Name="border"
                Background="{StaticResource TimeIndicatorControl.Background}"
                BorderBrush="{StaticResource TimeIndicatorControl.BorderBrush}"
                BorderThickness="{StaticResource TimeIndicatorControl.BorderThickness}"
                Height="{StaticResource TimeIndicatorControl.Height}"/>
    </ControlTemplate>

    <Style x:Key="TimeIndicatorControl.DefaultStyle" TargetType="dxschv:TimeIndicatorControl">
        <Setter Property="Template" Value="{DynamicResource {dxscht:SchedulerControlThemeKey ResourceKey=TimeIndicatorControlTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>