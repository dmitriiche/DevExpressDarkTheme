<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dasboardthemes="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/themekeys"
                    xmlns:dxdash="http://schemas.devexpress.com/winfx/2008/xaml/dashboard"
                    xmlns:dxdashi="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxtm="http://schemas.devexpress.com/winfx/2008/xaml/treemap"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DataTemplate x:Key="tooltipTemplate">
        <TextBlock Background="{DynamicResource {dasboardthemes:TreemapItemThemeKey ResourceKey=ToolTipBackground}}"
                   FontSize="{DynamicResource {dasboardthemes:TreemapItemThemeKey ResourceKey=ToolTipFontSize}}"
                   FontWeight="{DynamicResource {dasboardthemes:TreemapItemThemeKey ResourceKey=ToolTipFontWeight}}"
                   Foreground="{DynamicResource {dasboardthemes:TreemapItemThemeKey ResourceKey=ToolTipForeground}}"
                   Margin="20,15,20,18"
                   Text="{Binding Item.ToolTip}"
                   TextWrapping="Wrap"/>
    </DataTemplate>

    <DataTemplate x:Key="ColorizerKey">
        <ContentControl>
            <dxdashi:DashboardTreemapColorizer/>
        </ContentControl>
    </DataTemplate>

    <dxdashi:TreemapMouseEventArgsConverter x:Key="TreemapMouseEventArgsConverter"/>

    <Style x:Key="{dasboardthemes:TreemapItemThemeKey ResourceKey=ViewStyle}" TargetType="{x:Type dxtm:TreeMapControl}">
        <Setter Property="LayoutAlgorithm" Value="{Binding LayoutAlgorithm}"/>
        <Setter Property="ToolTipEnabled" Value="True"/>
        <Setter Property="ToolTipContentTemplate" Value="{StaticResource tooltipTemplate}"/>
        <Setter Property="ToolTipGroupContentTemplate" Value="{StaticResource tooltipTemplate}"/>
        <Setter Property="SelectedItems" Value="{Binding SelectedItems}"/>
        <Setter Property="SelectionMode" Value="None"/>
        <Setter Property="ToolTipOptions">
            <Setter.Value>
                <dxtm:ToolTipOptions OpenMode="OnHover"/>
            </Setter.Value>
        </Setter>
        <Setter Property="DataAdapter" Value="{Binding Data, Converter={dxdashi:TreemapDataAdapterConverter}}"/>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxdashi:TreemapItemBehavior ColorizerTemplate="{StaticResource ColorizerKey}"/>
                        <dxmvvm:EventToCommand Command="{Binding OnTreeMapMouseUpCommand}"
                                               EventArgsConverter="{StaticResource TreemapMouseEventArgsConverter}"
                                               EventName="MouseUp"
                                               PassEventArgsToCommand="True"/>
                        <dxmvvm:EventToCommand Command="{Binding OnTreeMapMouseDoubleClickCommand}"
                                               EventArgsConverter="{StaticResource TreemapMouseEventArgsConverter}"
                                               EventName="MouseDoubleClick"
                                               PassEventArgsToCommand="True"/>
                        <dxmvvm:EventToCommand Command="{Binding OnTreeMapMouseMoveCommand}"
                                               EventArgsConverter="{StaticResource TreemapMouseEventArgsConverter}"
                                               EventName="MouseMove"
                                               PassEventArgsToCommand="True"/>
                        <dxmvvm:EventToCommand Command="{Binding OnTreeMapMouseDownCommand}"
                                               EventArgsConverter="{StaticResource TreemapMouseEventArgsConverter}"
                                               EventName="MouseDown"
                                               PassEventArgsToCommand="True"/>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <HierarchicalDataTemplate DataType="{x:Type dxdashi:TreemapNodeXpf}" ItemsSource="{Binding Children}">
                <dxtm:HierarchicalTreeMapItemControl Text="{Binding Label}"/>
            </HierarchicalDataTemplate>
        </Style.Resources>
    </Style>

    <DataTemplate x:Key="{dasboardthemes:TreemapItemThemeKey ResourceKey=Template}">
        <dxtm:TreeMapControl Style="{Binding Path=(dxdash:DashboardLayoutItem.ViewStyle), RelativeSource={RelativeSource TemplatedParent}}"/>
    </DataTemplate>

</ResourceDictionary>