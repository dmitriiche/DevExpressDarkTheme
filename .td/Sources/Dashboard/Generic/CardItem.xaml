<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdash="http://schemas.devexpress.com/winfx/2008/xaml/dashboard"
                    xmlns:dxdashi="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/internal"
                    xmlns:dxdasht="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Dashboard/Generic/DeltaValuePresenter.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <dxdashi:EventToCommandConverter x:Key="EventToCommandConverter"/>

    <dx:BoolInverseConverter x:Key="boolInverceConverter"/>

    <DataTemplate x:Key="ConditionFormattingImageTemplateKey">
        <dx:DXImage Source="{Binding Image}" Stretch="None"/>
    </DataTemplate>

    <DataTemplate x:Key="ActualValueTemplateKey">
        <TextBlock Text="{Binding DisplayText}"
                   TextDecorations="{Binding TextDecorations}"
                   TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="TitleTemplateKey">
        <dxe:TextEdit EditMode="InplaceInactive"
                      Text="{Binding DisplayText}"
                      TextDecorations="{Binding TextDecorations}"
                      TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="SubtitleTemplateKey">
        <dxe:TextEdit EditMode="InplaceInactive"
                      Text="{Binding DisplayText}"
                      TextDecorations="{Binding TextDecorations}"
                      TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="PercentVariationTemplateKey">
        <TextBlock Text="{Binding DisplayText}"
                   TextDecorations="{Binding TextDecorations}"
                   TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AbsoluteVariationTemplateKey">
        <TextBlock Text="{Binding DisplayText}"
                   TextDecorations="{Binding TextDecorations}"
                   TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="IndicatorTemplateKey">
        <dxdashi:DeltaValuePresenter IndicatorType="{Binding Path=IndicatorType}"
                                     IsGood="{Binding Path=IsGood}"
                                     Padding="1,0,1,0"
                                     ShowValue="False"/>
    </DataTemplate>

    <DataTemplate x:Key="SparklineTemplateKey">
        <Border Background="Transparent" cs:id="Border_0000">
            <Border.ToolTip>
                <StackPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdashi:DashboardLocalizationString SparklineTooltipStartValue}"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding TooltipValues.Start}"/>
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdashi:DashboardLocalizationString SparklineTooltipEndValue}"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding TooltipValues.End}"/>
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdashi:DashboardLocalizationString SparklineTooltipMinValue}"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding TooltipValues.Min}"/>
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdashi:DashboardLocalizationString SparklineTooltipMaxValue}"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding TooltipValues.Max}"/>
                    </DockPanel>
                </StackPanel>
            </Border.ToolTip>
            <dxe:SparklineEdit Background="Transparent"
                               EditValue="{Binding Value}"
                               Focusable="False"
                               StyleSettings="{Binding StyleSettings}"
                               cs:id="SparklineEdit_0000"/>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="ItemTemplate" TargetType="{x:Type dxdashi:CardItem}">
        <Grid>
            <Border Background="{Binding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=CardBackgroundCornerRadius}}"/>
            <Border x:Name="highlight"
                    Background="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=HighlightedBackground}}"
                    BorderBrush="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=HighlightedBorderBrush}}"
                    BorderThickness="1"
                    CornerRadius="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=CardBackgroundCornerRadius}}"
                    IsHitTestVisible="False"
                    Visibility="{DXBinding 'IsHighlighted || IsSelected ? `Visible` : `Collapsed`'}"/>
            <Grid Margin="{TemplateBinding Padding}">
                <dxmvvm:Interaction.Behaviors>
                    <dxdashi:CardLayoutBehavior AbsoluteVariationTemplate="{StaticResource AbsoluteVariationTemplateKey}"
                                                ActualValueTemplate="{StaticResource ActualValueTemplateKey}"
                                                BadForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=BadForeground}}"
                                                CardBackground="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=Background}}"
                                                ConditionFormattingImageTemplate="{StaticResource ConditionFormattingImageTemplateKey}"
                                                GoodForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=GoodForeground}}"
                                                IndicatorTemplate="{StaticResource IndicatorTemplateKey}"
                                                MainTextForeground="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=MainTextForeground}}"
                                                NeutralForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=NeutralForeground}}"
                                                PercentVariationTemplate="{StaticResource PercentVariationTemplateKey}"
                                                SparklineTemplate="{StaticResource SparklineTemplateKey}"
                                                SubtitleTemplate="{StaticResource SubtitleTemplateKey}"
                                                TitleTemplate="{StaticResource TitleTemplateKey}"
                                                WarningForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=WarningForeground}}"/>
                </dxmvvm:Interaction.Behaviors>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Background"
                        TargetName="highlight"
                        Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SelectedItemBackground}}"/>
                <Setter Property="BorderBrush"
                        TargetName="highlight"
                        Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SelectedItemBorder}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="{dxdasht:CardItemThemeKey ResourceKey=Template}">
        <dxdashi:CardItemsControl Style="{Binding Path=(dxdash:DashboardLayoutItem.ViewStyle), RelativeSource={RelativeSource TemplatedParent}}"/>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.Internal.CardItem}" TargetType="{x:Type dxdashi:CardItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ItemTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=CardItemBackground}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=CardItemBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16"/>
    </Style>

    <Style x:Key="{dxdasht:CardItemThemeKey ResourceKey=ViewStyle}" TargetType="{x:Type dxdashi:CardItemsControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemsSource" Value="{Binding ItemsSource}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdashi:CardsPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxdashi:CardItem/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Grid VerticalAlignment="Center">
                        <ScrollViewer CanContentScroll="True"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"
                                      Visibility="{Binding ShowCards}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <TextBlock FontWeight="Bold"
                                   HorizontalAlignment="Center"
                                   Text="{Binding WarningMessage}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding ShowWarning}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.Internal.CardItemContainer}" TargetType="{x:Type dxdashi:CardItemContainer}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="dxdashi:CardItemContainer">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ItemsControl>
                                    <dxmvvm:FocusBehavior EventName="MouseDown"/>
                                    <dxmvvm:EventToCommand Command="{Binding MouseDownCommand}"
                                                           EventArgsConverter="{StaticResource EventToCommandConverter}"
                                                           EventName="MouseDown"
                                                           MarkRoutedEventsAsHandled="True"
                                                           PassEventArgsToCommand="True"/>
                                    <dxmvvm:EventToCommand Command="{Binding MouseUpCommand}"
                                                           EventArgsConverter="{StaticResource EventToCommandConverter}"
                                                           EventName="MouseUp"
                                                           PassEventArgsToCommand="True"/>
                                    <dxmvvm:EventToCommand Command="{Binding MouseMoveCommand}"
                                                           EventArgsConverter="{StaticResource EventToCommandConverter}"
                                                           EventName="MouseMove"
                                                           PassEventArgsToCommand="True"/>
                                    <dxmvvm:EventToCommand Command="{Binding MouseDoubleClickCommand}"
                                                           EventArgsConverter="{StaticResource EventToCommandConverter}"
                                                           EventName="MouseDoubleClick"
                                                           PassEventArgsToCommand="True"/>
                                    <dxmvvm:EventToCommand Command="{Binding MouseLeaveCommand}"
                                                           EventArgsConverter="{StaticResource EventToCommandConverter}"
                                                           EventName="MouseLeave"
                                                           PassEventArgsToCommand="True"/>
                                </ItemsControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>