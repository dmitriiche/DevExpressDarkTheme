<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Core/Core/Bars/Themes/VS2019Dark/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=TextSplitterStyleInRibbonPageGroup}" TargetType="{x:Type dxb:TextSplitterControl}">
    <Setter Property="FirstStringHorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="SecondStringHorizontalAlignment" Value="Center" />
    <Setter Property="SecondStringMargin" Value="0" />
  </Style>
  <Style x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=NormalTextStyleInTextSplitter}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFF1F1F1" cs:id="Setter_0000" />
  </Style>
  <Style x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=SelectedTextStyleInTextSplitter}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFF1F1F1" cs:id="Setter_0000" />
  </Style>
  <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=GlyphCheckBorderInMenu}" TargetType="{x:Type ContentControl}">
    <Border x:Name="Root" Background="#FF3F3F46" MinHeight="20" MinWidth="20" cs:id="Border_0000">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=GlyphTriStateBorderInMenu}" TargetType="{x:Type ContentControl}">
    <Border x:Name="Root" Background="#FF3F3F46" MinHeight="20" MinWidth="20" cs:id="Border_0000">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=CheckInMenu}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" Background="Transparent" MinHeight="20" MinWidth="20" cs:id="Grid_0000">
      <Path Style="{StaticResource UIShape.Checked}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="FlowDirection" Value="RightToLeft">
        <Setter Property="RenderTransform" TargetName="Root">
          <Setter.Value>
            <ScaleTransform ScaleX="-1" ScaleY="1" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarCheckItemThemeKey ResourceKey=TriStateBorderInMenu}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" Background="Transparent" MinHeight="20" MinWidth="20" cs:id="Grid_0000">
      <Path Style="{StaticResource UIShape.Checked}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="FlowDirection" Value="RightToLeft">
        <Setter Property="RenderTransform" TargetName="Root">
          <Setter.Value>
            <ScaleTransform ScaleX="-1" ScaleY="1" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="CheckTriStateTemplate" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Path Style="{StaticResource UIShape.Checked}" Visibility="{Binding Path=(dxb:BarCheckItemLinkControlStatesProvider.CheckVisibility), RelativeSource={RelativeSource TemplatedParent}}" />
      <Border Background="#FF3E3E40" Height="8" Visibility="{Binding Path=(dxb:BarCheckItemLinkControlStatesProvider.TriStateVisibility), RelativeSource={RelativeSource TemplatedParent}}" Width="8" cs:id="Border_0000" />
      <Border Background="#FF007ACC" Visibility="{Binding Path=(dxb:BarCheckItemLinkControlStatesProvider.GlyphCheckVisibility), RelativeSource={RelativeSource TemplatedParent}}" cs:id="Border_0001">
        <ContentPresenter />
      </Border>
      <Border Background="#FF007ACC" Opacity="0.38" Visibility="{Binding Path=(dxb:BarCheckItemLinkControlStatesProvider.GlyphTriStateVisibility), RelativeSource={RelativeSource TemplatedParent}}" cs:id="Border_0002">
        <ContentPresenter />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="FlowDirection" Value="RightToLeft">
        <Setter Property="RenderTransform" TargetName="Root">
          <Setter.Value>
            <ScaleTransform ScaleX="-1" ScaleY="1" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>