<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Dark.v20.2;component/Ribbon/VS2019Dark/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Ribbon.v20.2;component/Themes/Generic/DXTreeView.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Path x:Name="Collapsed" Fill="#FFF1F1F1" Style="{StaticResource UIShape.Right}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}" cs:id="Path_0000" />
      <Path x:Name="Expanded" Fill="#FFF1F1F1" Style="{StaticResource UIShape.RightDown}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" cs:id="Path_0001" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Fill" TargetName="Collapsed" Value="#FF007ACC" cs:id="Setter_0000" />
        <Setter Property="Fill" TargetName="Expanded" Value="#FF007ACC" cs:id="Setter_0001" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Height" Value="22" />
    <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=ExpanderTemplate}}" />
    <Setter Property="Width" Value="21" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Item -->
  <ControlTemplate x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" cs:id="Border_0000" />
      <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF3E3E40" cs:id="ColorAnimation_0000" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF3E3E40" cs:id="ColorAnimation_0004" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0001" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0005" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0002" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0006" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF3E3E40" cs:id="ColorAnimation_0003" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0007" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewItemThemeKey ResourceKey=BorderTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
    <Setter Property="Margin" Value="20,0,0,0" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="44,0,0,0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=GlyphStyle}" TargetType="{x:Type Image}">
    <Setter Property="Margin" Value="3,3,0,3" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14,14,0,14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:DXTreeViewItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFF1F1F1" cs:id="Setter_0000" />
    <Setter Property="Margin" Value="4,3,4,3" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Group -->
  <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}" />
  <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="#FFF1F1F1" cs:id="Setter_0000" />
    <Setter Property="Margin" Value="0" />
  </Style>
  <ControlTemplate x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid Background="#FF2D2D30" cs:id="Grid_0000">
      <ContentControl Content="{TemplateBinding Content}" Margin="3" cs:id="ContentControl_0000" />
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:DXTreeViewGroupItemThemeKey ResourceKey=BorderTemplate}}" />
  </Style>
</ResourceDictionary>